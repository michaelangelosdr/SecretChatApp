// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: account.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pbcmd {

  /// <summary>Holder for reflection information generated from account.proto</summary>
  public static partial class AccountReflection {

    #region Descriptor
    /// <summary>File descriptor for account.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1hY2NvdW50LnByb3RvEgVwYmNtZBoJY21kLnByb3RvIuICCgpQQlVzZXJJ",
            "bmZvEgsKA3VpZBgBIAIoDRIMCgRuYW1lGAIgASgJEgwKBGhlYWQYAyABKAkS",
            "DQoFbW9uZXkYBCABKAQSDgoGc3RhdHVzGAUgASgNEgsKA3NleBgGIAEoDRIP",
            "CgdkaWFtb25kGAcgASgNEg0KBWN0aW1lGAggASgNEgwKBGFyZWEYCSABKA0S",
            "DQoFYnJpZWYYCiABKAkSCwoDdmlwGAsgASgNEhAKCGFyZWFJY29uGAwgASgJ",
            "EhAKCGFyZWFOYW1lGA0gASgJEgoKAmlwGA4gASgNEg0KBWF0aW1lGA8gASgN",
            "Eg8KB3ZpcHRpbWUYECABKA0SDQoFcG9pbnQYESABKAQSDwoHdW5pb25JZBgS",
            "IAEoBBIWCg51bmlvblVzZXJMZXZlbBgTIAEoBBItCg11c2VyVW5pb25JbmZv",
            "GBQgASgLMhYucGJjbWQuUEJVc2VyVW5pb25JbmZvImAKD1BCVXNlclVuaW9u",
            "SW5mbxIPCgd1bmlvbklkGBIgASgNEhEKCXVzZXJMZXZlbBgTIAEoDRIUCgxp",
            "c1N1cGVyVW5pb24YFCABKAgSEwoLY3JlYXRlVGFibGUYFSABKAgiNQoRUEJS",
            "ZXFBY2NvdW50TG9naW4SIAoEY29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBh",
            "cmFtIuUCChJQQlJlc3BBY2NvdW50TG9naW4SIAoDcmV0GAEgAigLMhMucGJj",
            "bWQuUEJDb21tUmVzdWx0EiMKCHVzZXJJbmZvGAIgASgLMhEucGJjbWQuUEJV",
            "c2VySW5mbxIQCghuZWVkSW5pdBgDIAEoDRISCgpmaXJzdExvZ2luGAQgASgN",
            "EicKCm1hdGNoSW5kZXgYBSABKAsyEy5wYmNtZC5QQk1hdGNoSW5kZXgSEAoI",
            "bmFtZUNvc3QYBiABKA0SFAoMbmFtZUNvc3RDbHViGAcgASgNEg4KBmNkblVy",
            "bBgIIAEoCRIQCghpbWdTbWFsbBgJIAEoCRIQCghpbWdMYXJnZRgKIAEoCRIO",
            "CgZzd2l0Y2gYCyABKA0SEAoIbWluTW9uZXkYDCABKAQSEgoKbWluRGlhbW9u",
            "ZBgNIAEoDRIOCgZvcmlnaW4YDiABKAkSFwoPY3VzdG9tZXJTZXJ2aWNlGA8g",
            "ASgJIjgKFFBCUmVxQWNjb3VudE9zc1BhcmFtEiAKBGNvbW0YASACKAsyEi5w",
            "YmNtZC5QQkNvbW1QYXJhbSKAAQoVUEJSZXNwQWNjb3VudE9zc1BhcmFtEiAK",
            "A3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBILCgNhcGkYAiABKAkS",
            "DAoEbmFtZRgDIAEoCRIMCgRqc29uGAQgASgJEgwKBGZpbGUYBSABKAkSDgoG",
            "ZXhwaXJlGAYgASgNIkIKEFBCUmVxQWNjb3VudEluZm8SIAoEY29tbRgBIAIo",
            "CzISLnBiY21kLlBCQ29tbVBhcmFtEgwKBHVpZHMYAiADKA0iVgoRUEJSZXNw",
            "QWNjb3VudEluZm8SIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0",
            "Eh8KBGxpc3QYAiADKAsyES5wYmNtZC5QQlVzZXJJbmZvIjUKEVBCUmVxQWNj",
            "b3VudE1vbmV5EiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbSJX",
            "ChJQQlJlc3BBY2NvdW50TW9uZXkSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJD",
            "b21tUmVzdWx0Eh8KBGluZm8YAiABKAsyES5wYmNtZC5QQlVzZXJJbmZvIn8K",
            "FlBCUmVxQWNjb3VudE1vZGlmeUluZm8SIAoEY29tbRgBIAIoCzISLnBiY21k",
            "LlBCQ29tbVBhcmFtEgwKBG5hbWUYAiABKAkSDAoEaGVhZBgDIAEoCRILCgNz",
            "ZXgYBCABKA0SCwoDcHdkGAUgASgJEg0KBWJyaWVmGAYgASgJIlwKF1BCUmVz",
            "cEFjY291bnRNb2RpZnlJbmZvEiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29t",
            "bVJlc3VsdBIfCgR1c2VyGAIgASgLMhEucGJjbWQuUEJVc2VySW5mbyJKChZQ",
            "QlJlcUFjY291bnRNb2JpbGVDb2RlEiAKBGNvbW0YASACKAsyEi5wYmNtZC5Q",
            "QkNvbW1QYXJhbRIOCgZudW1iZXIYAiACKAkiOwoXUEJSZXNwQWNjb3VudE1v",
            "YmlsZUNvZGUSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0InMK",
            "FlBCUmVxQWNjb3VudE1vYmlsZUF1dGgSIAoEY29tbRgBIAIoCzISLnBiY21k",
            "LlBCQ29tbVBhcmFtEg4KBm51bWJlchgCIAIoCRIMCgR0eXBlGAMgAigFEgwK",
            "BGNvZGUYBCABKAkSCwoDcHdkGAUgASgJIlcKF1BCUmVzcEFjY291bnRNb2Jp",
            "bGVBdXRoEiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBILCgN1",
            "aWQYAiABKA0SDQoFdG9rZW4YAyABKAkiTAoYUEJSZXFBY2NvdW50TW9iaWxl",
            "U2VjcmV0EiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRIOCgZu",
            "dW1iZXIYAiACKAkiTQoZUEJSZXNwQWNjb3VudE1vYmlsZVNlY3JldBIgCgNy",
            "ZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQSDgoGc2VjcmV0GAIgASgJ",
            "ImYKF1BCUmVxQWNjb3VudE1vYmlsZVJlcHdkEiAKBGNvbW0YASACKAsyEi5w",
            "YmNtZC5QQkNvbW1QYXJhbRIOCgZudW1iZXIYAiACKAkSDAoEY29kZRgDIAEo",
            "CRILCgNwd2QYBCACKAkiPAoYUEJSZXNwQWNjb3VudE1vYmlsZVJlcHdkEiAK",
            "A3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdCJXChVQQlJlcUFjY291",
            "bnRDaGVja0NvZGUSIAoEY29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFt",
            "Eg4KBm51bWJlchgCIAIoCRIMCgRjb2RlGAMgAigJIjoKFlBCUmVzcEFjY291",
            "bnRDaGVja0NvZGUSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0",
            "IlIKEFBCUmVxQWNjb3VudEF1dGgSIAoEY29tbRgBIAIoCzISLnBiY21kLlBC",
            "Q29tbVBhcmFtEgwKBGNvZGUYAiABKAkSDgoGb3BlbmlkGAMgASgJIlEKEVBC",
            "UmVzcEFjY291bnRBdXRoEiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJl",
            "c3VsdBILCgN1aWQYAiABKA0SDQoFdG9rZW4YAyABKAkiWAoWUEJSZXFBY2Nv",
            "dW50V2VpeGluQXV0aBIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFy",
            "YW0SDAoEY29kZRgCIAEoCRIOCgZydG9rZW4YAyABKAkidwoXUEJSZXNwQWNj",
            "b3VudFdlaXhpbkF1dGgSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVz",
            "dWx0EgsKA3VpZBgCIAEoDRINCgV0b2tlbhgDIAEoCRIOCgZydG9rZW4YBCAB",
            "KAkSDgoGZXhwaXJlGAUgASgNIjkKFVBCUmVxQWNjb3VudFVzZXJQcm9wcxIg",
            "CgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0iXgoWUEJSZXNwQWNj",
            "b3VudFVzZXJQcm9wcxIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1",
            "bHQSIgoEbGlzdBgCIAMoCzIULnBiY21kLlBCQWNjb3VudFByb3AiTQoaUEJS",
            "ZXFBY2NvdW50U2V0RGV2aWNlVG9rZW4SIAoEY29tbRgBIAIoCzISLnBiY21k",
            "LlBCQ29tbVBhcmFtEg0KBXRva2VuGAIgAigJIj8KG1BCUmVzcEFjY291bnRT",
            "ZXREZXZpY2VUb2tlbhIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1",
            "bHQiggEKDVBCQWNjb3VudFByb3ASCwoDcGlkGAEgAigNEgwKBG5hbWUYAiAB",
            "KAkSCwoDcGljGAMgASgJEgsKA251bRgEIAEoDRIOCgZleHBpcmUYBSABKA0S",
            "DAoEZGVzYxgGIAEoCRIMCgR0eXBlGAcgASgNEhAKCGdpZnRDb2RlGAggASgJ",
            "ImgKFFBCUmVxQWNjb3VudEZlZWRiYWNrEiAKBGNvbW0YASACKAsyEi5wYmNt",
            "ZC5QQkNvbW1QYXJhbRIPCgdjb250YWN0GAIgAigJEg8KB2NvbnRlbnQYAyAB",
            "KAkSDAoEcGljcxgEIAMoCSI5ChVQQlJlc3BBY2NvdW50RmVlZGJhY2sSIAoD",
            "cmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0IlcKF1BCUmVxQWNjb3Vu",
            "dFNldExvY2F0aW9uEiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJh",
            "bRIMCgRsb2NYGAIgAigJEgwKBGxvY1kYAyACKAkiPAoYUEJSZXNwQWNjb3Vu",
            "dFNldExvY2F0aW9uEiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3Vs",
            "dCI6ChZQQlJlcUFjY291bnRHZXRBdmNTaWduEiAKBGNvbW0YASACKAsyEi5w",
            "YmNtZC5QQkNvbW1QYXJhbSJZChdQQlJlc3BBY2NvdW50R2V0QXZjU2lnbhIg",
            "CgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQSDAoEc2lnbhgCIAEo",
            "CRIOCgZleHBpcmUYAyABKA0iOAoUUEJSZXFBY2NvdW50UHJlbG9naW4SIAoE",
            "Y29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtIssBChVQQlJlc3BBY2Nv",
            "dW50UHJlbG9naW4SIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0",
            "Eg4KBnBrZ1ZlchgCIAEoCRIOCgZwa2dVcmwYAyABKAkSEAoIcGF0Y2hVcmwY",
            "BCABKAkSEAoIcGF0Y2hWZXIYBSABKAkSDwoHcGtnU2l6ZRgGIAEoCRIPCgdw",
            "a2dEZXNjGAcgASgJEhEKCXBhdGNoVHlwZRgIIAEoCRIXCg9jdXN0b21lclNl",
            "cnZpY2UYCSABKAkiSQoVUEJSZXFBY2NvdW50QmxhY2tMaXN0EiAKBGNvbW0Y",
            "ASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRIOCgZvZmZzZXQYAiABKAkiawoW",
            "UEJSZXNwQWNjb3VudEJsYWNrTGlzdBIgCgNyZXQYASACKAsyEy5wYmNtZC5Q",
            "QkNvbW1SZXN1bHQSHwoEbGlzdBgCIAMoCzIRLnBiY21kLlBCVXNlckluZm8S",
            "DgoGb2Zmc2V0GAMgASgJIlQKFVBCUmVxQWNjb3VudEJsYWNrRWRpdBIgCgRj",
            "b21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0SDAoEdHlwZRgCIAIoDRIL",
            "CgN1aWQYAyACKA0iOgoWUEJSZXNwQWNjb3VudEJsYWNrRWRpdBIgCgNyZXQY",
            "ASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQiOgoWUEJSZXFBY2NvdW50Qmxh",
            "Y2tDb3VudBIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0iSgoX",
            "UEJSZXNwQWNjb3VudEJsYWNrQ291bnQSIAoDcmV0GAEgAigLMhMucGJjbWQu",
            "UEJDb21tUmVzdWx0Eg0KBWNvdW50GAIgASgNIqgBChZQQlJlcUFjY291bnRI",
            "dWF3ZWlBdXRoEiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRIQ",
            "CghwbGF5ZXJJZBgCIAEoCRITCgtkaXNwbGF5TmFtZRgDIAEoCRIOCgZpc0F1",
            "dGgYBCABKA0SFAoMZ2FtZUF1dGhTaWduGAUgASgJEgoKAnRzGAYgASgJEhMK",
            "C3BsYXllckxldmVsGAcgASgJIlcKF1BCUmVzcEFjY291bnRIdWF3ZWlBdXRo",
            "EiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBILCgN1aWQYAiAB",
            "KA0SDQoFdG9rZW4YAyABKAkiKgoKUEJLaWNrVXNlchIMCgRjb2RlGAEgAigN",
            "Eg4KBnJlYXNvbhgCIAEoCSJJCiVQQlJlcUFjY291bnRWaGtkYXBpVmhrZHdl",
            "YlZpZXdDb250cm9sEiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJh",
            "bSJKCiZQQlJlc3BBY2NvdW50VmhrZGFwaVZoa2R3ZWJWaWV3Q29udHJvbBIg",
            "CgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQiTgoqUEJSZXFBY2Nv",
            "dW50VmhrZGFwaURpZ2l0YWxNb25leU1hbGxDb250cm9sEiAKBGNvbW0YASAC",
            "KAsyEi5wYmNtZC5QQkNvbW1QYXJhbSJPCitQQlJlc3BBY2NvdW50VmhrZGFw",
            "aURpZ2l0YWxNb25leU1hbGxDb250cm9sEiAKA3JldBgBIAIoCzITLnBiY21k",
            "LlBCQ29tbVJlc3VsdCJZCiVQQlJlcUFjY291bnRWaGtkYXBpR2V0QlRDRXhj",
            "aGFuZ2VSYXRlEiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRIO",
            "CgZTeW1ib2wYAiACKAkiWAomUEJSZXNwQWNjb3VudFZoa2RhcGlHZXRCVENF",
            "eGNoYW5nZVJhdGUSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0",
            "EgwKBHJhdGUYAiACKAkibAofUEJSZXFBY2NvdW50VmhrZGFwaUFjdFZIS0RU",
            "b0JUQxIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0SCwoDb2lk",
            "GAIgAigJEgsKA3BpbhgDIAIoCRINCgV0b2tlbhgEIAIoCSJECiBQQlJlc3BB",
            "Y2NvdW50VmhrZGFwaUFjdFZIS0RUb0JUQxIgCgNyZXQYASACKAsyEy5wYmNt",
            "ZC5QQkNvbW1SZXN1bHQiQAocUEJSZXFBY2NvdW50VmhrZGFwaUdldENvbmZp",
            "ZxIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0iVQodUEJSZXNw",
            "QWNjb3VudFZoa2RhcGlHZXRDb25maWcSIAoDcmV0GAEgAigLMhMucGJjbWQu",
            "UEJDb21tUmVzdWx0EhIKCmNvbmZpZ0xpc3QYAiACKAkicgocUEJSZXFBY2Nv",
            "dW50VmhrZGFwaUdpdmVNb25leRIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJD",
            "b21tUGFyYW0SFAoMcmVjaXBpZW50dWlkGAIgAigJEg0KBW1vbmV5GAMgAigJ",
            "EgsKA3B3ZBgEIAIoCSJBCh1QQlJlc3BBY2NvdW50VmhrZGFwaUdpdmVNb25l",
            "eRIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQiWQoYUEJSZXFB",
            "Y2NvdW50R2V0UmVjb3JkTG9nEiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNv",
            "bW1QYXJhbRIMCgRwYWdlGAIgASgNEg0KBWxpbWl0GAMgASgNIksKGVBCUmVz",
            "cEFjY291bnRHZXRSZWNvcmRMb2cSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJD",
            "b21tUmVzdWx0EgwKBGxpc3QYAiABKAkiOAoUUEJSZXFGdHBheUdldFBheUxp",
            "c3QSIAoEY29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtIkcKFVBCUmVz",
            "cEZ0cGF5R2V0UGF5TGlzdBIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1S",
            "ZXN1bHQSDAoEbGlzdBgCIAEoCSJoChZQQlJlcUZ0cGF5UGF5U3VibWl0QWN0",
            "EiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRINCgVwYXlJZBgC",
            "IAEoDRINCgVtb25leRgDIAEoDRIOCgZjYXJkTm8YBCABKAkiTAoXUEJSZXNw",
            "RnRwYXlQYXlTdWJtaXRBY3QSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21t",
            "UmVzdWx0Eg8KB3Nob3dVcmwYAiABKAkiNQoRUEJSZXFGdHBheUdldEJhSWQS",
            "IAoEY29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtIkMKElBCUmVzcEZ0",
            "cGF5R2V0QmFJZBIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQS",
            "CwoDaWRzGAIgASgJIrsBChhQQlJlcUZ0cGF5TGF1bmNoV2l0aGRyYXcSIAoE",
            "Y29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtEg0KBW1vbmV5GAIgASgN",
            "EhAKCHJlYWxuYW1lGAMgASgJEg4KBmlkY2FyZBgEIAEoCRIOCgZiYXR5cGUY",
            "BSABKAkSDgoGYmFuYW1lGAYgASgJEg4KBmJhYWRkchgHIAEoCRIPCgdwaG9u",
            "ZU5vGAggASgJEgsKA3B3ZBgJIAIoCSI9ChlQQlJlc3BGdHBheUxhdW5jaFdp",
            "dGhkcmF3EiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdCJACg1Q",
            "QlJlcUNoZWNrUElOEiAKBGNvbW0YASACKAsyEi5wYmNtZC5QQkNvbW1QYXJh",
            "bRINCgV0b2tlbhgCIAIoCSIyCg5QQlJlc3BDaGVja1BJThIgCgNyZXQYASAC",
            "KAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQiXwoQUEJSZXFHZXRGbG93TGlzdBIg",
            "CgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0SDAoEcGFnZRgCIAEo",
            "DRINCgVsaW1pdBgDIAEoDRIMCgR0eXBlGAQgASgNIkMKEVBCUmVzcEdldEZs",
            "b3dMaXN0EiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBIMCgRs",
            "aXN0GAIgASgJIkAKHFBCUmVxRnRwYXlHZXRIaXN0b3J5Q2FyZEluZm8SIAoE",
            "Y29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtIrgBCh1QQlJlc3BGdHBh",
            "eUdldEhpc3RvcnlDYXJkSW5mbxIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNv",
            "bW1SZXN1bHQSEAoIcmVhbG5hbWUYAiABKAkSDgoGaWRjYXJkGAMgASgJEg4K",
            "BmJhdHlwZRgEIAEoCRISCgpiYXR5cGVuYW1lGAUgASgJEg4KBmJhbmFtZRgG",
            "IAEoCRIOCgZiYWFkZHIYByABKAkSDwoHcGhvbmVObxgIIAEoCSKSAQocUEJS",
            "ZXFBY2NvdW50VmhrZGFwaVZoa2RMb2dJbhIgCgRjb21tGAEgAigLMhIucGJj",
            "bWQuUEJDb21tUGFyYW0SDgoGbnVtYmVyGAIgAigJEgsKA3B3ZBgDIAIoCRIM",
            "CgR0eXBlGAQgAigJEhMKC2NvdW50cnlDb2RlGAUgASgJEhAKCGFyZWFDb2Rl",
            "GAYgASgJIlQKHVBCUmVzcEFjY291bnRWaGtkYXBpVmhrZExvZ0luEiAKA3Jl",
            "dBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBIRCglsb2dpbkRhdGEYAiAB",
            "KAkibAodUEJSZXFBY2NvdW50VmhrZGFwaVZoa2RTZXRQaW4SIAoEY29tbRgB",
            "IAIoCzISLnBiY21kLlBCQ29tbVBhcmFtEgsKA3BpbhgCIAIoCRIMCgRjb2Rl",
            "GAMgASgJEg4KBm51bWJlchgEIAEoCSJCCh5QQlJlc3BBY2NvdW50VmhrZGFw",
            "aVZoa2RTZXRQaW4SIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0",
            "ImMKIFBCUmVxQWNjb3VudFZoa2RhcGlWaGtkR2V0QXNzZXRzEiAKBGNvbW0Y",
            "ASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRIOCgZVc2VySWQYAiACKAkSDQoF",
            "VG9rZW4YAyACKAkiWQohUEJSZXNwQWNjb3VudFZoa2RhcGlWaGtkR2V0QXNz",
            "ZXRzEiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBISCgphc3Nl",
            "dHNEYXRhGAIgASgJIkIKHlBCUmVxQWNjb3VudFZoa2RhcGlHZXRGbG93TGlz",
            "dBIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0iVQofUEJSZXNw",
            "QWNjb3VudFZoa2RhcGlHZXRGbG93TGlzdBIgCgNyZXQYASACKAsyEy5wYmNt",
            "ZC5QQkNvbW1SZXN1bHQSEAoIbGlzdERhdGEYAiABKAkiQwofUEJSZXFBY2Nv",
            "dW50VmhrZGFwaVZoa2RJc0hhc1BpbhIgCgRjb21tGAEgAigLMhIucGJjbWQu",
            "UEJDb21tUGFyYW0iUQogUEJSZXNwQWNjb3VudFZoa2RhcGlWaGtkSXNIYXNQ",
            "aW4SIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0EgsKA3BpbhgC",
            "IAIoCSK0AQodUEJSZXFBY2NvdW50VkdQYXlVcGRhdGVBc3NldHMSIAoEY29t",
            "bRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtEg0KBVRva2VuGAIgASgJEg0K",
            "BU1vbmV5GAMgASgNEg0KBURDTnVtGAQgASgJEgwKBFR5cGUYBSABKA0SEAoI",
            "QXNzZXRzSUQYBiABKAkSEgoKQXNzZXRzTmFtZRgHIAEoCRIQCghBY2N1cmFj",
            "eRgIIAEoCSJCCh5QQlJlc3BBY2NvdW50VkdQYXlVcGRhdGVBc3NldHMSIAoD",
            "cmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0ImAKG1BCUmVxQWNjb3Vu",
            "dFZHUGF5R2V0QWRkcmVzcxIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21t",
            "UGFyYW0SEAoIQXNzZXRzSUQYAiABKAkSDQoFVG9rZW4YAyABKAkiTgocUEJS",
            "ZXNwQWNjb3VudFZHUGF5R2V0QWRkcmVzcxIgCgNyZXQYASACKAsyEy5wYmNt",
            "ZC5QQkNvbW1SZXN1bHQSDAoEZGF0YRgCIAEoCSJnCiJQQlJlcUFjY291bnRW",
            "R1BheUdldFdpdGhkcmF3Q29uZmlnEiAKBGNvbW0YASACKAsyEi5wYmNtZC5Q",
            "QkNvbW1QYXJhbRIQCghBc3NldHNJRBgCIAEoCRINCgVUb2tlbhgDIAEoCSJV",
            "CiNQQlJlc3BBY2NvdW50VkdQYXlHZXRXaXRoZHJhd0NvbmZpZxIgCgNyZXQY",
            "ASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQSDAoEZGF0YRgCIAEoCSKgAQok",
            "UEJSZXFBY2NvdW50VkdQYXlBcHBseVRyYW5zYWN0aW9uT3V0EiAKBGNvbW0Y",
            "ASACKAsyEi5wYmNtZC5QQkNvbW1QYXJhbRINCgVUb2tlbhgCIAEoCRIOCgZD",
            "b2luSUQYAyABKAkSEwoLQ29pbkFkZHJlc3MYBCABKAkSFQoNQXBwbHlRdWFu",
            "dGl0eRgFIAEoCRILCgNwd2QYBiACKAkiSQolUEJSZXNwQWNjb3VudFZHUGF5",
            "QXBwbHlUcmFuc2FjdGlvbk91dBIgCgNyZXQYASACKAsyEy5wYmNtZC5QQkNv",
            "bW1SZXN1bHQihwEKKFBCUmVxQWNjb3VudFZHUGF5R2V0QXNzZXRzUmVjb3Jk",
            "UGFnZUxpc3QSIAoEY29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtEg0K",
            "BVRva2VuGAIgASgJEhAKCEFzc2V0c0lEGAMgASgJEhgKEEFzc2V0c1JlY29y",
            "ZFR5cGUYBCABKA0iWwopUEJSZXNwQWNjb3VudFZHUGF5R2V0QXNzZXRzUmVj",
            "b3JkUGFnZUxpc3QSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVzdWx0",
            "EgwKBGxpc3QYAiABKAkiXAocUEJSZXFBY2NvdW50VkdQYXlWaGtkVG9Nb25l",
            "eRIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21tUGFyYW0SDQoFVG9rZW4Y",
            "AiABKAkSCwoDT2lkGAMgASgJIkEKHVBCUmVzcEFjY291bnRWR1BheVZoa2RU",
            "b01vbmV5EiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdCI1ChFQ",
            "QlJlcUdldFBheVN0YXR1cxIgCgRjb21tGAEgAigLMhIucGJjbWQuUEJDb21t",
            "UGFyYW0iSwoPUEJQYXlTdGF0dXNMaXN0Eg0KBXBheUlkGAEgASgNEgwKBG5h",
            "bWUYAiABKAkSDgoGc3RhdHVzGAMgASgNEgsKA21zZxgEIAEoCSJcChJQQlJl",
            "c3BHZXRQYXlTdGF0dXMSIAoDcmV0GAEgAigLMhMucGJjbWQuUEJDb21tUmVz",
            "dWx0EiQKBGxpc3QYAiADKAsyFi5wYmNtZC5QQlBheVN0YXR1c0xpc3QiQgoe",
            "UEJSZXFBY2NvdW50SXNDaGFyZ2VDaGFuZ2VOYW1lEiAKBGNvbW0YASACKAsy",
            "Ei5wYmNtZC5QQkNvbW1QYXJhbSJSCh9QQlJlc3BBY2NvdW50SXNDaGFyZ2VD",
            "aGFuZ2VOYW1lEiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBIN",
            "CgVtb25leRgCIAEoDSJRCh5QQlJlcUZ0cGF5R2V0TGF1bmNoV2l0aGRyYXdG",
            "ZWUSIAoEY29tbRgBIAIoCzISLnBiY21kLlBCQ29tbVBhcmFtEg0KBW1vbmV5",
            "GAIgASgNIocBCh9QQlJlc3BGdHBheUdldExhdW5jaFdpdGhkcmF3RmVlEiAK",
            "A3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBIOCgZsaW1pdHMYAiAB",
            "KAkSEQoJcmVhbG1vbmV5GAMgASgJEgsKA2ZlZRgEIAEoCRISCgpkZWNybGlt",
            "aXRzGAUgASgJIjcKE1BCUmVxR2V0QXV0b0hlYWRJbWcSIAoEY29tbRgBIAIo",
            "CzISLnBiY21kLlBCQ29tbVBhcmFtIkUKFFBCUmVzcEdldEF1dG9IZWFkSW1n",
            "EiAKA3JldBgBIAIoCzITLnBiY21kLlBCQ29tbVJlc3VsdBILCgN1cmwYAiAB",
            "KAkiOAoUUEJSZXFDaGVja1BheURpc2FibGUSIAoEY29tbRgBIAIoCzISLnBi",
            "Y21kLlBCQ29tbVBhcmFtIjkKFVBCUmVzcENoZWNrUGF5RGlzYWJsZRIgCgNy",
            "ZXQYASACKAsyEy5wYmNtZC5QQkNvbW1SZXN1bHQqVAoQUEJBY2NvdW50Vmlw",
            "VHlwZRIVChFBY2NvdW50X1ZpcFNpbHZlchAAEhMKD0FjY291bnRfVmlwR29s",
            "ZBAKEhQKEEFjY291bnRfVmlwQmxhY2sQFCo1ChF1bmlvblVzZXJMZXZlbERl",
            "ZhIPCgt1bmlvbl9vd25lchBkEg8KC3VuaW9uX2FkbWluEApCFloUcG9rZXIv",
            "cGIvcGJjbWQ7cGJjbWQ="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Pbcmd.CmdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pbcmd.PBAccountVipType), typeof(global::Pbcmd.unionUserLevelDef), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBUserInfo), global::Pbcmd.PBUserInfo.Parser, new[]{ "Uid", "Name", "Head", "Money", "Status", "Sex", "Diamond", "Ctime", "Area", "Brief", "Vip", "AreaIcon", "AreaName", "Ip", "Atime", "Viptime", "Point", "UnionId", "UnionUserLevel", "UserUnionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBUserUnionInfo), global::Pbcmd.PBUserUnionInfo.Parser, new[]{ "UnionId", "UserLevel", "IsSuperUnion", "CreateTable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountLogin), global::Pbcmd.PBReqAccountLogin.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountLogin), global::Pbcmd.PBRespAccountLogin.Parser, new[]{ "Ret", "UserInfo", "NeedInit", "FirstLogin", "MatchIndex", "NameCost", "NameCostClub", "CdnUrl", "ImgSmall", "ImgLarge", "Switch", "MinMoney", "MinDiamond", "Origin", "CustomerService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountOssParam), global::Pbcmd.PBReqAccountOssParam.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountOssParam), global::Pbcmd.PBRespAccountOssParam.Parser, new[]{ "Ret", "Api", "Name", "Json", "File", "Expire" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountInfo), global::Pbcmd.PBReqAccountInfo.Parser, new[]{ "Comm", "Uids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountInfo), global::Pbcmd.PBRespAccountInfo.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountMoney), global::Pbcmd.PBReqAccountMoney.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountMoney), global::Pbcmd.PBRespAccountMoney.Parser, new[]{ "Ret", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountModifyInfo), global::Pbcmd.PBReqAccountModifyInfo.Parser, new[]{ "Comm", "Name", "Head", "Sex", "Pwd", "Brief" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountModifyInfo), global::Pbcmd.PBRespAccountModifyInfo.Parser, new[]{ "Ret", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountMobileCode), global::Pbcmd.PBReqAccountMobileCode.Parser, new[]{ "Comm", "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountMobileCode), global::Pbcmd.PBRespAccountMobileCode.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountMobileAuth), global::Pbcmd.PBReqAccountMobileAuth.Parser, new[]{ "Comm", "Number", "Type", "Code", "Pwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountMobileAuth), global::Pbcmd.PBRespAccountMobileAuth.Parser, new[]{ "Ret", "Uid", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountMobileSecret), global::Pbcmd.PBReqAccountMobileSecret.Parser, new[]{ "Comm", "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountMobileSecret), global::Pbcmd.PBRespAccountMobileSecret.Parser, new[]{ "Ret", "Secret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountMobileRepwd), global::Pbcmd.PBReqAccountMobileRepwd.Parser, new[]{ "Comm", "Number", "Code", "Pwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountMobileRepwd), global::Pbcmd.PBRespAccountMobileRepwd.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountCheckCode), global::Pbcmd.PBReqAccountCheckCode.Parser, new[]{ "Comm", "Number", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountCheckCode), global::Pbcmd.PBRespAccountCheckCode.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountAuth), global::Pbcmd.PBReqAccountAuth.Parser, new[]{ "Comm", "Code", "Openid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountAuth), global::Pbcmd.PBRespAccountAuth.Parser, new[]{ "Ret", "Uid", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountWeixinAuth), global::Pbcmd.PBReqAccountWeixinAuth.Parser, new[]{ "Comm", "Code", "Rtoken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountWeixinAuth), global::Pbcmd.PBRespAccountWeixinAuth.Parser, new[]{ "Ret", "Uid", "Token", "Rtoken", "Expire" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountUserProps), global::Pbcmd.PBReqAccountUserProps.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountUserProps), global::Pbcmd.PBRespAccountUserProps.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountSetDeviceToken), global::Pbcmd.PBReqAccountSetDeviceToken.Parser, new[]{ "Comm", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountSetDeviceToken), global::Pbcmd.PBRespAccountSetDeviceToken.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBAccountProp), global::Pbcmd.PBAccountProp.Parser, new[]{ "Pid", "Name", "Pic", "Num", "Expire", "Desc", "Type", "GiftCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountFeedback), global::Pbcmd.PBReqAccountFeedback.Parser, new[]{ "Comm", "Contact", "Content", "Pics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountFeedback), global::Pbcmd.PBRespAccountFeedback.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountSetLocation), global::Pbcmd.PBReqAccountSetLocation.Parser, new[]{ "Comm", "LocX", "LocY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountSetLocation), global::Pbcmd.PBRespAccountSetLocation.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountGetAvcSign), global::Pbcmd.PBReqAccountGetAvcSign.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountGetAvcSign), global::Pbcmd.PBRespAccountGetAvcSign.Parser, new[]{ "Ret", "Sign", "Expire" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountPrelogin), global::Pbcmd.PBReqAccountPrelogin.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountPrelogin), global::Pbcmd.PBRespAccountPrelogin.Parser, new[]{ "Ret", "PkgVer", "PkgUrl", "PatchUrl", "PatchVer", "PkgSize", "PkgDesc", "PatchType", "CustomerService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountBlackList), global::Pbcmd.PBReqAccountBlackList.Parser, new[]{ "Comm", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountBlackList), global::Pbcmd.PBRespAccountBlackList.Parser, new[]{ "Ret", "List", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountBlackEdit), global::Pbcmd.PBReqAccountBlackEdit.Parser, new[]{ "Comm", "Type", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountBlackEdit), global::Pbcmd.PBRespAccountBlackEdit.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountBlackCount), global::Pbcmd.PBReqAccountBlackCount.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountBlackCount), global::Pbcmd.PBRespAccountBlackCount.Parser, new[]{ "Ret", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountHuaweiAuth), global::Pbcmd.PBReqAccountHuaweiAuth.Parser, new[]{ "Comm", "PlayerId", "DisplayName", "IsAuth", "GameAuthSign", "Ts", "PlayerLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountHuaweiAuth), global::Pbcmd.PBRespAccountHuaweiAuth.Parser, new[]{ "Ret", "Uid", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBKickUser), global::Pbcmd.PBKickUser.Parser, new[]{ "Code", "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiVhkdwebViewControl), global::Pbcmd.PBReqAccountVhkdapiVhkdwebViewControl.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiVhkdwebViewControl), global::Pbcmd.PBRespAccountVhkdapiVhkdwebViewControl.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiDigitalMoneyMallControl), global::Pbcmd.PBReqAccountVhkdapiDigitalMoneyMallControl.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiDigitalMoneyMallControl), global::Pbcmd.PBRespAccountVhkdapiDigitalMoneyMallControl.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiGetBTCExchangeRate), global::Pbcmd.PBReqAccountVhkdapiGetBTCExchangeRate.Parser, new[]{ "Comm", "Symbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiGetBTCExchangeRate), global::Pbcmd.PBRespAccountVhkdapiGetBTCExchangeRate.Parser, new[]{ "Ret", "Rate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiActVHKDToBTC), global::Pbcmd.PBReqAccountVhkdapiActVHKDToBTC.Parser, new[]{ "Comm", "Oid", "Pin", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiActVHKDToBTC), global::Pbcmd.PBRespAccountVhkdapiActVHKDToBTC.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiGetConfig), global::Pbcmd.PBReqAccountVhkdapiGetConfig.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiGetConfig), global::Pbcmd.PBRespAccountVhkdapiGetConfig.Parser, new[]{ "Ret", "ConfigList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiGiveMoney), global::Pbcmd.PBReqAccountVhkdapiGiveMoney.Parser, new[]{ "Comm", "Recipientuid", "Money", "Pwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiGiveMoney), global::Pbcmd.PBRespAccountVhkdapiGiveMoney.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountGetRecordLog), global::Pbcmd.PBReqAccountGetRecordLog.Parser, new[]{ "Comm", "Page", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountGetRecordLog), global::Pbcmd.PBRespAccountGetRecordLog.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqFtpayGetPayList), global::Pbcmd.PBReqFtpayGetPayList.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespFtpayGetPayList), global::Pbcmd.PBRespFtpayGetPayList.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqFtpayPaySubmitAct), global::Pbcmd.PBReqFtpayPaySubmitAct.Parser, new[]{ "Comm", "PayId", "Money", "CardNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespFtpayPaySubmitAct), global::Pbcmd.PBRespFtpayPaySubmitAct.Parser, new[]{ "Ret", "ShowUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqFtpayGetBaId), global::Pbcmd.PBReqFtpayGetBaId.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespFtpayGetBaId), global::Pbcmd.PBRespFtpayGetBaId.Parser, new[]{ "Ret", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqFtpayLaunchWithdraw), global::Pbcmd.PBReqFtpayLaunchWithdraw.Parser, new[]{ "Comm", "Money", "Realname", "Idcard", "Batype", "Baname", "Baaddr", "PhoneNo", "Pwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespFtpayLaunchWithdraw), global::Pbcmd.PBRespFtpayLaunchWithdraw.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqCheckPIN), global::Pbcmd.PBReqCheckPIN.Parser, new[]{ "Comm", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespCheckPIN), global::Pbcmd.PBRespCheckPIN.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqGetFlowList), global::Pbcmd.PBReqGetFlowList.Parser, new[]{ "Comm", "Page", "Limit", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespGetFlowList), global::Pbcmd.PBRespGetFlowList.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqFtpayGetHistoryCardInfo), global::Pbcmd.PBReqFtpayGetHistoryCardInfo.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespFtpayGetHistoryCardInfo), global::Pbcmd.PBRespFtpayGetHistoryCardInfo.Parser, new[]{ "Ret", "Realname", "Idcard", "Batype", "Batypename", "Baname", "Baaddr", "PhoneNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiVhkdLogIn), global::Pbcmd.PBReqAccountVhkdapiVhkdLogIn.Parser, new[]{ "Comm", "Number", "Pwd", "Type", "CountryCode", "AreaCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiVhkdLogIn), global::Pbcmd.PBRespAccountVhkdapiVhkdLogIn.Parser, new[]{ "Ret", "LoginData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiVhkdSetPin), global::Pbcmd.PBReqAccountVhkdapiVhkdSetPin.Parser, new[]{ "Comm", "Pin", "Code", "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiVhkdSetPin), global::Pbcmd.PBRespAccountVhkdapiVhkdSetPin.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiVhkdGetAssets), global::Pbcmd.PBReqAccountVhkdapiVhkdGetAssets.Parser, new[]{ "Comm", "UserId", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiVhkdGetAssets), global::Pbcmd.PBRespAccountVhkdapiVhkdGetAssets.Parser, new[]{ "Ret", "AssetsData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiGetFlowList), global::Pbcmd.PBReqAccountVhkdapiGetFlowList.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiGetFlowList), global::Pbcmd.PBRespAccountVhkdapiGetFlowList.Parser, new[]{ "Ret", "ListData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVhkdapiVhkdIsHasPin), global::Pbcmd.PBReqAccountVhkdapiVhkdIsHasPin.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVhkdapiVhkdIsHasPin), global::Pbcmd.PBRespAccountVhkdapiVhkdIsHasPin.Parser, new[]{ "Ret", "Pin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVGPayUpdateAssets), global::Pbcmd.PBReqAccountVGPayUpdateAssets.Parser, new[]{ "Comm", "Token", "Money", "DCNum", "Type", "AssetsID", "AssetsName", "Accuracy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVGPayUpdateAssets), global::Pbcmd.PBRespAccountVGPayUpdateAssets.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVGPayGetAddress), global::Pbcmd.PBReqAccountVGPayGetAddress.Parser, new[]{ "Comm", "AssetsID", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVGPayGetAddress), global::Pbcmd.PBRespAccountVGPayGetAddress.Parser, new[]{ "Ret", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVGPayGetWithdrawConfig), global::Pbcmd.PBReqAccountVGPayGetWithdrawConfig.Parser, new[]{ "Comm", "AssetsID", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVGPayGetWithdrawConfig), global::Pbcmd.PBRespAccountVGPayGetWithdrawConfig.Parser, new[]{ "Ret", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVGPayApplyTransactionOut), global::Pbcmd.PBReqAccountVGPayApplyTransactionOut.Parser, new[]{ "Comm", "Token", "CoinID", "CoinAddress", "ApplyQuantity", "Pwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVGPayApplyTransactionOut), global::Pbcmd.PBRespAccountVGPayApplyTransactionOut.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVGPayGetAssetsRecordPageList), global::Pbcmd.PBReqAccountVGPayGetAssetsRecordPageList.Parser, new[]{ "Comm", "Token", "AssetsID", "AssetsRecordType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVGPayGetAssetsRecordPageList), global::Pbcmd.PBRespAccountVGPayGetAssetsRecordPageList.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountVGPayVhkdToMoney), global::Pbcmd.PBReqAccountVGPayVhkdToMoney.Parser, new[]{ "Comm", "Token", "Oid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountVGPayVhkdToMoney), global::Pbcmd.PBRespAccountVGPayVhkdToMoney.Parser, new[]{ "Ret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqGetPayStatus), global::Pbcmd.PBReqGetPayStatus.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBPayStatusList), global::Pbcmd.PBPayStatusList.Parser, new[]{ "PayId", "Name", "Status", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespGetPayStatus), global::Pbcmd.PBRespGetPayStatus.Parser, new[]{ "Ret", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqAccountIsChargeChangeName), global::Pbcmd.PBReqAccountIsChargeChangeName.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespAccountIsChargeChangeName), global::Pbcmd.PBRespAccountIsChargeChangeName.Parser, new[]{ "Ret", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqFtpayGetLaunchWithdrawFee), global::Pbcmd.PBReqFtpayGetLaunchWithdrawFee.Parser, new[]{ "Comm", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespFtpayGetLaunchWithdrawFee), global::Pbcmd.PBRespFtpayGetLaunchWithdrawFee.Parser, new[]{ "Ret", "Limits", "Realmoney", "Fee", "Decrlimits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqGetAutoHeadImg), global::Pbcmd.PBReqGetAutoHeadImg.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespGetAutoHeadImg), global::Pbcmd.PBRespGetAutoHeadImg.Parser, new[]{ "Ret", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBReqCheckPayDisable), global::Pbcmd.PBReqCheckPayDisable.Parser, new[]{ "Comm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbcmd.PBRespCheckPayDisable), global::Pbcmd.PBRespCheckPayDisable.Parser, new[]{ "Ret" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PBAccountVipType {
    /// <summary>
    ///银卡
    /// </summary>
    [pbr::OriginalName("Account_VipSilver")] AccountVipSilver = 0,
    /// <summary>
    ///金卡
    /// </summary>
    [pbr::OriginalName("Account_VipGold")] AccountVipGold = 10,
    /// <summary>
    ///黑卡
    /// </summary>
    [pbr::OriginalName("Account_VipBlack")] AccountVipBlack = 20,
  }

  public enum unionUserLevelDef {
    /// <summary>
    /// 拥有者
    /// </summary>
    [pbr::OriginalName("union_owner")] UnionOwner = 100,
    /// <summary>
    /// 管理员
    /// </summary>
    [pbr::OriginalName("union_admin")] UnionAdmin = 10,
  }

  #endregion

  #region Messages
  public sealed partial class PBUserInfo : pb::IMessage<PBUserInfo> {
    private static readonly pb::MessageParser<PBUserInfo> _parser = new pb::MessageParser<PBUserInfo>(() => new PBUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBUserInfo(PBUserInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      name_ = other.name_;
      head_ = other.head_;
      money_ = other.money_;
      status_ = other.status_;
      sex_ = other.sex_;
      diamond_ = other.diamond_;
      ctime_ = other.ctime_;
      area_ = other.area_;
      brief_ = other.brief_;
      vip_ = other.vip_;
      areaIcon_ = other.areaIcon_;
      areaName_ = other.areaName_;
      ip_ = other.ip_;
      atime_ = other.atime_;
      viptime_ = other.viptime_;
      point_ = other.point_;
      unionId_ = other.unionId_;
      unionUserLevel_ = other.unionUserLevel_;
      userUnionInfo_ = other.userUnionInfo_ != null ? other.userUnionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBUserInfo Clone() {
      return new PBUserInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static uint UidDefaultValue = 0;

    private uint uid_;
    /// <summary>
    ///用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///姓名/昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 3;
    private readonly static string HeadDefaultValue = "";

    private string head_;
    /// <summary>
    ///头像url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Head {
      get { return head_ ?? HeadDefaultValue; }
      set {
        head_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "head" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHead {
      get { return head_ != null; }
    }
    /// <summary>Clears the value of the "head" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHead() {
      head_ = null;
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 4;
    private readonly static ulong MoneyDefaultValue = 0UL;

    private ulong money_;
    /// <summary>
    ///金币数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Money {
      get { if ((_hasBits0 & 2) != 0) { return money_; } else { return MoneyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        money_ = value;
      }
    }
    /// <summary>Gets whether the "money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private readonly static uint StatusDefaultValue = 0;

    private uint status_;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Status {
      get { if ((_hasBits0 & 4) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 6;
    private readonly static uint SexDefaultValue = 0;

    private uint sex_;
    /// <summary>
    ///性别:0保密,1男,2女
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Sex {
      get { if ((_hasBits0 & 8) != 0) { return sex_; } else { return SexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        sex_ = value;
      }
    }
    /// <summary>Gets whether the "sex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "sex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSex() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "diamond" field.</summary>
    public const int DiamondFieldNumber = 7;
    private readonly static uint DiamondDefaultValue = 0;

    private uint diamond_;
    /// <summary>
    ///钻石数 20190508 修改为练习币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Diamond {
      get { if ((_hasBits0 & 16) != 0) { return diamond_; } else { return DiamondDefaultValue; } }
      set {
        _hasBits0 |= 16;
        diamond_ = value;
      }
    }
    /// <summary>Gets whether the "diamond" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDiamond {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "diamond" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDiamond() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ctime" field.</summary>
    public const int CtimeFieldNumber = 8;
    private readonly static uint CtimeDefaultValue = 0;

    private uint ctime_;
    /// <summary>
    ///注册时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ctime {
      get { if ((_hasBits0 & 32) != 0) { return ctime_; } else { return CtimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ctime_ = value;
      }
    }
    /// <summary>Gets whether the "ctime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCtime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ctime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCtime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 9;
    private readonly static uint AreaDefaultValue = 0;

    private uint area_;
    /// <summary>
    ///地区编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Area {
      get { if ((_hasBits0 & 64) != 0) { return area_; } else { return AreaDefaultValue; } }
      set {
        _hasBits0 |= 64;
        area_ = value;
      }
    }
    /// <summary>Gets whether the "area" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasArea {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "area" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearArea() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "brief" field.</summary>
    public const int BriefFieldNumber = 10;
    private readonly static string BriefDefaultValue = "";

    private string brief_;
    /// <summary>
    ///个性签名(简介)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Brief {
      get { return brief_ ?? BriefDefaultValue; }
      set {
        brief_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "brief" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrief {
      get { return brief_ != null; }
    }
    /// <summary>Clears the value of the "brief" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrief() {
      brief_ = null;
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 11;
    private readonly static uint VipDefaultValue = 0;

    private uint vip_;
    /// <summary>
    ///VIP等级: 0银卡, 10金卡, 20黑卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Vip {
      get { if ((_hasBits0 & 128) != 0) { return vip_; } else { return VipDefaultValue; } }
      set {
        _hasBits0 |= 128;
        vip_ = value;
      }
    }
    /// <summary>Gets whether the "vip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVip {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "vip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVip() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "areaIcon" field.</summary>
    public const int AreaIconFieldNumber = 12;
    private readonly static string AreaIconDefaultValue = "";

    private string areaIcon_;
    /// <summary>
    ///地区图标ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaIcon {
      get { return areaIcon_ ?? AreaIconDefaultValue; }
      set {
        areaIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "areaIcon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAreaIcon {
      get { return areaIcon_ != null; }
    }
    /// <summary>Clears the value of the "areaIcon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAreaIcon() {
      areaIcon_ = null;
    }

    /// <summary>Field number for the "areaName" field.</summary>
    public const int AreaNameFieldNumber = 13;
    private readonly static string AreaNameDefaultValue = "";

    private string areaName_;
    /// <summary>
    ///地区名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaName {
      get { return areaName_ ?? AreaNameDefaultValue; }
      set {
        areaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "areaName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAreaName {
      get { return areaName_ != null; }
    }
    /// <summary>Clears the value of the "areaName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAreaName() {
      areaName_ = null;
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 14;
    private readonly static uint IpDefaultValue = 0;

    private uint ip_;
    /// <summary>
    ///登录IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ip {
      get { if ((_hasBits0 & 256) != 0) { return ip_; } else { return IpDefaultValue; } }
      set {
        _hasBits0 |= 256;
        ip_ = value;
      }
    }
    /// <summary>Gets whether the "ip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIp {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "ip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIp() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "atime" field.</summary>
    public const int AtimeFieldNumber = 15;
    private readonly static uint AtimeDefaultValue = 0;

    private uint atime_;
    /// <summary>
    ///活跃(登录)时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Atime {
      get { if ((_hasBits0 & 512) != 0) { return atime_; } else { return AtimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        atime_ = value;
      }
    }
    /// <summary>Gets whether the "atime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAtime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "atime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAtime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "viptime" field.</summary>
    public const int ViptimeFieldNumber = 16;
    private readonly static uint ViptimeDefaultValue = 0;

    private uint viptime_;
    /// <summary>
    ///VIP到期时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Viptime {
      get { if ((_hasBits0 & 1024) != 0) { return viptime_; } else { return ViptimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        viptime_ = value;
      }
    }
    /// <summary>Gets whether the "viptime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasViptime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "viptime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearViptime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 17;
    private readonly static ulong PointDefaultValue = 0UL;

    private ulong point_;
    /// <summary>
    ///积分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Point {
      get { if ((_hasBits0 & 2048) != 0) { return point_; } else { return PointDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        point_ = value;
      }
    }
    /// <summary>Gets whether the "point" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPoint {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "point" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPoint() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 18;
    private readonly static ulong UnionIdDefaultValue = 0UL;

    private ulong unionId_;
    /// <summary>
    ///联盟ID 0 或 联盟ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UnionId {
      get { if ((_hasBits0 & 4096) != 0) { return unionId_; } else { return UnionIdDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        unionId_ = value;
      }
    }
    /// <summary>Gets whether the "unionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnionId {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "unionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnionId() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "unionUserLevel" field.</summary>
    public const int UnionUserLevelFieldNumber = 19;
    private readonly static ulong UnionUserLevelDefaultValue = 0UL;

    private ulong unionUserLevel_;
    /// <summary>
    ///联盟等级 值参考 unionUserLevelDef
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UnionUserLevel {
      get { if ((_hasBits0 & 8192) != 0) { return unionUserLevel_; } else { return UnionUserLevelDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        unionUserLevel_ = value;
      }
    }
    /// <summary>Gets whether the "unionUserLevel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnionUserLevel {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "unionUserLevel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnionUserLevel() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "userUnionInfo" field.</summary>
    public const int UserUnionInfoFieldNumber = 20;
    private global::Pbcmd.PBUserUnionInfo userUnionInfo_;
    /// <summary>
    ///用户联盟信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBUserUnionInfo UserUnionInfo {
      get { return userUnionInfo_; }
      set {
        userUnionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Head != other.Head) return false;
      if (Money != other.Money) return false;
      if (Status != other.Status) return false;
      if (Sex != other.Sex) return false;
      if (Diamond != other.Diamond) return false;
      if (Ctime != other.Ctime) return false;
      if (Area != other.Area) return false;
      if (Brief != other.Brief) return false;
      if (Vip != other.Vip) return false;
      if (AreaIcon != other.AreaIcon) return false;
      if (AreaName != other.AreaName) return false;
      if (Ip != other.Ip) return false;
      if (Atime != other.Atime) return false;
      if (Viptime != other.Viptime) return false;
      if (Point != other.Point) return false;
      if (UnionId != other.UnionId) return false;
      if (UnionUserLevel != other.UnionUserLevel) return false;
      if (!object.Equals(UserUnionInfo, other.UserUnionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasHead) hash ^= Head.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasSex) hash ^= Sex.GetHashCode();
      if (HasDiamond) hash ^= Diamond.GetHashCode();
      if (HasCtime) hash ^= Ctime.GetHashCode();
      if (HasArea) hash ^= Area.GetHashCode();
      if (HasBrief) hash ^= Brief.GetHashCode();
      if (HasVip) hash ^= Vip.GetHashCode();
      if (HasAreaIcon) hash ^= AreaIcon.GetHashCode();
      if (HasAreaName) hash ^= AreaName.GetHashCode();
      if (HasIp) hash ^= Ip.GetHashCode();
      if (HasAtime) hash ^= Atime.GetHashCode();
      if (HasViptime) hash ^= Viptime.GetHashCode();
      if (HasPoint) hash ^= Point.GetHashCode();
      if (HasUnionId) hash ^= UnionId.GetHashCode();
      if (HasUnionUserLevel) hash ^= UnionUserLevel.GetHashCode();
      if (userUnionInfo_ != null) hash ^= UserUnionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasHead) {
        output.WriteRawTag(26);
        output.WriteString(Head);
      }
      if (HasMoney) {
        output.WriteRawTag(32);
        output.WriteUInt64(Money);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteUInt32(Status);
      }
      if (HasSex) {
        output.WriteRawTag(48);
        output.WriteUInt32(Sex);
      }
      if (HasDiamond) {
        output.WriteRawTag(56);
        output.WriteUInt32(Diamond);
      }
      if (HasCtime) {
        output.WriteRawTag(64);
        output.WriteUInt32(Ctime);
      }
      if (HasArea) {
        output.WriteRawTag(72);
        output.WriteUInt32(Area);
      }
      if (HasBrief) {
        output.WriteRawTag(82);
        output.WriteString(Brief);
      }
      if (HasVip) {
        output.WriteRawTag(88);
        output.WriteUInt32(Vip);
      }
      if (HasAreaIcon) {
        output.WriteRawTag(98);
        output.WriteString(AreaIcon);
      }
      if (HasAreaName) {
        output.WriteRawTag(106);
        output.WriteString(AreaName);
      }
      if (HasIp) {
        output.WriteRawTag(112);
        output.WriteUInt32(Ip);
      }
      if (HasAtime) {
        output.WriteRawTag(120);
        output.WriteUInt32(Atime);
      }
      if (HasViptime) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Viptime);
      }
      if (HasPoint) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(Point);
      }
      if (HasUnionId) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(UnionId);
      }
      if (HasUnionUserLevel) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(UnionUserLevel);
      }
      if (userUnionInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(UserUnionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasHead) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Head);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Money);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Status);
      }
      if (HasSex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sex);
      }
      if (HasDiamond) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Diamond);
      }
      if (HasCtime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ctime);
      }
      if (HasArea) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Area);
      }
      if (HasBrief) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Brief);
      }
      if (HasVip) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Vip);
      }
      if (HasAreaIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaIcon);
      }
      if (HasAreaName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaName);
      }
      if (HasIp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ip);
      }
      if (HasAtime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Atime);
      }
      if (HasViptime) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Viptime);
      }
      if (HasPoint) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Point);
      }
      if (HasUnionId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UnionId);
      }
      if (HasUnionUserLevel) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UnionUserLevel);
      }
      if (userUnionInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserUnionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasHead) {
        Head = other.Head;
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasDiamond) {
        Diamond = other.Diamond;
      }
      if (other.HasCtime) {
        Ctime = other.Ctime;
      }
      if (other.HasArea) {
        Area = other.Area;
      }
      if (other.HasBrief) {
        Brief = other.Brief;
      }
      if (other.HasVip) {
        Vip = other.Vip;
      }
      if (other.HasAreaIcon) {
        AreaIcon = other.AreaIcon;
      }
      if (other.HasAreaName) {
        AreaName = other.AreaName;
      }
      if (other.HasIp) {
        Ip = other.Ip;
      }
      if (other.HasAtime) {
        Atime = other.Atime;
      }
      if (other.HasViptime) {
        Viptime = other.Viptime;
      }
      if (other.HasPoint) {
        Point = other.Point;
      }
      if (other.HasUnionId) {
        UnionId = other.UnionId;
      }
      if (other.HasUnionUserLevel) {
        UnionUserLevel = other.UnionUserLevel;
      }
      if (other.userUnionInfo_ != null) {
        if (userUnionInfo_ == null) {
          UserUnionInfo = new global::Pbcmd.PBUserUnionInfo();
        }
        UserUnionInfo.MergeFrom(other.UserUnionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Head = input.ReadString();
            break;
          }
          case 32: {
            Money = input.ReadUInt64();
            break;
          }
          case 40: {
            Status = input.ReadUInt32();
            break;
          }
          case 48: {
            Sex = input.ReadUInt32();
            break;
          }
          case 56: {
            Diamond = input.ReadUInt32();
            break;
          }
          case 64: {
            Ctime = input.ReadUInt32();
            break;
          }
          case 72: {
            Area = input.ReadUInt32();
            break;
          }
          case 82: {
            Brief = input.ReadString();
            break;
          }
          case 88: {
            Vip = input.ReadUInt32();
            break;
          }
          case 98: {
            AreaIcon = input.ReadString();
            break;
          }
          case 106: {
            AreaName = input.ReadString();
            break;
          }
          case 112: {
            Ip = input.ReadUInt32();
            break;
          }
          case 120: {
            Atime = input.ReadUInt32();
            break;
          }
          case 128: {
            Viptime = input.ReadUInt32();
            break;
          }
          case 136: {
            Point = input.ReadUInt64();
            break;
          }
          case 144: {
            UnionId = input.ReadUInt64();
            break;
          }
          case 152: {
            UnionUserLevel = input.ReadUInt64();
            break;
          }
          case 162: {
            if (userUnionInfo_ == null) {
              UserUnionInfo = new global::Pbcmd.PBUserUnionInfo();
            }
            input.ReadMessage(UserUnionInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBUserUnionInfo : pb::IMessage<PBUserUnionInfo> {
    private static readonly pb::MessageParser<PBUserUnionInfo> _parser = new pb::MessageParser<PBUserUnionInfo>(() => new PBUserUnionInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBUserUnionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBUserUnionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBUserUnionInfo(PBUserUnionInfo other) : this() {
      _hasBits0 = other._hasBits0;
      unionId_ = other.unionId_;
      userLevel_ = other.userLevel_;
      isSuperUnion_ = other.isSuperUnion_;
      createTable_ = other.createTable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBUserUnionInfo Clone() {
      return new PBUserUnionInfo(this);
    }

    /// <summary>Field number for the "unionId" field.</summary>
    public const int UnionIdFieldNumber = 18;
    private readonly static uint UnionIdDefaultValue = 0;

    private uint unionId_;
    /// <summary>
    ///联盟ID 0 或 联盟ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnionId {
      get { if ((_hasBits0 & 1) != 0) { return unionId_; } else { return UnionIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        unionId_ = value;
      }
    }
    /// <summary>Gets whether the "unionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnionId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "unionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnionId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "userLevel" field.</summary>
    public const int UserLevelFieldNumber = 19;
    private readonly static uint UserLevelDefaultValue = 0;

    private uint userLevel_;
    /// <summary>
    ///联盟等级 值参考 unionUserLevelDef
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserLevel {
      get { if ((_hasBits0 & 2) != 0) { return userLevel_; } else { return UserLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        userLevel_ = value;
      }
    }
    /// <summary>Gets whether the "userLevel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "userLevel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "isSuperUnion" field.</summary>
    public const int IsSuperUnionFieldNumber = 20;
    private readonly static bool IsSuperUnionDefaultValue = false;

    private bool isSuperUnion_;
    /// <summary>
    ///是否超级联盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuperUnion {
      get { if ((_hasBits0 & 4) != 0) { return isSuperUnion_; } else { return IsSuperUnionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isSuperUnion_ = value;
      }
    }
    /// <summary>Gets whether the "isSuperUnion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsSuperUnion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "isSuperUnion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsSuperUnion() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "createTable" field.</summary>
    public const int CreateTableFieldNumber = 21;
    private readonly static bool CreateTableDefaultValue = false;

    private bool createTable_;
    /// <summary>
    ///联盟当前账号是否允许开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CreateTable {
      get { if ((_hasBits0 & 8) != 0) { return createTable_; } else { return CreateTableDefaultValue; } }
      set {
        _hasBits0 |= 8;
        createTable_ = value;
      }
    }
    /// <summary>Gets whether the "createTable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCreateTable {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "createTable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCreateTable() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBUserUnionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBUserUnionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      if (UserLevel != other.UserLevel) return false;
      if (IsSuperUnion != other.IsSuperUnion) return false;
      if (CreateTable != other.CreateTable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUnionId) hash ^= UnionId.GetHashCode();
      if (HasUserLevel) hash ^= UserLevel.GetHashCode();
      if (HasIsSuperUnion) hash ^= IsSuperUnion.GetHashCode();
      if (HasCreateTable) hash ^= CreateTable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUnionId) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(UnionId);
      }
      if (HasUserLevel) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(UserLevel);
      }
      if (HasIsSuperUnion) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsSuperUnion);
      }
      if (HasCreateTable) {
        output.WriteRawTag(168, 1);
        output.WriteBool(CreateTable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUnionId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnionId);
      }
      if (HasUserLevel) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UserLevel);
      }
      if (HasIsSuperUnion) {
        size += 2 + 1;
      }
      if (HasCreateTable) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBUserUnionInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUnionId) {
        UnionId = other.UnionId;
      }
      if (other.HasUserLevel) {
        UserLevel = other.UserLevel;
      }
      if (other.HasIsSuperUnion) {
        IsSuperUnion = other.IsSuperUnion;
      }
      if (other.HasCreateTable) {
        CreateTable = other.CreateTable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 144: {
            UnionId = input.ReadUInt32();
            break;
          }
          case 152: {
            UserLevel = input.ReadUInt32();
            break;
          }
          case 160: {
            IsSuperUnion = input.ReadBool();
            break;
          }
          case 168: {
            CreateTable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountLogin : pb::IMessage<PBReqAccountLogin> {
    private static readonly pb::MessageParser<PBReqAccountLogin> _parser = new pb::MessageParser<PBReqAccountLogin>(() => new PBReqAccountLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountLogin(PBReqAccountLogin other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountLogin Clone() {
      return new PBReqAccountLogin(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountLogin other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountLogin : pb::IMessage<PBRespAccountLogin> {
    private static readonly pb::MessageParser<PBRespAccountLogin> _parser = new pb::MessageParser<PBRespAccountLogin>(() => new PBRespAccountLogin());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountLogin(PBRespAccountLogin other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      needInit_ = other.needInit_;
      firstLogin_ = other.firstLogin_;
      matchIndex_ = other.matchIndex_ != null ? other.matchIndex_.Clone() : null;
      nameCost_ = other.nameCost_;
      nameCostClub_ = other.nameCostClub_;
      cdnUrl_ = other.cdnUrl_;
      imgSmall_ = other.imgSmall_;
      imgLarge_ = other.imgLarge_;
      switch_ = other.switch_;
      minMoney_ = other.minMoney_;
      minDiamond_ = other.minDiamond_;
      origin_ = other.origin_;
      customerService_ = other.customerService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountLogin Clone() {
      return new PBRespAccountLogin(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "userInfo" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Pbcmd.PBUserInfo userInfo_;
    /// <summary>
    ///用户信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBUserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "needInit" field.</summary>
    public const int NeedInitFieldNumber = 3;
    private readonly static uint NeedInitDefaultValue = 0;

    private uint needInit_;
    /// <summary>
    ///需要初始化用户资料标记:1手机号登录,2平台账号重名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NeedInit {
      get { if ((_hasBits0 & 1) != 0) { return needInit_; } else { return NeedInitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        needInit_ = value;
      }
    }
    /// <summary>Gets whether the "needInit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNeedInit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "needInit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNeedInit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "firstLogin" field.</summary>
    public const int FirstLoginFieldNumber = 4;
    private readonly static uint FirstLoginDefaultValue = 0;

    private uint firstLogin_;
    /// <summary>
    ///是否第一次登录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FirstLogin {
      get { if ((_hasBits0 & 2) != 0) { return firstLogin_; } else { return FirstLoginDefaultValue; } }
      set {
        _hasBits0 |= 2;
        firstLogin_ = value;
      }
    }
    /// <summary>Gets whether the "firstLogin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstLogin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "firstLogin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstLogin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "matchIndex" field.</summary>
    public const int MatchIndexFieldNumber = 5;
    private global::Pbcmd.PBMatchIndex matchIndex_;
    /// <summary>
    ///断线重连(自动进房间)用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBMatchIndex MatchIndex {
      get { return matchIndex_; }
      set {
        matchIndex_ = value;
      }
    }

    /// <summary>Field number for the "nameCost" field.</summary>
    public const int NameCostFieldNumber = 6;
    private readonly static uint NameCostDefaultValue = 0;

    private uint nameCost_;
    /// <summary>
    ///修改昵称消耗钻石数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NameCost {
      get { if ((_hasBits0 & 4) != 0) { return nameCost_; } else { return NameCostDefaultValue; } }
      set {
        _hasBits0 |= 4;
        nameCost_ = value;
      }
    }
    /// <summary>Gets whether the "nameCost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNameCost {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "nameCost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNameCost() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nameCostClub" field.</summary>
    public const int NameCostClubFieldNumber = 7;
    private readonly static uint NameCostClubDefaultValue = 0;

    private uint nameCostClub_;
    /// <summary>
    ///修改俱乐部名称需要消耗多少钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NameCostClub {
      get { if ((_hasBits0 & 8) != 0) { return nameCostClub_; } else { return NameCostClubDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nameCostClub_ = value;
      }
    }
    /// <summary>Gets whether the "nameCostClub" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNameCostClub {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "nameCostClub" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNameCostClub() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "cdnUrl" field.</summary>
    public const int CdnUrlFieldNumber = 8;
    private readonly static string CdnUrlDefaultValue = "";

    private string cdnUrl_;
    /// <summary>
    ///CDN根地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CdnUrl {
      get { return cdnUrl_ ?? CdnUrlDefaultValue; }
      set {
        cdnUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cdnUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCdnUrl {
      get { return cdnUrl_ != null; }
    }
    /// <summary>Clears the value of the "cdnUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCdnUrl() {
      cdnUrl_ = null;
    }

    /// <summary>Field number for the "imgSmall" field.</summary>
    public const int ImgSmallFieldNumber = 9;
    private readonly static string ImgSmallDefaultValue = "";

    private string imgSmall_;
    /// <summary>
    ///小图后缀
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImgSmall {
      get { return imgSmall_ ?? ImgSmallDefaultValue; }
      set {
        imgSmall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "imgSmall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImgSmall {
      get { return imgSmall_ != null; }
    }
    /// <summary>Clears the value of the "imgSmall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImgSmall() {
      imgSmall_ = null;
    }

    /// <summary>Field number for the "imgLarge" field.</summary>
    public const int ImgLargeFieldNumber = 10;
    private readonly static string ImgLargeDefaultValue = "";

    private string imgLarge_;
    /// <summary>
    ///大图后缀
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImgLarge {
      get { return imgLarge_ ?? ImgLargeDefaultValue; }
      set {
        imgLarge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "imgLarge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImgLarge {
      get { return imgLarge_ != null; }
    }
    /// <summary>Clears the value of the "imgLarge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImgLarge() {
      imgLarge_ = null;
    }

    /// <summary>Field number for the "switch" field.</summary>
    public const int SwitchFieldNumber = 11;
    private readonly static uint SwitchDefaultValue = 0;

    private uint switch_;
    /// <summary>
    ///关掉哪些功能:0x0001竞猜,0x0002扑克圏,0x0004审核中,0x0008禁止投资/竞猜(隐藏按钮)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Switch {
      get { if ((_hasBits0 & 16) != 0) { return switch_; } else { return SwitchDefaultValue; } }
      set {
        _hasBits0 |= 16;
        switch_ = value;
      }
    }
    /// <summary>Gets whether the "switch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSwitch {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "switch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSwitch() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "minMoney" field.</summary>
    public const int MinMoneyFieldNumber = 12;
    private readonly static ulong MinMoneyDefaultValue = 0UL;

    private ulong minMoney_;
    /// <summary>
    ///金币临界(破产救济)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MinMoney {
      get { if ((_hasBits0 & 32) != 0) { return minMoney_; } else { return MinMoneyDefaultValue; } }
      set {
        _hasBits0 |= 32;
        minMoney_ = value;
      }
    }
    /// <summary>Gets whether the "minMoney" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinMoney {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "minMoney" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinMoney() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "minDiamond" field.</summary>
    public const int MinDiamondFieldNumber = 13;
    private readonly static uint MinDiamondDefaultValue = 0;

    private uint minDiamond_;
    /// <summary>
    ///钻石临界(破产救济) 20190508 修改为练习币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinDiamond {
      get { if ((_hasBits0 & 64) != 0) { return minDiamond_; } else { return MinDiamondDefaultValue; } }
      set {
        _hasBits0 |= 64;
        minDiamond_ = value;
      }
    }
    /// <summary>Gets whether the "minDiamond" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinDiamond {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "minDiamond" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinDiamond() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 14;
    private readonly static string OriginDefaultValue = "";

    private string origin_;
    /// <summary>
    /// json字符串，origin信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Origin {
      get { return origin_ ?? OriginDefaultValue; }
      set {
        origin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "origin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrigin {
      get { return origin_ != null; }
    }
    /// <summary>Clears the value of the "origin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrigin() {
      origin_ = null;
    }

    /// <summary>Field number for the "customerService" field.</summary>
    public const int CustomerServiceFieldNumber = 15;
    private readonly static string CustomerServiceDefaultValue = "";

    private string customerService_;
    /// <summary>
    /// 客服地址 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerService {
      get { return customerService_ ?? CustomerServiceDefaultValue; }
      set {
        customerService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "customerService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCustomerService {
      get { return customerService_ != null; }
    }
    /// <summary>Clears the value of the "customerService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCustomerService() {
      customerService_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (NeedInit != other.NeedInit) return false;
      if (FirstLogin != other.FirstLogin) return false;
      if (!object.Equals(MatchIndex, other.MatchIndex)) return false;
      if (NameCost != other.NameCost) return false;
      if (NameCostClub != other.NameCostClub) return false;
      if (CdnUrl != other.CdnUrl) return false;
      if (ImgSmall != other.ImgSmall) return false;
      if (ImgLarge != other.ImgLarge) return false;
      if (Switch != other.Switch) return false;
      if (MinMoney != other.MinMoney) return false;
      if (MinDiamond != other.MinDiamond) return false;
      if (Origin != other.Origin) return false;
      if (CustomerService != other.CustomerService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (HasNeedInit) hash ^= NeedInit.GetHashCode();
      if (HasFirstLogin) hash ^= FirstLogin.GetHashCode();
      if (matchIndex_ != null) hash ^= MatchIndex.GetHashCode();
      if (HasNameCost) hash ^= NameCost.GetHashCode();
      if (HasNameCostClub) hash ^= NameCostClub.GetHashCode();
      if (HasCdnUrl) hash ^= CdnUrl.GetHashCode();
      if (HasImgSmall) hash ^= ImgSmall.GetHashCode();
      if (HasImgLarge) hash ^= ImgLarge.GetHashCode();
      if (HasSwitch) hash ^= Switch.GetHashCode();
      if (HasMinMoney) hash ^= MinMoney.GetHashCode();
      if (HasMinDiamond) hash ^= MinDiamond.GetHashCode();
      if (HasOrigin) hash ^= Origin.GetHashCode();
      if (HasCustomerService) hash ^= CustomerService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (HasNeedInit) {
        output.WriteRawTag(24);
        output.WriteUInt32(NeedInit);
      }
      if (HasFirstLogin) {
        output.WriteRawTag(32);
        output.WriteUInt32(FirstLogin);
      }
      if (matchIndex_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MatchIndex);
      }
      if (HasNameCost) {
        output.WriteRawTag(48);
        output.WriteUInt32(NameCost);
      }
      if (HasNameCostClub) {
        output.WriteRawTag(56);
        output.WriteUInt32(NameCostClub);
      }
      if (HasCdnUrl) {
        output.WriteRawTag(66);
        output.WriteString(CdnUrl);
      }
      if (HasImgSmall) {
        output.WriteRawTag(74);
        output.WriteString(ImgSmall);
      }
      if (HasImgLarge) {
        output.WriteRawTag(82);
        output.WriteString(ImgLarge);
      }
      if (HasSwitch) {
        output.WriteRawTag(88);
        output.WriteUInt32(Switch);
      }
      if (HasMinMoney) {
        output.WriteRawTag(96);
        output.WriteUInt64(MinMoney);
      }
      if (HasMinDiamond) {
        output.WriteRawTag(104);
        output.WriteUInt32(MinDiamond);
      }
      if (HasOrigin) {
        output.WriteRawTag(114);
        output.WriteString(Origin);
      }
      if (HasCustomerService) {
        output.WriteRawTag(122);
        output.WriteString(CustomerService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (HasNeedInit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NeedInit);
      }
      if (HasFirstLogin) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstLogin);
      }
      if (matchIndex_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchIndex);
      }
      if (HasNameCost) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NameCost);
      }
      if (HasNameCostClub) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NameCostClub);
      }
      if (HasCdnUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdnUrl);
      }
      if (HasImgSmall) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgSmall);
      }
      if (HasImgLarge) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgLarge);
      }
      if (HasSwitch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Switch);
      }
      if (HasMinMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MinMoney);
      }
      if (HasMinDiamond) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinDiamond);
      }
      if (HasOrigin) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Origin);
      }
      if (HasCustomerService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountLogin other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Pbcmd.PBUserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.HasNeedInit) {
        NeedInit = other.NeedInit;
      }
      if (other.HasFirstLogin) {
        FirstLogin = other.FirstLogin;
      }
      if (other.matchIndex_ != null) {
        if (matchIndex_ == null) {
          MatchIndex = new global::Pbcmd.PBMatchIndex();
        }
        MatchIndex.MergeFrom(other.MatchIndex);
      }
      if (other.HasNameCost) {
        NameCost = other.NameCost;
      }
      if (other.HasNameCostClub) {
        NameCostClub = other.NameCostClub;
      }
      if (other.HasCdnUrl) {
        CdnUrl = other.CdnUrl;
      }
      if (other.HasImgSmall) {
        ImgSmall = other.ImgSmall;
      }
      if (other.HasImgLarge) {
        ImgLarge = other.ImgLarge;
      }
      if (other.HasSwitch) {
        Switch = other.Switch;
      }
      if (other.HasMinMoney) {
        MinMoney = other.MinMoney;
      }
      if (other.HasMinDiamond) {
        MinDiamond = other.MinDiamond;
      }
      if (other.HasOrigin) {
        Origin = other.Origin;
      }
      if (other.HasCustomerService) {
        CustomerService = other.CustomerService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Pbcmd.PBUserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 24: {
            NeedInit = input.ReadUInt32();
            break;
          }
          case 32: {
            FirstLogin = input.ReadUInt32();
            break;
          }
          case 42: {
            if (matchIndex_ == null) {
              MatchIndex = new global::Pbcmd.PBMatchIndex();
            }
            input.ReadMessage(MatchIndex);
            break;
          }
          case 48: {
            NameCost = input.ReadUInt32();
            break;
          }
          case 56: {
            NameCostClub = input.ReadUInt32();
            break;
          }
          case 66: {
            CdnUrl = input.ReadString();
            break;
          }
          case 74: {
            ImgSmall = input.ReadString();
            break;
          }
          case 82: {
            ImgLarge = input.ReadString();
            break;
          }
          case 88: {
            Switch = input.ReadUInt32();
            break;
          }
          case 96: {
            MinMoney = input.ReadUInt64();
            break;
          }
          case 104: {
            MinDiamond = input.ReadUInt32();
            break;
          }
          case 114: {
            Origin = input.ReadString();
            break;
          }
          case 122: {
            CustomerService = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountOssParam : pb::IMessage<PBReqAccountOssParam> {
    private static readonly pb::MessageParser<PBReqAccountOssParam> _parser = new pb::MessageParser<PBReqAccountOssParam>(() => new PBReqAccountOssParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountOssParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountOssParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountOssParam(PBReqAccountOssParam other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountOssParam Clone() {
      return new PBReqAccountOssParam(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountOssParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountOssParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountOssParam other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountOssParam : pb::IMessage<PBRespAccountOssParam> {
    private static readonly pb::MessageParser<PBRespAccountOssParam> _parser = new pb::MessageParser<PBRespAccountOssParam>(() => new PBRespAccountOssParam());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountOssParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountOssParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountOssParam(PBRespAccountOssParam other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      api_ = other.api_;
      name_ = other.name_;
      json_ = other.json_;
      file_ = other.file_;
      expire_ = other.expire_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountOssParam Clone() {
      return new PBRespAccountOssParam(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 2;
    private readonly static string ApiDefaultValue = "";

    private string api_;
    /// <summary>
    ///上传文件请求地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Api {
      get { return api_ ?? ApiDefaultValue; }
      set {
        api_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "api" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApi {
      get { return api_ != null; }
    }
    /// <summary>Clears the value of the "api" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApi() {
      api_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///文件名表单项名字,客户端填充其值(值如md5文件内容后的串+文件扩展名)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "json" field.</summary>
    public const int JsonFieldNumber = 4;
    private readonly static string JsonDefaultValue = "";

    private string json_;
    /// <summary>
    ///传给OSS服务的额外参数列表,解析该JSON后组装成表单项列表(k=v)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Json {
      get { return json_ ?? JsonDefaultValue; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "json" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJson {
      get { return json_ != null; }
    }
    /// <summary>Clears the value of the "json" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJson() {
      json_ = null;
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 5;
    private readonly static string FileDefaultValue = "";

    private string file_;
    /// <summary>
    ///文件域表单项的名字(注意:文件域表单项必须为表单的最后一项)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string File {
      get { return file_ ?? FileDefaultValue; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "file" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFile {
      get { return file_ != null; }
    }
    /// <summary>Clears the value of the "file" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFile() {
      file_ = null;
    }

    /// <summary>Field number for the "expire" field.</summary>
    public const int ExpireFieldNumber = 6;
    private readonly static uint ExpireDefaultValue = 0;

    private uint expire_;
    /// <summary>
    ///本次获取到的参数的过期时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Expire {
      get { if ((_hasBits0 & 1) != 0) { return expire_; } else { return ExpireDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expire_ = value;
      }
    }
    /// <summary>Gets whether the "expire" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpire {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expire" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpire() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountOssParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountOssParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Api != other.Api) return false;
      if (Name != other.Name) return false;
      if (Json != other.Json) return false;
      if (File != other.File) return false;
      if (Expire != other.Expire) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasApi) hash ^= Api.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasJson) hash ^= Json.GetHashCode();
      if (HasFile) hash ^= File.GetHashCode();
      if (HasExpire) hash ^= Expire.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasApi) {
        output.WriteRawTag(18);
        output.WriteString(Api);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasJson) {
        output.WriteRawTag(34);
        output.WriteString(Json);
      }
      if (HasFile) {
        output.WriteRawTag(42);
        output.WriteString(File);
      }
      if (HasExpire) {
        output.WriteRawTag(48);
        output.WriteUInt32(Expire);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasApi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Api);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasJson) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
      }
      if (HasFile) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (HasExpire) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expire);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountOssParam other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasApi) {
        Api = other.Api;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasJson) {
        Json = other.Json;
      }
      if (other.HasFile) {
        File = other.File;
      }
      if (other.HasExpire) {
        Expire = other.Expire;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Api = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Json = input.ReadString();
            break;
          }
          case 42: {
            File = input.ReadString();
            break;
          }
          case 48: {
            Expire = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountInfo : pb::IMessage<PBReqAccountInfo> {
    private static readonly pb::MessageParser<PBReqAccountInfo> _parser = new pb::MessageParser<PBReqAccountInfo>(() => new PBReqAccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountInfo(PBReqAccountInfo other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      uids_ = other.uids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountInfo Clone() {
      return new PBReqAccountInfo(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_uids_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> uids_ = new pbc::RepeatedField<uint>();
    /// <summary>
    ///UID列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Uids {
      get { return uids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if(!uids_.Equals(other.uids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      hash ^= uids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      uids_.WriteTo(output, _repeated_uids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      size += uids_.CalculateSize(_repeated_uids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      uids_.Add(other.uids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18:
          case 16: {
            uids_.AddEntriesFrom(input, _repeated_uids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountInfo : pb::IMessage<PBRespAccountInfo> {
    private static readonly pb::MessageParser<PBRespAccountInfo> _parser = new pb::MessageParser<PBRespAccountInfo>(() => new PBRespAccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountInfo(PBRespAccountInfo other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountInfo Clone() {
      return new PBRespAccountInfo(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pbcmd.PBUserInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::Pbcmd.PBUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Pbcmd.PBUserInfo> list_ = new pbc::RepeatedField<global::Pbcmd.PBUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbcmd.PBUserInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountMoney : pb::IMessage<PBReqAccountMoney> {
    private static readonly pb::MessageParser<PBReqAccountMoney> _parser = new pb::MessageParser<PBReqAccountMoney>(() => new PBReqAccountMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMoney(PBReqAccountMoney other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMoney Clone() {
      return new PBReqAccountMoney(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountMoney other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountMoney : pb::IMessage<PBRespAccountMoney> {
    private static readonly pb::MessageParser<PBRespAccountMoney> _parser = new pb::MessageParser<PBRespAccountMoney>(() => new PBRespAccountMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMoney(PBRespAccountMoney other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMoney Clone() {
      return new PBRespAccountMoney(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Pbcmd.PBUserInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBUserInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountMoney other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Pbcmd.PBUserInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Pbcmd.PBUserInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountModifyInfo : pb::IMessage<PBReqAccountModifyInfo> {
    private static readonly pb::MessageParser<PBReqAccountModifyInfo> _parser = new pb::MessageParser<PBReqAccountModifyInfo>(() => new PBReqAccountModifyInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountModifyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountModifyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountModifyInfo(PBReqAccountModifyInfo other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      name_ = other.name_;
      head_ = other.head_;
      sex_ = other.sex_;
      pwd_ = other.pwd_;
      brief_ = other.brief_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountModifyInfo Clone() {
      return new PBReqAccountModifyInfo(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 3;
    private readonly static string HeadDefaultValue = "";

    private string head_;
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Head {
      get { return head_ ?? HeadDefaultValue; }
      set {
        head_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "head" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHead {
      get { return head_ != null; }
    }
    /// <summary>Clears the value of the "head" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHead() {
      head_ = null;
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 4;
    private readonly static uint SexDefaultValue = 0;

    private uint sex_;
    /// <summary>
    ///性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Sex {
      get { if ((_hasBits0 & 1) != 0) { return sex_; } else { return SexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sex_ = value;
      }
    }
    /// <summary>Gets whether the "sex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 5;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    /// <summary>
    ///加密后的密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    /// <summary>Field number for the "brief" field.</summary>
    public const int BriefFieldNumber = 6;
    private readonly static string BriefDefaultValue = "";

    private string brief_;
    /// <summary>
    ///个性签名(简介)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Brief {
      get { return brief_ ?? BriefDefaultValue; }
      set {
        brief_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "brief" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrief {
      get { return brief_ != null; }
    }
    /// <summary>Clears the value of the "brief" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrief() {
      brief_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountModifyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountModifyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Name != other.Name) return false;
      if (Head != other.Head) return false;
      if (Sex != other.Sex) return false;
      if (Pwd != other.Pwd) return false;
      if (Brief != other.Brief) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasHead) hash ^= Head.GetHashCode();
      if (HasSex) hash ^= Sex.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (HasBrief) hash ^= Brief.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasHead) {
        output.WriteRawTag(26);
        output.WriteString(Head);
      }
      if (HasSex) {
        output.WriteRawTag(32);
        output.WriteUInt32(Sex);
      }
      if (HasPwd) {
        output.WriteRawTag(42);
        output.WriteString(Pwd);
      }
      if (HasBrief) {
        output.WriteRawTag(50);
        output.WriteString(Brief);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasHead) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Head);
      }
      if (HasSex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sex);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (HasBrief) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Brief);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountModifyInfo other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasHead) {
        Head = other.Head;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      if (other.HasBrief) {
        Brief = other.Brief;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Head = input.ReadString();
            break;
          }
          case 32: {
            Sex = input.ReadUInt32();
            break;
          }
          case 42: {
            Pwd = input.ReadString();
            break;
          }
          case 50: {
            Brief = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountModifyInfo : pb::IMessage<PBRespAccountModifyInfo> {
    private static readonly pb::MessageParser<PBRespAccountModifyInfo> _parser = new pb::MessageParser<PBRespAccountModifyInfo>(() => new PBRespAccountModifyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountModifyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountModifyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountModifyInfo(PBRespAccountModifyInfo other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountModifyInfo Clone() {
      return new PBRespAccountModifyInfo(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Pbcmd.PBUserInfo user_;
    /// <summary>
    ///最新用户信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBUserInfo User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountModifyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountModifyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountModifyInfo other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Pbcmd.PBUserInfo();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Pbcmd.PBUserInfo();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取验证码，短信或邮件
  /// </summary>
  public sealed partial class PBReqAccountMobileCode : pb::IMessage<PBReqAccountMobileCode> {
    private static readonly pb::MessageParser<PBReqAccountMobileCode> _parser = new pb::MessageParser<PBReqAccountMobileCode>(() => new PBReqAccountMobileCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountMobileCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileCode(PBReqAccountMobileCode other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileCode Clone() {
      return new PBReqAccountMobileCode(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    /// <summary>
    /// phone::+86:15818708414 email::pcphper@163.com
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountMobileCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountMobileCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Number != other.Number) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasNumber) {
        output.WriteRawTag(18);
        output.WriteString(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountMobileCode other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Number = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountMobileCode : pb::IMessage<PBRespAccountMobileCode> {
    private static readonly pb::MessageParser<PBRespAccountMobileCode> _parser = new pb::MessageParser<PBRespAccountMobileCode>(() => new PBRespAccountMobileCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountMobileCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileCode(PBRespAccountMobileCode other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileCode Clone() {
      return new PBRespAccountMobileCode(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountMobileCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountMobileCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountMobileCode other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountMobileAuth : pb::IMessage<PBReqAccountMobileAuth> {
    private static readonly pb::MessageParser<PBReqAccountMobileAuth> _parser = new pb::MessageParser<PBReqAccountMobileAuth>(() => new PBReqAccountMobileAuth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountMobileAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileAuth(PBReqAccountMobileAuth other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      number_ = other.number_;
      type_ = other.type_;
      code_ = other.code_;
      pwd_ = other.pwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileAuth Clone() {
      return new PBReqAccountMobileAuth(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///验证类型:1手机注册, 2手机登录 3邮箱注册 4邮箱登录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 4;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    ///手机或邮箱验证码,由type决定传否
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 5;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    /// <summary>
    ///由type决定传否
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountMobileAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountMobileAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Number != other.Number) return false;
      if (Type != other.Type) return false;
      if (Code != other.Code) return false;
      if (Pwd != other.Pwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasNumber) {
        output.WriteRawTag(18);
        output.WriteString(Number);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasCode) {
        output.WriteRawTag(34);
        output.WriteString(Code);
      }
      if (HasPwd) {
        output.WriteRawTag(42);
        output.WriteString(Pwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountMobileAuth other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Number = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Code = input.ReadString();
            break;
          }
          case 42: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountMobileAuth : pb::IMessage<PBRespAccountMobileAuth> {
    private static readonly pb::MessageParser<PBRespAccountMobileAuth> _parser = new pb::MessageParser<PBRespAccountMobileAuth>(() => new PBRespAccountMobileAuth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountMobileAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileAuth(PBRespAccountMobileAuth other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      uid_ = other.uid_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileAuth Clone() {
      return new PBRespAccountMobileAuth(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static uint UidDefaultValue = 0;

    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountMobileAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountMobileAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Uid != other.Uid) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Uid);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountMobileAuth other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 16: {
            Uid = input.ReadUInt32();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountMobileSecret : pb::IMessage<PBReqAccountMobileSecret> {
    private static readonly pb::MessageParser<PBReqAccountMobileSecret> _parser = new pb::MessageParser<PBReqAccountMobileSecret>(() => new PBReqAccountMobileSecret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountMobileSecret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileSecret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileSecret(PBReqAccountMobileSecret other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileSecret Clone() {
      return new PBReqAccountMobileSecret(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountMobileSecret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountMobileSecret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Number != other.Number) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasNumber) {
        output.WriteRawTag(18);
        output.WriteString(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountMobileSecret other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Number = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountMobileSecret : pb::IMessage<PBRespAccountMobileSecret> {
    private static readonly pb::MessageParser<PBRespAccountMobileSecret> _parser = new pb::MessageParser<PBRespAccountMobileSecret>(() => new PBRespAccountMobileSecret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountMobileSecret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileSecret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileSecret(PBRespAccountMobileSecret other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileSecret Clone() {
      return new PBRespAccountMobileSecret(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private readonly static string SecretDefaultValue = "";

    private string secret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_ ?? SecretDefaultValue; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecret {
      get { return secret_ != null; }
    }
    /// <summary>Clears the value of the "secret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecret() {
      secret_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountMobileSecret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountMobileSecret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasSecret) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasSecret) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasSecret) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountMobileSecret other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasSecret) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountMobileRepwd : pb::IMessage<PBReqAccountMobileRepwd> {
    private static readonly pb::MessageParser<PBReqAccountMobileRepwd> _parser = new pb::MessageParser<PBReqAccountMobileRepwd>(() => new PBReqAccountMobileRepwd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountMobileRepwd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileRepwd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileRepwd(PBReqAccountMobileRepwd other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      number_ = other.number_;
      code_ = other.code_;
      pwd_ = other.pwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountMobileRepwd Clone() {
      return new PBReqAccountMobileRepwd(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 4;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountMobileRepwd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountMobileRepwd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Number != other.Number) return false;
      if (Code != other.Code) return false;
      if (Pwd != other.Pwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasNumber) {
        output.WriteRawTag(18);
        output.WriteString(Number);
      }
      if (HasCode) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (HasPwd) {
        output.WriteRawTag(34);
        output.WriteString(Pwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountMobileRepwd other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Number = input.ReadString();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
          case 34: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountMobileRepwd : pb::IMessage<PBRespAccountMobileRepwd> {
    private static readonly pb::MessageParser<PBRespAccountMobileRepwd> _parser = new pb::MessageParser<PBRespAccountMobileRepwd>(() => new PBRespAccountMobileRepwd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountMobileRepwd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileRepwd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileRepwd(PBRespAccountMobileRepwd other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountMobileRepwd Clone() {
      return new PBRespAccountMobileRepwd(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountMobileRepwd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountMobileRepwd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountMobileRepwd other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountCheckCode : pb::IMessage<PBReqAccountCheckCode> {
    private static readonly pb::MessageParser<PBReqAccountCheckCode> _parser = new pb::MessageParser<PBReqAccountCheckCode>(() => new PBReqAccountCheckCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountCheckCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountCheckCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountCheckCode(PBReqAccountCheckCode other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      number_ = other.number_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountCheckCode Clone() {
      return new PBReqAccountCheckCode(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountCheckCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountCheckCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Number != other.Number) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasNumber) {
        output.WriteRawTag(18);
        output.WriteString(Number);
      }
      if (HasCode) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountCheckCode other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Number = input.ReadString();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountCheckCode : pb::IMessage<PBRespAccountCheckCode> {
    private static readonly pb::MessageParser<PBRespAccountCheckCode> _parser = new pb::MessageParser<PBRespAccountCheckCode>(() => new PBRespAccountCheckCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountCheckCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountCheckCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountCheckCode(PBRespAccountCheckCode other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountCheckCode Clone() {
      return new PBRespAccountCheckCode(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountCheckCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountCheckCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountCheckCode other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///通用登录验证请求
  /// </summary>
  public sealed partial class PBReqAccountAuth : pb::IMessage<PBReqAccountAuth> {
    private static readonly pb::MessageParser<PBReqAccountAuth> _parser = new pb::MessageParser<PBReqAccountAuth>(() => new PBReqAccountAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountAuth(PBReqAccountAuth other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      code_ = other.code_;
      openid_ = other.openid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountAuth Clone() {
      return new PBReqAccountAuth(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    ///例如Oppo的token, Vivo的authtoken等
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "openid" field.</summary>
    public const int OpenidFieldNumber = 3;
    private readonly static string OpenidDefaultValue = "";

    private string openid_;
    /// <summary>
    ///例如Oppo的ssoid等
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Openid {
      get { return openid_ ?? OpenidDefaultValue; }
      set {
        openid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "openid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOpenid {
      get { return openid_ != null; }
    }
    /// <summary>Clears the value of the "openid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOpenid() {
      openid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Code != other.Code) return false;
      if (Openid != other.Openid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasOpenid) hash ^= Openid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasCode) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (HasOpenid) {
        output.WriteRawTag(26);
        output.WriteString(Openid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasOpenid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Openid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountAuth other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasOpenid) {
        Openid = other.Openid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Openid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///通用登录验证响应
  /// </summary>
  public sealed partial class PBRespAccountAuth : pb::IMessage<PBRespAccountAuth> {
    private static readonly pb::MessageParser<PBRespAccountAuth> _parser = new pb::MessageParser<PBRespAccountAuth>(() => new PBRespAccountAuth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountAuth(PBRespAccountAuth other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      uid_ = other.uid_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountAuth Clone() {
      return new PBRespAccountAuth(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static uint UidDefaultValue = 0;

    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Uid != other.Uid) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Uid);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountAuth other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 16: {
            Uid = input.ReadUInt32();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountWeixinAuth : pb::IMessage<PBReqAccountWeixinAuth> {
    private static readonly pb::MessageParser<PBReqAccountWeixinAuth> _parser = new pb::MessageParser<PBReqAccountWeixinAuth>(() => new PBReqAccountWeixinAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountWeixinAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountWeixinAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountWeixinAuth(PBReqAccountWeixinAuth other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      code_ = other.code_;
      rtoken_ = other.rtoken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountWeixinAuth Clone() {
      return new PBReqAccountWeixinAuth(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    ///用户授权码,优先级低于rtoken,传其一
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "rtoken" field.</summary>
    public const int RtokenFieldNumber = 3;
    private readonly static string RtokenDefaultValue = "";

    private string rtoken_;
    /// <summary>
    ///RefreshToken优先级高于code,传其一
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rtoken {
      get { return rtoken_ ?? RtokenDefaultValue; }
      set {
        rtoken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rtoken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRtoken {
      get { return rtoken_ != null; }
    }
    /// <summary>Clears the value of the "rtoken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRtoken() {
      rtoken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountWeixinAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountWeixinAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Code != other.Code) return false;
      if (Rtoken != other.Rtoken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRtoken) hash ^= Rtoken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasCode) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (HasRtoken) {
        output.WriteRawTag(26);
        output.WriteString(Rtoken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasRtoken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rtoken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountWeixinAuth other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRtoken) {
        Rtoken = other.Rtoken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Rtoken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountWeixinAuth : pb::IMessage<PBRespAccountWeixinAuth> {
    private static readonly pb::MessageParser<PBRespAccountWeixinAuth> _parser = new pb::MessageParser<PBRespAccountWeixinAuth>(() => new PBRespAccountWeixinAuth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountWeixinAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountWeixinAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountWeixinAuth(PBRespAccountWeixinAuth other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      uid_ = other.uid_;
      token_ = other.token_;
      rtoken_ = other.rtoken_;
      expire_ = other.expire_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountWeixinAuth Clone() {
      return new PBRespAccountWeixinAuth(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static uint UidDefaultValue = 0;

    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "rtoken" field.</summary>
    public const int RtokenFieldNumber = 4;
    private readonly static string RtokenDefaultValue = "";

    private string rtoken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rtoken {
      get { return rtoken_ ?? RtokenDefaultValue; }
      set {
        rtoken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rtoken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRtoken {
      get { return rtoken_ != null; }
    }
    /// <summary>Clears the value of the "rtoken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRtoken() {
      rtoken_ = null;
    }

    /// <summary>Field number for the "expire" field.</summary>
    public const int ExpireFieldNumber = 5;
    private readonly static uint ExpireDefaultValue = 0;

    private uint expire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Expire {
      get { if ((_hasBits0 & 2) != 0) { return expire_; } else { return ExpireDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expire_ = value;
      }
    }
    /// <summary>Gets whether the "expire" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpire {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expire" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpire() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountWeixinAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountWeixinAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Uid != other.Uid) return false;
      if (Token != other.Token) return false;
      if (Rtoken != other.Rtoken) return false;
      if (Expire != other.Expire) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasRtoken) hash ^= Rtoken.GetHashCode();
      if (HasExpire) hash ^= Expire.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Uid);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (HasRtoken) {
        output.WriteRawTag(34);
        output.WriteString(Rtoken);
      }
      if (HasExpire) {
        output.WriteRawTag(40);
        output.WriteUInt32(Expire);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasRtoken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rtoken);
      }
      if (HasExpire) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expire);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountWeixinAuth other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasRtoken) {
        Rtoken = other.Rtoken;
      }
      if (other.HasExpire) {
        Expire = other.Expire;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 16: {
            Uid = input.ReadUInt32();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 34: {
            Rtoken = input.ReadString();
            break;
          }
          case 40: {
            Expire = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountUserProps : pb::IMessage<PBReqAccountUserProps> {
    private static readonly pb::MessageParser<PBReqAccountUserProps> _parser = new pb::MessageParser<PBReqAccountUserProps>(() => new PBReqAccountUserProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountUserProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountUserProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountUserProps(PBReqAccountUserProps other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountUserProps Clone() {
      return new PBReqAccountUserProps(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountUserProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountUserProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountUserProps other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountUserProps : pb::IMessage<PBRespAccountUserProps> {
    private static readonly pb::MessageParser<PBRespAccountUserProps> _parser = new pb::MessageParser<PBRespAccountUserProps>(() => new PBRespAccountUserProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountUserProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountUserProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountUserProps(PBRespAccountUserProps other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountUserProps Clone() {
      return new PBRespAccountUserProps(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pbcmd.PBAccountProp> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::Pbcmd.PBAccountProp.Parser);
    private readonly pbc::RepeatedField<global::Pbcmd.PBAccountProp> list_ = new pbc::RepeatedField<global::Pbcmd.PBAccountProp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbcmd.PBAccountProp> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountUserProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountUserProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountUserProps other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountSetDeviceToken : pb::IMessage<PBReqAccountSetDeviceToken> {
    private static readonly pb::MessageParser<PBReqAccountSetDeviceToken> _parser = new pb::MessageParser<PBReqAccountSetDeviceToken>(() => new PBReqAccountSetDeviceToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountSetDeviceToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountSetDeviceToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountSetDeviceToken(PBReqAccountSetDeviceToken other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountSetDeviceToken Clone() {
      return new PBReqAccountSetDeviceToken(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountSetDeviceToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountSetDeviceToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountSetDeviceToken other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountSetDeviceToken : pb::IMessage<PBRespAccountSetDeviceToken> {
    private static readonly pb::MessageParser<PBRespAccountSetDeviceToken> _parser = new pb::MessageParser<PBRespAccountSetDeviceToken>(() => new PBRespAccountSetDeviceToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountSetDeviceToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountSetDeviceToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountSetDeviceToken(PBRespAccountSetDeviceToken other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountSetDeviceToken Clone() {
      return new PBRespAccountSetDeviceToken(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountSetDeviceToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountSetDeviceToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountSetDeviceToken other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBAccountProp : pb::IMessage<PBAccountProp> {
    private static readonly pb::MessageParser<PBAccountProp> _parser = new pb::MessageParser<PBAccountProp>(() => new PBAccountProp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBAccountProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBAccountProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBAccountProp(PBAccountProp other) : this() {
      _hasBits0 = other._hasBits0;
      pid_ = other.pid_;
      name_ = other.name_;
      pic_ = other.pic_;
      num_ = other.num_;
      expire_ = other.expire_;
      desc_ = other.desc_;
      type_ = other.type_;
      giftCode_ = other.giftCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBAccountProp Clone() {
      return new PBAccountProp(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private readonly static uint PidDefaultValue = 0;

    private uint pid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pid {
      get { if ((_hasBits0 & 1) != 0) { return pid_; } else { return PidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pid_ = value;
      }
    }
    /// <summary>Gets whether the "pid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "pic" field.</summary>
    public const int PicFieldNumber = 3;
    private readonly static string PicDefaultValue = "";

    private string pic_;
    /// <summary>
    ///图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pic {
      get { return pic_ ?? PicDefaultValue; }
      set {
        pic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPic {
      get { return pic_ != null; }
    }
    /// <summary>Clears the value of the "pic" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPic() {
      pic_ = null;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private readonly static uint NumDefaultValue = 0;

    private uint num_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "expire" field.</summary>
    public const int ExpireFieldNumber = 5;
    private readonly static uint ExpireDefaultValue = 0;

    private uint expire_;
    /// <summary>
    ///到期时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Expire {
      get { if ((_hasBits0 & 4) != 0) { return expire_; } else { return ExpireDefaultValue; } }
      set {
        _hasBits0 |= 4;
        expire_ = value;
      }
    }
    /// <summary>Gets whether the "expire" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpire {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "expire" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpire() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 6;
    private readonly static string DescDefaultValue = "";

    private string desc_;
    /// <summary>
    ///描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_ ?? DescDefaultValue; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "desc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDesc {
      get { return desc_ != null; }
    }
    /// <summary>Clears the value of the "desc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDesc() {
      desc_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private readonly static uint TypeDefaultValue = 0;

    private uint type_;
    /// <summary>
    ///类型: 1互动道具, 2VIP卡, 3兑换券类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "giftCode" field.</summary>
    public const int GiftCodeFieldNumber = 8;
    private readonly static string GiftCodeDefaultValue = "";

    private string giftCode_;
    /// <summary>
    ///兑换码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GiftCode {
      get { return giftCode_ ?? GiftCodeDefaultValue; }
      set {
        giftCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "giftCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftCode {
      get { return giftCode_ != null; }
    }
    /// <summary>Clears the value of the "giftCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftCode() {
      giftCode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBAccountProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBAccountProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      if (Name != other.Name) return false;
      if (Pic != other.Pic) return false;
      if (Num != other.Num) return false;
      if (Expire != other.Expire) return false;
      if (Desc != other.Desc) return false;
      if (Type != other.Type) return false;
      if (GiftCode != other.GiftCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPid) hash ^= Pid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasPic) hash ^= Pic.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (HasExpire) hash ^= Expire.GetHashCode();
      if (HasDesc) hash ^= Desc.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasGiftCode) hash ^= GiftCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Pid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasPic) {
        output.WriteRawTag(26);
        output.WriteString(Pic);
      }
      if (HasNum) {
        output.WriteRawTag(32);
        output.WriteUInt32(Num);
      }
      if (HasExpire) {
        output.WriteRawTag(40);
        output.WriteUInt32(Expire);
      }
      if (HasDesc) {
        output.WriteRawTag(50);
        output.WriteString(Desc);
      }
      if (HasType) {
        output.WriteRawTag(56);
        output.WriteUInt32(Type);
      }
      if (HasGiftCode) {
        output.WriteRawTag(66);
        output.WriteString(GiftCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasPic) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pic);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Num);
      }
      if (HasExpire) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expire);
      }
      if (HasDesc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (HasGiftCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GiftCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBAccountProp other) {
      if (other == null) {
        return;
      }
      if (other.HasPid) {
        Pid = other.Pid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasPic) {
        Pic = other.Pic;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      if (other.HasExpire) {
        Expire = other.Expire;
      }
      if (other.HasDesc) {
        Desc = other.Desc;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasGiftCode) {
        GiftCode = other.GiftCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pid = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Pic = input.ReadString();
            break;
          }
          case 32: {
            Num = input.ReadUInt32();
            break;
          }
          case 40: {
            Expire = input.ReadUInt32();
            break;
          }
          case 50: {
            Desc = input.ReadString();
            break;
          }
          case 56: {
            Type = input.ReadUInt32();
            break;
          }
          case 66: {
            GiftCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountFeedback : pb::IMessage<PBReqAccountFeedback> {
    private static readonly pb::MessageParser<PBReqAccountFeedback> _parser = new pb::MessageParser<PBReqAccountFeedback>(() => new PBReqAccountFeedback());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountFeedback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountFeedback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountFeedback(PBReqAccountFeedback other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      contact_ = other.contact_;
      content_ = other.content_;
      pics_ = other.pics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountFeedback Clone() {
      return new PBReqAccountFeedback(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "contact" field.</summary>
    public const int ContactFieldNumber = 2;
    private readonly static string ContactDefaultValue = "";

    private string contact_;
    /// <summary>
    ///联系方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Contact {
      get { return contact_ ?? ContactDefaultValue; }
      set {
        contact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contact" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContact {
      get { return contact_ != null; }
    }
    /// <summary>Clears the value of the "contact" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContact() {
      contact_ = null;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    /// <summary>
    ///反馈内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "pics" field.</summary>
    public const int PicsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_pics_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> pics_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Pics {
      get { return pics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountFeedback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountFeedback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Contact != other.Contact) return false;
      if (Content != other.Content) return false;
      if(!pics_.Equals(other.pics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasContact) hash ^= Contact.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      hash ^= pics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasContact) {
        output.WriteRawTag(18);
        output.WriteString(Contact);
      }
      if (HasContent) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      pics_.WriteTo(output, _repeated_pics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasContact) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Contact);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += pics_.CalculateSize(_repeated_pics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountFeedback other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasContact) {
        Contact = other.Contact;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      pics_.Add(other.pics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Contact = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 34: {
            pics_.AddEntriesFrom(input, _repeated_pics_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountFeedback : pb::IMessage<PBRespAccountFeedback> {
    private static readonly pb::MessageParser<PBRespAccountFeedback> _parser = new pb::MessageParser<PBRespAccountFeedback>(() => new PBRespAccountFeedback());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountFeedback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountFeedback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountFeedback(PBRespAccountFeedback other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountFeedback Clone() {
      return new PBRespAccountFeedback(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountFeedback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountFeedback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountFeedback other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountSetLocation : pb::IMessage<PBReqAccountSetLocation> {
    private static readonly pb::MessageParser<PBReqAccountSetLocation> _parser = new pb::MessageParser<PBReqAccountSetLocation>(() => new PBReqAccountSetLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountSetLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountSetLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountSetLocation(PBReqAccountSetLocation other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      locX_ = other.locX_;
      locY_ = other.locY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountSetLocation Clone() {
      return new PBReqAccountSetLocation(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "locX" field.</summary>
    public const int LocXFieldNumber = 2;
    private readonly static string LocXDefaultValue = "";

    private string locX_;
    /// <summary>
    ///经度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocX {
      get { return locX_ ?? LocXDefaultValue; }
      set {
        locX_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "locX" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocX {
      get { return locX_ != null; }
    }
    /// <summary>Clears the value of the "locX" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocX() {
      locX_ = null;
    }

    /// <summary>Field number for the "locY" field.</summary>
    public const int LocYFieldNumber = 3;
    private readonly static string LocYDefaultValue = "";

    private string locY_;
    /// <summary>
    ///纬度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocY {
      get { return locY_ ?? LocYDefaultValue; }
      set {
        locY_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "locY" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocY {
      get { return locY_ != null; }
    }
    /// <summary>Clears the value of the "locY" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocY() {
      locY_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountSetLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountSetLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (LocX != other.LocX) return false;
      if (LocY != other.LocY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasLocX) hash ^= LocX.GetHashCode();
      if (HasLocY) hash ^= LocY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasLocX) {
        output.WriteRawTag(18);
        output.WriteString(LocX);
      }
      if (HasLocY) {
        output.WriteRawTag(26);
        output.WriteString(LocY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasLocX) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocX);
      }
      if (HasLocY) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountSetLocation other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasLocX) {
        LocX = other.LocX;
      }
      if (other.HasLocY) {
        LocY = other.LocY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            LocX = input.ReadString();
            break;
          }
          case 26: {
            LocY = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountSetLocation : pb::IMessage<PBRespAccountSetLocation> {
    private static readonly pb::MessageParser<PBRespAccountSetLocation> _parser = new pb::MessageParser<PBRespAccountSetLocation>(() => new PBRespAccountSetLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountSetLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountSetLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountSetLocation(PBRespAccountSetLocation other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountSetLocation Clone() {
      return new PBRespAccountSetLocation(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountSetLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountSetLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountSetLocation other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountGetAvcSign : pb::IMessage<PBReqAccountGetAvcSign> {
    private static readonly pb::MessageParser<PBReqAccountGetAvcSign> _parser = new pb::MessageParser<PBReqAccountGetAvcSign>(() => new PBReqAccountGetAvcSign());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountGetAvcSign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountGetAvcSign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountGetAvcSign(PBReqAccountGetAvcSign other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountGetAvcSign Clone() {
      return new PBReqAccountGetAvcSign(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountGetAvcSign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountGetAvcSign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountGetAvcSign other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountGetAvcSign : pb::IMessage<PBRespAccountGetAvcSign> {
    private static readonly pb::MessageParser<PBRespAccountGetAvcSign> _parser = new pb::MessageParser<PBRespAccountGetAvcSign>(() => new PBRespAccountGetAvcSign());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountGetAvcSign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountGetAvcSign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountGetAvcSign(PBRespAccountGetAvcSign other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      sign_ = other.sign_;
      expire_ = other.expire_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountGetAvcSign Clone() {
      return new PBRespAccountGetAvcSign(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "sign" field.</summary>
    public const int SignFieldNumber = 2;
    private readonly static string SignDefaultValue = "";

    private string sign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sign {
      get { return sign_ ?? SignDefaultValue; }
      set {
        sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sign" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSign {
      get { return sign_ != null; }
    }
    /// <summary>Clears the value of the "sign" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSign() {
      sign_ = null;
    }

    /// <summary>Field number for the "expire" field.</summary>
    public const int ExpireFieldNumber = 3;
    private readonly static uint ExpireDefaultValue = 0;

    private uint expire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Expire {
      get { if ((_hasBits0 & 1) != 0) { return expire_; } else { return ExpireDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expire_ = value;
      }
    }
    /// <summary>Gets whether the "expire" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpire {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expire" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpire() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountGetAvcSign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountGetAvcSign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Sign != other.Sign) return false;
      if (Expire != other.Expire) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasSign) hash ^= Sign.GetHashCode();
      if (HasExpire) hash ^= Expire.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasSign) {
        output.WriteRawTag(18);
        output.WriteString(Sign);
      }
      if (HasExpire) {
        output.WriteRawTag(24);
        output.WriteUInt32(Expire);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasSign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sign);
      }
      if (HasExpire) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expire);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountGetAvcSign other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasSign) {
        Sign = other.Sign;
      }
      if (other.HasExpire) {
        Expire = other.Expire;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Sign = input.ReadString();
            break;
          }
          case 24: {
            Expire = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountPrelogin : pb::IMessage<PBReqAccountPrelogin> {
    private static readonly pb::MessageParser<PBReqAccountPrelogin> _parser = new pb::MessageParser<PBReqAccountPrelogin>(() => new PBReqAccountPrelogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountPrelogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountPrelogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountPrelogin(PBReqAccountPrelogin other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountPrelogin Clone() {
      return new PBReqAccountPrelogin(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountPrelogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountPrelogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountPrelogin other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountPrelogin : pb::IMessage<PBRespAccountPrelogin> {
    private static readonly pb::MessageParser<PBRespAccountPrelogin> _parser = new pb::MessageParser<PBRespAccountPrelogin>(() => new PBRespAccountPrelogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountPrelogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountPrelogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountPrelogin(PBRespAccountPrelogin other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      pkgVer_ = other.pkgVer_;
      pkgUrl_ = other.pkgUrl_;
      patchUrl_ = other.patchUrl_;
      patchVer_ = other.patchVer_;
      pkgSize_ = other.pkgSize_;
      pkgDesc_ = other.pkgDesc_;
      patchType_ = other.patchType_;
      customerService_ = other.customerService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountPrelogin Clone() {
      return new PBRespAccountPrelogin(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "pkgVer" field.</summary>
    public const int PkgVerFieldNumber = 2;
    private readonly static string PkgVerDefaultValue = "";

    private string pkgVer_;
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PkgVer {
      get { return pkgVer_ ?? PkgVerDefaultValue; }
      set {
        pkgVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pkgVer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPkgVer {
      get { return pkgVer_ != null; }
    }
    /// <summary>Clears the value of the "pkgVer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPkgVer() {
      pkgVer_ = null;
    }

    /// <summary>Field number for the "pkgUrl" field.</summary>
    public const int PkgUrlFieldNumber = 3;
    private readonly static string PkgUrlDefaultValue = "";

    private string pkgUrl_;
    /// <summary>
    ///包地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PkgUrl {
      get { return pkgUrl_ ?? PkgUrlDefaultValue; }
      set {
        pkgUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pkgUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPkgUrl {
      get { return pkgUrl_ != null; }
    }
    /// <summary>Clears the value of the "pkgUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPkgUrl() {
      pkgUrl_ = null;
    }

    /// <summary>Field number for the "patchUrl" field.</summary>
    public const int PatchUrlFieldNumber = 4;
    private readonly static string PatchUrlDefaultValue = "";

    private string patchUrl_;
    /// <summary>
    ///资源根地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PatchUrl {
      get { return patchUrl_ ?? PatchUrlDefaultValue; }
      set {
        patchUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "patchUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPatchUrl {
      get { return patchUrl_ != null; }
    }
    /// <summary>Clears the value of the "patchUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPatchUrl() {
      patchUrl_ = null;
    }

    /// <summary>Field number for the "patchVer" field.</summary>
    public const int PatchVerFieldNumber = 5;
    private readonly static string PatchVerDefaultValue = "";

    private string patchVer_;
    /// <summary>
    ///热更新版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PatchVer {
      get { return patchVer_ ?? PatchVerDefaultValue; }
      set {
        patchVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "patchVer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPatchVer {
      get { return patchVer_ != null; }
    }
    /// <summary>Clears the value of the "patchVer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPatchVer() {
      patchVer_ = null;
    }

    /// <summary>Field number for the "pkgSize" field.</summary>
    public const int PkgSizeFieldNumber = 6;
    private readonly static string PkgSizeDefaultValue = "";

    private string pkgSize_;
    /// <summary>
    ///包大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PkgSize {
      get { return pkgSize_ ?? PkgSizeDefaultValue; }
      set {
        pkgSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pkgSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPkgSize {
      get { return pkgSize_ != null; }
    }
    /// <summary>Clears the value of the "pkgSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPkgSize() {
      pkgSize_ = null;
    }

    /// <summary>Field number for the "pkgDesc" field.</summary>
    public const int PkgDescFieldNumber = 7;
    private readonly static string PkgDescDefaultValue = "";

    private string pkgDesc_;
    /// <summary>
    ///包描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PkgDesc {
      get { return pkgDesc_ ?? PkgDescDefaultValue; }
      set {
        pkgDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pkgDesc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPkgDesc {
      get { return pkgDesc_ != null; }
    }
    /// <summary>Clears the value of the "pkgDesc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPkgDesc() {
      pkgDesc_ = null;
    }

    /// <summary>Field number for the "patchType" field.</summary>
    public const int PatchTypeFieldNumber = 8;
    private readonly static string PatchTypeDefaultValue = "";

    private string patchType_;
    /// <summary>
    ///更新类型:1可选,2静默,3强制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PatchType {
      get { return patchType_ ?? PatchTypeDefaultValue; }
      set {
        patchType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "patchType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPatchType {
      get { return patchType_ != null; }
    }
    /// <summary>Clears the value of the "patchType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPatchType() {
      patchType_ = null;
    }

    /// <summary>Field number for the "customerService" field.</summary>
    public const int CustomerServiceFieldNumber = 9;
    private readonly static string CustomerServiceDefaultValue = "";

    private string customerService_;
    /// <summary>
    /// 客服地址 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerService {
      get { return customerService_ ?? CustomerServiceDefaultValue; }
      set {
        customerService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "customerService" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCustomerService {
      get { return customerService_ != null; }
    }
    /// <summary>Clears the value of the "customerService" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCustomerService() {
      customerService_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountPrelogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountPrelogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (PkgVer != other.PkgVer) return false;
      if (PkgUrl != other.PkgUrl) return false;
      if (PatchUrl != other.PatchUrl) return false;
      if (PatchVer != other.PatchVer) return false;
      if (PkgSize != other.PkgSize) return false;
      if (PkgDesc != other.PkgDesc) return false;
      if (PatchType != other.PatchType) return false;
      if (CustomerService != other.CustomerService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasPkgVer) hash ^= PkgVer.GetHashCode();
      if (HasPkgUrl) hash ^= PkgUrl.GetHashCode();
      if (HasPatchUrl) hash ^= PatchUrl.GetHashCode();
      if (HasPatchVer) hash ^= PatchVer.GetHashCode();
      if (HasPkgSize) hash ^= PkgSize.GetHashCode();
      if (HasPkgDesc) hash ^= PkgDesc.GetHashCode();
      if (HasPatchType) hash ^= PatchType.GetHashCode();
      if (HasCustomerService) hash ^= CustomerService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasPkgVer) {
        output.WriteRawTag(18);
        output.WriteString(PkgVer);
      }
      if (HasPkgUrl) {
        output.WriteRawTag(26);
        output.WriteString(PkgUrl);
      }
      if (HasPatchUrl) {
        output.WriteRawTag(34);
        output.WriteString(PatchUrl);
      }
      if (HasPatchVer) {
        output.WriteRawTag(42);
        output.WriteString(PatchVer);
      }
      if (HasPkgSize) {
        output.WriteRawTag(50);
        output.WriteString(PkgSize);
      }
      if (HasPkgDesc) {
        output.WriteRawTag(58);
        output.WriteString(PkgDesc);
      }
      if (HasPatchType) {
        output.WriteRawTag(66);
        output.WriteString(PatchType);
      }
      if (HasCustomerService) {
        output.WriteRawTag(74);
        output.WriteString(CustomerService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasPkgVer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PkgVer);
      }
      if (HasPkgUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PkgUrl);
      }
      if (HasPatchUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PatchUrl);
      }
      if (HasPatchVer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PatchVer);
      }
      if (HasPkgSize) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PkgSize);
      }
      if (HasPkgDesc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PkgDesc);
      }
      if (HasPatchType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PatchType);
      }
      if (HasCustomerService) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountPrelogin other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasPkgVer) {
        PkgVer = other.PkgVer;
      }
      if (other.HasPkgUrl) {
        PkgUrl = other.PkgUrl;
      }
      if (other.HasPatchUrl) {
        PatchUrl = other.PatchUrl;
      }
      if (other.HasPatchVer) {
        PatchVer = other.PatchVer;
      }
      if (other.HasPkgSize) {
        PkgSize = other.PkgSize;
      }
      if (other.HasPkgDesc) {
        PkgDesc = other.PkgDesc;
      }
      if (other.HasPatchType) {
        PatchType = other.PatchType;
      }
      if (other.HasCustomerService) {
        CustomerService = other.CustomerService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            PkgVer = input.ReadString();
            break;
          }
          case 26: {
            PkgUrl = input.ReadString();
            break;
          }
          case 34: {
            PatchUrl = input.ReadString();
            break;
          }
          case 42: {
            PatchVer = input.ReadString();
            break;
          }
          case 50: {
            PkgSize = input.ReadString();
            break;
          }
          case 58: {
            PkgDesc = input.ReadString();
            break;
          }
          case 66: {
            PatchType = input.ReadString();
            break;
          }
          case 74: {
            CustomerService = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountBlackList : pb::IMessage<PBReqAccountBlackList> {
    private static readonly pb::MessageParser<PBReqAccountBlackList> _parser = new pb::MessageParser<PBReqAccountBlackList>(() => new PBReqAccountBlackList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountBlackList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackList(PBReqAccountBlackList other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackList Clone() {
      return new PBReqAccountBlackList(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private readonly static string OffsetDefaultValue = "";

    private string offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Offset {
      get { return offset_ ?? OffsetDefaultValue; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOffset {
      get { return offset_ != null; }
    }
    /// <summary>Clears the value of the "offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOffset() {
      offset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountBlackList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountBlackList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasOffset) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasOffset) {
        output.WriteRawTag(18);
        output.WriteString(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasOffset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountBlackList other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasOffset) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Offset = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountBlackList : pb::IMessage<PBRespAccountBlackList> {
    private static readonly pb::MessageParser<PBRespAccountBlackList> _parser = new pb::MessageParser<PBRespAccountBlackList>(() => new PBRespAccountBlackList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountBlackList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackList(PBRespAccountBlackList other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_.Clone();
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackList Clone() {
      return new PBRespAccountBlackList(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pbcmd.PBUserInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::Pbcmd.PBUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Pbcmd.PBUserInfo> list_ = new pbc::RepeatedField<global::Pbcmd.PBUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbcmd.PBUserInfo> List {
      get { return list_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private readonly static string OffsetDefaultValue = "";

    private string offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Offset {
      get { return offset_ ?? OffsetDefaultValue; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOffset {
      get { return offset_ != null; }
    }
    /// <summary>Clears the value of the "offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOffset() {
      offset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountBlackList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountBlackList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if(!list_.Equals(other.list_)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      hash ^= list_.GetHashCode();
      if (HasOffset) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (HasOffset) {
        output.WriteRawTag(26);
        output.WriteString(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (HasOffset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountBlackList other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      list_.Add(other.list_);
      if (other.HasOffset) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 26: {
            Offset = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountBlackEdit : pb::IMessage<PBReqAccountBlackEdit> {
    private static readonly pb::MessageParser<PBReqAccountBlackEdit> _parser = new pb::MessageParser<PBReqAccountBlackEdit>(() => new PBReqAccountBlackEdit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountBlackEdit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackEdit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackEdit(PBReqAccountBlackEdit other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      type_ = other.type_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackEdit Clone() {
      return new PBReqAccountBlackEdit(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static uint TypeDefaultValue = 0;

    private uint type_;
    /// <summary>
    ///类型:1添加,2移除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static uint UidDefaultValue = 0;

    private uint uid_;
    /// <summary>
    ///对谁操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountBlackEdit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountBlackEdit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Type != other.Type) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteUInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountBlackEdit other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            Uid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountBlackEdit : pb::IMessage<PBRespAccountBlackEdit> {
    private static readonly pb::MessageParser<PBRespAccountBlackEdit> _parser = new pb::MessageParser<PBRespAccountBlackEdit>(() => new PBRespAccountBlackEdit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountBlackEdit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackEdit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackEdit(PBRespAccountBlackEdit other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackEdit Clone() {
      return new PBRespAccountBlackEdit(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountBlackEdit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountBlackEdit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountBlackEdit other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBReqAccountBlackCount : pb::IMessage<PBReqAccountBlackCount> {
    private static readonly pb::MessageParser<PBReqAccountBlackCount> _parser = new pb::MessageParser<PBReqAccountBlackCount>(() => new PBReqAccountBlackCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountBlackCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackCount(PBReqAccountBlackCount other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountBlackCount Clone() {
      return new PBReqAccountBlackCount(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountBlackCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountBlackCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountBlackCount other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountBlackCount : pb::IMessage<PBRespAccountBlackCount> {
    private static readonly pb::MessageParser<PBRespAccountBlackCount> _parser = new pb::MessageParser<PBRespAccountBlackCount>(() => new PBRespAccountBlackCount());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountBlackCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackCount(PBRespAccountBlackCount other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountBlackCount Clone() {
      return new PBRespAccountBlackCount(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static uint CountDefaultValue = 0;

    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountBlackCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountBlackCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountBlackCount other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///华为登录,参数详见Game开发者指导书.pdf
  /// </summary>
  public sealed partial class PBReqAccountHuaweiAuth : pb::IMessage<PBReqAccountHuaweiAuth> {
    private static readonly pb::MessageParser<PBReqAccountHuaweiAuth> _parser = new pb::MessageParser<PBReqAccountHuaweiAuth>(() => new PBReqAccountHuaweiAuth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountHuaweiAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountHuaweiAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountHuaweiAuth(PBReqAccountHuaweiAuth other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      playerId_ = other.playerId_;
      displayName_ = other.displayName_;
      isAuth_ = other.isAuth_;
      gameAuthSign_ = other.gameAuthSign_;
      ts_ = other.ts_;
      playerLevel_ = other.playerLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountHuaweiAuth Clone() {
      return new PBReqAccountHuaweiAuth(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private readonly static string PlayerIdDefaultValue = "";

    private string playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_ ?? PlayerIdDefaultValue; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "playerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlayerId {
      get { return playerId_ != null; }
    }
    /// <summary>Clears the value of the "playerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlayerId() {
      playerId_ = null;
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "isAuth" field.</summary>
    public const int IsAuthFieldNumber = 4;
    private readonly static uint IsAuthDefaultValue = 0;

    private uint isAuth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IsAuth {
      get { if ((_hasBits0 & 1) != 0) { return isAuth_; } else { return IsAuthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isAuth_ = value;
      }
    }
    /// <summary>Gets whether the "isAuth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsAuth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isAuth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsAuth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameAuthSign" field.</summary>
    public const int GameAuthSignFieldNumber = 5;
    private readonly static string GameAuthSignDefaultValue = "";

    private string gameAuthSign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameAuthSign {
      get { return gameAuthSign_ ?? GameAuthSignDefaultValue; }
      set {
        gameAuthSign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gameAuthSign" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAuthSign {
      get { return gameAuthSign_ != null; }
    }
    /// <summary>Clears the value of the "gameAuthSign" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAuthSign() {
      gameAuthSign_ = null;
    }

    /// <summary>Field number for the "ts" field.</summary>
    public const int TsFieldNumber = 6;
    private readonly static string TsDefaultValue = "";

    private string ts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ts {
      get { return ts_ ?? TsDefaultValue; }
      set {
        ts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTs {
      get { return ts_ != null; }
    }
    /// <summary>Clears the value of the "ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTs() {
      ts_ = null;
    }

    /// <summary>Field number for the "playerLevel" field.</summary>
    public const int PlayerLevelFieldNumber = 7;
    private readonly static string PlayerLevelDefaultValue = "";

    private string playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerLevel {
      get { return playerLevel_ ?? PlayerLevelDefaultValue; }
      set {
        playerLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "playerLevel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlayerLevel {
      get { return playerLevel_ != null; }
    }
    /// <summary>Clears the value of the "playerLevel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlayerLevel() {
      playerLevel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountHuaweiAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountHuaweiAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (PlayerId != other.PlayerId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (IsAuth != other.IsAuth) return false;
      if (GameAuthSign != other.GameAuthSign) return false;
      if (Ts != other.Ts) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (HasIsAuth) hash ^= IsAuth.GetHashCode();
      if (HasGameAuthSign) hash ^= GameAuthSign.GetHashCode();
      if (HasTs) hash ^= Ts.GetHashCode();
      if (HasPlayerLevel) hash ^= PlayerLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasPlayerId) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (HasDisplayName) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (HasIsAuth) {
        output.WriteRawTag(32);
        output.WriteUInt32(IsAuth);
      }
      if (HasGameAuthSign) {
        output.WriteRawTag(42);
        output.WriteString(GameAuthSign);
      }
      if (HasTs) {
        output.WriteRawTag(50);
        output.WriteString(Ts);
      }
      if (HasPlayerLevel) {
        output.WriteRawTag(58);
        output.WriteString(PlayerLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (HasIsAuth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IsAuth);
      }
      if (HasGameAuthSign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameAuthSign);
      }
      if (HasTs) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ts);
      }
      if (HasPlayerLevel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountHuaweiAuth other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      if (other.HasIsAuth) {
        IsAuth = other.IsAuth;
      }
      if (other.HasGameAuthSign) {
        GameAuthSign = other.GameAuthSign;
      }
      if (other.HasTs) {
        Ts = other.Ts;
      }
      if (other.HasPlayerLevel) {
        PlayerLevel = other.PlayerLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 32: {
            IsAuth = input.ReadUInt32();
            break;
          }
          case 42: {
            GameAuthSign = input.ReadString();
            break;
          }
          case 50: {
            Ts = input.ReadString();
            break;
          }
          case 58: {
            PlayerLevel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountHuaweiAuth : pb::IMessage<PBRespAccountHuaweiAuth> {
    private static readonly pb::MessageParser<PBRespAccountHuaweiAuth> _parser = new pb::MessageParser<PBRespAccountHuaweiAuth>(() => new PBRespAccountHuaweiAuth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountHuaweiAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountHuaweiAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountHuaweiAuth(PBRespAccountHuaweiAuth other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      uid_ = other.uid_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountHuaweiAuth Clone() {
      return new PBRespAccountHuaweiAuth(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static uint UidDefaultValue = 0;

    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountHuaweiAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountHuaweiAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Uid != other.Uid) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Uid);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountHuaweiAuth other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 16: {
            Uid = input.ReadUInt32();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBKickUser : pb::IMessage<PBKickUser> {
    private static readonly pb::MessageParser<PBKickUser> _parser = new pb::MessageParser<PBKickUser>(() => new PBKickUser());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBKickUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBKickUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBKickUser(PBKickUser other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBKickUser Clone() {
      return new PBKickUser(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static uint CodeDefaultValue = 0;

    private uint code_;
    /// <summary>
    ///1 代表用户重复登入 2 代表用户未进行登录就发包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBKickUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBKickUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Code);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBKickUser other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadUInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询webview开关
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiVhkdwebViewControl : pb::IMessage<PBReqAccountVhkdapiVhkdwebViewControl> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiVhkdwebViewControl> _parser = new pb::MessageParser<PBReqAccountVhkdapiVhkdwebViewControl>(() => new PBReqAccountVhkdapiVhkdwebViewControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiVhkdwebViewControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdwebViewControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdwebViewControl(PBReqAccountVhkdapiVhkdwebViewControl other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdwebViewControl Clone() {
      return new PBReqAccountVhkdapiVhkdwebViewControl(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiVhkdwebViewControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiVhkdwebViewControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiVhkdwebViewControl other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiVhkdwebViewControl : pb::IMessage<PBRespAccountVhkdapiVhkdwebViewControl> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiVhkdwebViewControl> _parser = new pb::MessageParser<PBRespAccountVhkdapiVhkdwebViewControl>(() => new PBRespAccountVhkdapiVhkdwebViewControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiVhkdwebViewControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdwebViewControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdwebViewControl(PBRespAccountVhkdapiVhkdwebViewControl other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdwebViewControl Clone() {
      return new PBRespAccountVhkdapiVhkdwebViewControl(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiVhkdwebViewControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiVhkdwebViewControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiVhkdwebViewControl other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询数字货币商城开关
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiDigitalMoneyMallControl : pb::IMessage<PBReqAccountVhkdapiDigitalMoneyMallControl> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiDigitalMoneyMallControl> _parser = new pb::MessageParser<PBReqAccountVhkdapiDigitalMoneyMallControl>(() => new PBReqAccountVhkdapiDigitalMoneyMallControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiDigitalMoneyMallControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiDigitalMoneyMallControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiDigitalMoneyMallControl(PBReqAccountVhkdapiDigitalMoneyMallControl other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiDigitalMoneyMallControl Clone() {
      return new PBReqAccountVhkdapiDigitalMoneyMallControl(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiDigitalMoneyMallControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiDigitalMoneyMallControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiDigitalMoneyMallControl other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiDigitalMoneyMallControl : pb::IMessage<PBRespAccountVhkdapiDigitalMoneyMallControl> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiDigitalMoneyMallControl> _parser = new pb::MessageParser<PBRespAccountVhkdapiDigitalMoneyMallControl>(() => new PBRespAccountVhkdapiDigitalMoneyMallControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiDigitalMoneyMallControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiDigitalMoneyMallControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiDigitalMoneyMallControl(PBRespAccountVhkdapiDigitalMoneyMallControl other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiDigitalMoneyMallControl Clone() {
      return new PBRespAccountVhkdapiDigitalMoneyMallControl(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiDigitalMoneyMallControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiDigitalMoneyMallControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiDigitalMoneyMallControl other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询BTC和VHKD的汇率
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiGetBTCExchangeRate : pb::IMessage<PBReqAccountVhkdapiGetBTCExchangeRate> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiGetBTCExchangeRate> _parser = new pb::MessageParser<PBReqAccountVhkdapiGetBTCExchangeRate>(() => new PBReqAccountVhkdapiGetBTCExchangeRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiGetBTCExchangeRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetBTCExchangeRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetBTCExchangeRate(PBReqAccountVhkdapiGetBTCExchangeRate other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      symbol_ = other.symbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetBTCExchangeRate Clone() {
      return new PBReqAccountVhkdapiGetBTCExchangeRate(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private readonly static string SymbolDefaultValue = "";

    private string symbol_;
    /// <summary>
    /// 资产类型 例："BTC" 或 "VHKD"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_ ?? SymbolDefaultValue; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Symbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSymbol {
      get { return symbol_ != null; }
    }
    /// <summary>Clears the value of the "Symbol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSymbol() {
      symbol_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiGetBTCExchangeRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiGetBTCExchangeRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Symbol != other.Symbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasSymbol) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasSymbol) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiGetBTCExchangeRate other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasSymbol) {
        Symbol = other.Symbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiGetBTCExchangeRate : pb::IMessage<PBRespAccountVhkdapiGetBTCExchangeRate> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiGetBTCExchangeRate> _parser = new pb::MessageParser<PBRespAccountVhkdapiGetBTCExchangeRate>(() => new PBRespAccountVhkdapiGetBTCExchangeRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiGetBTCExchangeRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetBTCExchangeRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetBTCExchangeRate(PBRespAccountVhkdapiGetBTCExchangeRate other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      rate_ = other.rate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetBTCExchangeRate Clone() {
      return new PBRespAccountVhkdapiGetBTCExchangeRate(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 2;
    private readonly static string RateDefaultValue = "";

    private string rate_;
    /// <summary>
    /// json数组 rate.bids.price 是兑换为买游戏币的价格，rate.asks.price 是兑换为数字货币的价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rate {
      get { return rate_ ?? RateDefaultValue; }
      set {
        rate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRate {
      get { return rate_ != null; }
    }
    /// <summary>Clears the value of the "rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRate() {
      rate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiGetBTCExchangeRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiGetBTCExchangeRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Rate != other.Rate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasRate) hash ^= Rate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasRate) {
        output.WriteRawTag(18);
        output.WriteString(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasRate) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiGetBTCExchangeRate other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasRate) {
        Rate = other.Rate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Rate = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 挂单 VHKD => BTC 用户点击确认按钮请求的接口
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiActVHKDToBTC : pb::IMessage<PBReqAccountVhkdapiActVHKDToBTC> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiActVHKDToBTC> _parser = new pb::MessageParser<PBReqAccountVhkdapiActVHKDToBTC>(() => new PBReqAccountVhkdapiActVHKDToBTC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiActVHKDToBTC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiActVHKDToBTC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiActVHKDToBTC(PBReqAccountVhkdapiActVHKDToBTC other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      oid_ = other.oid_;
      pin_ = other.pin_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiActVHKDToBTC Clone() {
      return new PBReqAccountVhkdapiActVHKDToBTC(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "oid" field.</summary>
    public const int OidFieldNumber = 2;
    private readonly static string OidDefaultValue = "";

    private string oid_;
    /// <summary>
    /// oid 返回的列表里有oid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Oid {
      get { return oid_ ?? OidDefaultValue; }
      set {
        oid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOid {
      get { return oid_ != null; }
    }
    /// <summary>Clears the value of the "oid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOid() {
      oid_ = null;
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 3;
    private readonly static string PinDefaultValue = "";

    private string pin_;
    /// <summary>
    /// PIN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pin {
      get { return pin_ ?? PinDefaultValue; }
      set {
        pin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPin {
      get { return pin_ != null; }
    }
    /// <summary>Clears the value of the "pin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPin() {
      pin_ = null;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// Token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiActVHKDToBTC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiActVHKDToBTC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Oid != other.Oid) return false;
      if (Pin != other.Pin) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasOid) hash ^= Oid.GetHashCode();
      if (HasPin) hash ^= Pin.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasOid) {
        output.WriteRawTag(18);
        output.WriteString(Oid);
      }
      if (HasPin) {
        output.WriteRawTag(26);
        output.WriteString(Pin);
      }
      if (HasToken) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasOid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Oid);
      }
      if (HasPin) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pin);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiActVHKDToBTC other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasOid) {
        Oid = other.Oid;
      }
      if (other.HasPin) {
        Pin = other.Pin;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Oid = input.ReadString();
            break;
          }
          case 26: {
            Pin = input.ReadString();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiActVHKDToBTC : pb::IMessage<PBRespAccountVhkdapiActVHKDToBTC> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiActVHKDToBTC> _parser = new pb::MessageParser<PBRespAccountVhkdapiActVHKDToBTC>(() => new PBRespAccountVhkdapiActVHKDToBTC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiActVHKDToBTC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiActVHKDToBTC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiActVHKDToBTC(PBRespAccountVhkdapiActVHKDToBTC other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiActVHKDToBTC Clone() {
      return new PBRespAccountVhkdapiActVHKDToBTC(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiActVHKDToBTC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiActVHKDToBTC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiActVHKDToBTC other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// vhkd or btc 获取兑换最大最小值限制
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiGetConfig : pb::IMessage<PBReqAccountVhkdapiGetConfig> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiGetConfig> _parser = new pb::MessageParser<PBReqAccountVhkdapiGetConfig>(() => new PBReqAccountVhkdapiGetConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiGetConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetConfig(PBReqAccountVhkdapiGetConfig other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetConfig Clone() {
      return new PBReqAccountVhkdapiGetConfig(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiGetConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiGetConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiGetConfig other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiGetConfig : pb::IMessage<PBRespAccountVhkdapiGetConfig> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiGetConfig> _parser = new pb::MessageParser<PBRespAccountVhkdapiGetConfig>(() => new PBRespAccountVhkdapiGetConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiGetConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetConfig(PBRespAccountVhkdapiGetConfig other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      configList_ = other.configList_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetConfig Clone() {
      return new PBRespAccountVhkdapiGetConfig(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "configList" field.</summary>
    public const int ConfigListFieldNumber = 2;
    private readonly static string ConfigListDefaultValue = "";

    private string configList_;
    /// <summary>
    /// 配置列表，json字符串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigList {
      get { return configList_ ?? ConfigListDefaultValue; }
      set {
        configList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "configList" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConfigList {
      get { return configList_ != null; }
    }
    /// <summary>Clears the value of the "configList" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfigList() {
      configList_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiGetConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiGetConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (ConfigList != other.ConfigList) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasConfigList) hash ^= ConfigList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasConfigList) {
        output.WriteRawTag(18);
        output.WriteString(ConfigList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasConfigList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiGetConfig other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasConfigList) {
        ConfigList = other.ConfigList;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            ConfigList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 用户间金币赠送
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiGiveMoney : pb::IMessage<PBReqAccountVhkdapiGiveMoney> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiGiveMoney> _parser = new pb::MessageParser<PBReqAccountVhkdapiGiveMoney>(() => new PBReqAccountVhkdapiGiveMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiGiveMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGiveMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGiveMoney(PBReqAccountVhkdapiGiveMoney other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      recipientuid_ = other.recipientuid_;
      money_ = other.money_;
      pwd_ = other.pwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGiveMoney Clone() {
      return new PBReqAccountVhkdapiGiveMoney(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "recipientuid" field.</summary>
    public const int RecipientuidFieldNumber = 2;
    private readonly static string RecipientuidDefaultValue = "";

    private string recipientuid_;
    /// <summary>
    /// 接收人UID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Recipientuid {
      get { return recipientuid_ ?? RecipientuidDefaultValue; }
      set {
        recipientuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recipientuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecipientuid {
      get { return recipientuid_ != null; }
    }
    /// <summary>Clears the value of the "recipientuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecipientuid() {
      recipientuid_ = null;
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private readonly static string MoneyDefaultValue = "";

    private string money_;
    /// <summary>
    /// 赠送的金币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Money {
      get { return money_ ?? MoneyDefaultValue; }
      set {
        money_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return money_ != null; }
    }
    /// <summary>Clears the value of the "money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      money_ = null;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 4;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    /// <summary>
    /// 二级密码 密文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiGiveMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiGiveMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Recipientuid != other.Recipientuid) return false;
      if (Money != other.Money) return false;
      if (Pwd != other.Pwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasRecipientuid) hash ^= Recipientuid.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasRecipientuid) {
        output.WriteRawTag(18);
        output.WriteString(Recipientuid);
      }
      if (HasMoney) {
        output.WriteRawTag(26);
        output.WriteString(Money);
      }
      if (HasPwd) {
        output.WriteRawTag(34);
        output.WriteString(Pwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasRecipientuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Recipientuid);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Money);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiGiveMoney other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasRecipientuid) {
        Recipientuid = other.Recipientuid;
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Recipientuid = input.ReadString();
            break;
          }
          case 26: {
            Money = input.ReadString();
            break;
          }
          case 34: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiGiveMoney : pb::IMessage<PBRespAccountVhkdapiGiveMoney> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiGiveMoney> _parser = new pb::MessageParser<PBRespAccountVhkdapiGiveMoney>(() => new PBRespAccountVhkdapiGiveMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiGiveMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGiveMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGiveMoney(PBRespAccountVhkdapiGiveMoney other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGiveMoney Clone() {
      return new PBRespAccountVhkdapiGiveMoney(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiGiveMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiGiveMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiGiveMoney other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取用户间游戏币赠送记录
  /// </summary>
  public sealed partial class PBReqAccountGetRecordLog : pb::IMessage<PBReqAccountGetRecordLog> {
    private static readonly pb::MessageParser<PBReqAccountGetRecordLog> _parser = new pb::MessageParser<PBReqAccountGetRecordLog>(() => new PBReqAccountGetRecordLog());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountGetRecordLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountGetRecordLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountGetRecordLog(PBReqAccountGetRecordLog other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      page_ = other.page_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountGetRecordLog Clone() {
      return new PBReqAccountGetRecordLog(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private readonly static uint PageDefaultValue = 0;

    private uint page_;
    /// <summary>
    /// 页数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { if ((_hasBits0 & 1) != 0) { return page_; } else { return PageDefaultValue; } }
      set {
        _hasBits0 |= 1;
        page_ = value;
      }
    }
    /// <summary>Gets whether the "page" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPage {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "page" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPage() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private readonly static uint LimitDefaultValue = 0;

    private uint limit_;
    /// <summary>
    /// 条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { if ((_hasBits0 & 2) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 2;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimit {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimit() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountGetRecordLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountGetRecordLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Page != other.Page) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasPage) hash ^= Page.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasPage) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (HasLimit) {
        output.WriteRawTag(24);
        output.WriteUInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasPage) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountGetRecordLog other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasPage) {
        Page = other.Page;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            Limit = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountGetRecordLog : pb::IMessage<PBRespAccountGetRecordLog> {
    private static readonly pb::MessageParser<PBRespAccountGetRecordLog> _parser = new pb::MessageParser<PBRespAccountGetRecordLog>(() => new PBRespAccountGetRecordLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountGetRecordLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountGetRecordLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountGetRecordLog(PBRespAccountGetRecordLog other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountGetRecordLog Clone() {
      return new PBRespAccountGetRecordLog(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private readonly static string ListDefaultValue = "";

    private string list_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string List {
      get { return list_ ?? ListDefaultValue; }
      set {
        list_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasList {
      get { return list_ != null; }
    }
    /// <summary>Clears the value of the "list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearList() {
      list_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountGetRecordLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountGetRecordLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (List != other.List) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasList) hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasList) {
        output.WriteRawTag(18);
        output.WriteString(List);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(List);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountGetRecordLog other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasList) {
        List = other.List;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            List = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ftpay获取支付方式
  /// </summary>
  public sealed partial class PBReqFtpayGetPayList : pb::IMessage<PBReqFtpayGetPayList> {
    private static readonly pb::MessageParser<PBReqFtpayGetPayList> _parser = new pb::MessageParser<PBReqFtpayGetPayList>(() => new PBReqFtpayGetPayList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqFtpayGetPayList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetPayList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetPayList(PBReqFtpayGetPayList other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetPayList Clone() {
      return new PBReqFtpayGetPayList(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqFtpayGetPayList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqFtpayGetPayList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqFtpayGetPayList other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespFtpayGetPayList : pb::IMessage<PBRespFtpayGetPayList> {
    private static readonly pb::MessageParser<PBRespFtpayGetPayList> _parser = new pb::MessageParser<PBRespFtpayGetPayList>(() => new PBRespFtpayGetPayList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespFtpayGetPayList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetPayList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetPayList(PBRespFtpayGetPayList other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetPayList Clone() {
      return new PBRespFtpayGetPayList(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private readonly static string ListDefaultValue = "";

    private string list_;
    /// <summary>
    /// pay_id，支付方式名称，支付类型，icon图标，注释
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string List {
      get { return list_ ?? ListDefaultValue; }
      set {
        list_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasList {
      get { return list_ != null; }
    }
    /// <summary>Clears the value of the "list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearList() {
      list_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespFtpayGetPayList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespFtpayGetPayList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (List != other.List) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasList) hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasList) {
        output.WriteRawTag(18);
        output.WriteString(List);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(List);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespFtpayGetPayList other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasList) {
        List = other.List;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            List = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ftpay提交支付请求
  /// </summary>
  public sealed partial class PBReqFtpayPaySubmitAct : pb::IMessage<PBReqFtpayPaySubmitAct> {
    private static readonly pb::MessageParser<PBReqFtpayPaySubmitAct> _parser = new pb::MessageParser<PBReqFtpayPaySubmitAct>(() => new PBReqFtpayPaySubmitAct());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqFtpayPaySubmitAct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayPaySubmitAct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayPaySubmitAct(PBReqFtpayPaySubmitAct other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      payId_ = other.payId_;
      money_ = other.money_;
      cardNo_ = other.cardNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayPaySubmitAct Clone() {
      return new PBReqFtpayPaySubmitAct(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "payId" field.</summary>
    public const int PayIdFieldNumber = 2;
    private readonly static uint PayIdDefaultValue = 0;

    private uint payId_;
    /// <summary>
    /// 支付方式id，从 PBRespFtpayGetPayList 获取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PayId {
      get { if ((_hasBits0 & 1) != 0) { return payId_; } else { return PayIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payId_ = value;
      }
    }
    /// <summary>Gets whether the "payId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPayId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private readonly static uint MoneyDefaultValue = 0;

    private uint money_;
    /// <summary>
    /// 金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Money {
      get { if ((_hasBits0 & 2) != 0) { return money_; } else { return MoneyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        money_ = value;
      }
    }
    /// <summary>Gets whether the "money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cardNo" field.</summary>
    public const int CardNoFieldNumber = 4;
    private readonly static string CardNoDefaultValue = "";

    private string cardNo_;
    /// <summary>
    /// 银行卡号，选填，当支付方式为银联快捷时必填
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNo {
      get { return cardNo_ ?? CardNoDefaultValue; }
      set {
        cardNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cardNo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCardNo {
      get { return cardNo_ != null; }
    }
    /// <summary>Clears the value of the "cardNo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCardNo() {
      cardNo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqFtpayPaySubmitAct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqFtpayPaySubmitAct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (PayId != other.PayId) return false;
      if (Money != other.Money) return false;
      if (CardNo != other.CardNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasPayId) hash ^= PayId.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (HasCardNo) hash ^= CardNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasPayId) {
        output.WriteRawTag(16);
        output.WriteUInt32(PayId);
      }
      if (HasMoney) {
        output.WriteRawTag(24);
        output.WriteUInt32(Money);
      }
      if (HasCardNo) {
        output.WriteRawTag(34);
        output.WriteString(CardNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasPayId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PayId);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Money);
      }
      if (HasCardNo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqFtpayPaySubmitAct other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasPayId) {
        PayId = other.PayId;
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.HasCardNo) {
        CardNo = other.CardNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 16: {
            PayId = input.ReadUInt32();
            break;
          }
          case 24: {
            Money = input.ReadUInt32();
            break;
          }
          case 34: {
            CardNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespFtpayPaySubmitAct : pb::IMessage<PBRespFtpayPaySubmitAct> {
    private static readonly pb::MessageParser<PBRespFtpayPaySubmitAct> _parser = new pb::MessageParser<PBRespFtpayPaySubmitAct>(() => new PBRespFtpayPaySubmitAct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespFtpayPaySubmitAct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayPaySubmitAct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayPaySubmitAct(PBRespFtpayPaySubmitAct other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      showUrl_ = other.showUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayPaySubmitAct Clone() {
      return new PBRespFtpayPaySubmitAct(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "showUrl" field.</summary>
    public const int ShowUrlFieldNumber = 2;
    private readonly static string ShowUrlDefaultValue = "";

    private string showUrl_;
    /// <summary>
    /// 支付页url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShowUrl {
      get { return showUrl_ ?? ShowUrlDefaultValue; }
      set {
        showUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "showUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShowUrl {
      get { return showUrl_ != null; }
    }
    /// <summary>Clears the value of the "showUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShowUrl() {
      showUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespFtpayPaySubmitAct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespFtpayPaySubmitAct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (ShowUrl != other.ShowUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasShowUrl) hash ^= ShowUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasShowUrl) {
        output.WriteRawTag(18);
        output.WriteString(ShowUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasShowUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespFtpayPaySubmitAct other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasShowUrl) {
        ShowUrl = other.ShowUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            ShowUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ftpay用户发起提现申请-获取收款银行ID
  /// </summary>
  public sealed partial class PBReqFtpayGetBaId : pb::IMessage<PBReqFtpayGetBaId> {
    private static readonly pb::MessageParser<PBReqFtpayGetBaId> _parser = new pb::MessageParser<PBReqFtpayGetBaId>(() => new PBReqFtpayGetBaId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqFtpayGetBaId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetBaId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetBaId(PBReqFtpayGetBaId other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetBaId Clone() {
      return new PBReqFtpayGetBaId(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqFtpayGetBaId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqFtpayGetBaId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqFtpayGetBaId other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespFtpayGetBaId : pb::IMessage<PBRespFtpayGetBaId> {
    private static readonly pb::MessageParser<PBRespFtpayGetBaId> _parser = new pb::MessageParser<PBRespFtpayGetBaId>(() => new PBRespFtpayGetBaId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespFtpayGetBaId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetBaId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetBaId(PBRespFtpayGetBaId other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      ids_ = other.ids_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetBaId Clone() {
      return new PBRespFtpayGetBaId(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private readonly static string IdsDefaultValue = "";

    private string ids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_ ?? IdsDefaultValue; }
      set {
        ids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ids" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIds {
      get { return ids_ != null; }
    }
    /// <summary>Clears the value of the "ids" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIds() {
      ids_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespFtpayGetBaId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespFtpayGetBaId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Ids != other.Ids) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasIds) hash ^= Ids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasIds) {
        output.WriteRawTag(18);
        output.WriteString(Ids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasIds) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespFtpayGetBaId other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasIds) {
        Ids = other.Ids;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Ids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ftpay用户发起提现申请
  /// </summary>
  public sealed partial class PBReqFtpayLaunchWithdraw : pb::IMessage<PBReqFtpayLaunchWithdraw> {
    private static readonly pb::MessageParser<PBReqFtpayLaunchWithdraw> _parser = new pb::MessageParser<PBReqFtpayLaunchWithdraw>(() => new PBReqFtpayLaunchWithdraw());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqFtpayLaunchWithdraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayLaunchWithdraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayLaunchWithdraw(PBReqFtpayLaunchWithdraw other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      money_ = other.money_;
      realname_ = other.realname_;
      idcard_ = other.idcard_;
      batype_ = other.batype_;
      baname_ = other.baname_;
      baaddr_ = other.baaddr_;
      phoneNo_ = other.phoneNo_;
      pwd_ = other.pwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayLaunchWithdraw Clone() {
      return new PBReqFtpayLaunchWithdraw(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private readonly static uint MoneyDefaultValue = 0;

    private uint money_;
    /// <summary>
    /// 代付金额，单位元，整数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Money {
      get { if ((_hasBits0 & 1) != 0) { return money_; } else { return MoneyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        money_ = value;
      }
    }
    /// <summary>Gets whether the "money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "realname" field.</summary>
    public const int RealnameFieldNumber = 3;
    private readonly static string RealnameDefaultValue = "";

    private string realname_;
    /// <summary>
    /// 真实姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Realname {
      get { return realname_ ?? RealnameDefaultValue; }
      set {
        realname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "realname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRealname {
      get { return realname_ != null; }
    }
    /// <summary>Clears the value of the "realname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRealname() {
      realname_ = null;
    }

    /// <summary>Field number for the "idcard" field.</summary>
    public const int IdcardFieldNumber = 4;
    private readonly static string IdcardDefaultValue = "";

    private string idcard_;
    /// <summary>
    /// 身份证号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idcard {
      get { return idcard_ ?? IdcardDefaultValue; }
      set {
        idcard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "idcard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIdcard {
      get { return idcard_ != null; }
    }
    /// <summary>Clears the value of the "idcard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdcard() {
      idcard_ = null;
    }

    /// <summary>Field number for the "batype" field.</summary>
    public const int BatypeFieldNumber = 5;
    private readonly static string BatypeDefaultValue = "";

    private string batype_;
    /// <summary>
    /// 收款银行ID，例：1002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Batype {
      get { return batype_ ?? BatypeDefaultValue; }
      set {
        batype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "batype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBatype {
      get { return batype_ != null; }
    }
    /// <summary>Clears the value of the "batype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBatype() {
      batype_ = null;
    }

    /// <summary>Field number for the "baname" field.</summary>
    public const int BanameFieldNumber = 6;
    private readonly static string BanameDefaultValue = "";

    private string baname_;
    /// <summary>
    /// 收款账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Baname {
      get { return baname_ ?? BanameDefaultValue; }
      set {
        baname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "baname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaname {
      get { return baname_ != null; }
    }
    /// <summary>Clears the value of the "baname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaname() {
      baname_ = null;
    }

    /// <summary>Field number for the "baaddr" field.</summary>
    public const int BaaddrFieldNumber = 7;
    private readonly static string BaaddrDefaultValue = "";

    private string baaddr_;
    /// <summary>
    /// 开户支行
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Baaddr {
      get { return baaddr_ ?? BaaddrDefaultValue; }
      set {
        baaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "baaddr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaaddr {
      get { return baaddr_ != null; }
    }
    /// <summary>Clears the value of the "baaddr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaaddr() {
      baaddr_ = null;
    }

    /// <summary>Field number for the "phoneNo" field.</summary>
    public const int PhoneNoFieldNumber = 8;
    private readonly static string PhoneNoDefaultValue = "";

    private string phoneNo_;
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNo {
      get { return phoneNo_ ?? PhoneNoDefaultValue; }
      set {
        phoneNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phoneNo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhoneNo {
      get { return phoneNo_ != null; }
    }
    /// <summary>Clears the value of the "phoneNo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhoneNo() {
      phoneNo_ = null;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 9;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    /// <summary>
    /// 二级密码 密文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqFtpayLaunchWithdraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqFtpayLaunchWithdraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Money != other.Money) return false;
      if (Realname != other.Realname) return false;
      if (Idcard != other.Idcard) return false;
      if (Batype != other.Batype) return false;
      if (Baname != other.Baname) return false;
      if (Baaddr != other.Baaddr) return false;
      if (PhoneNo != other.PhoneNo) return false;
      if (Pwd != other.Pwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (HasRealname) hash ^= Realname.GetHashCode();
      if (HasIdcard) hash ^= Idcard.GetHashCode();
      if (HasBatype) hash ^= Batype.GetHashCode();
      if (HasBaname) hash ^= Baname.GetHashCode();
      if (HasBaaddr) hash ^= Baaddr.GetHashCode();
      if (HasPhoneNo) hash ^= PhoneNo.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasMoney) {
        output.WriteRawTag(16);
        output.WriteUInt32(Money);
      }
      if (HasRealname) {
        output.WriteRawTag(26);
        output.WriteString(Realname);
      }
      if (HasIdcard) {
        output.WriteRawTag(34);
        output.WriteString(Idcard);
      }
      if (HasBatype) {
        output.WriteRawTag(42);
        output.WriteString(Batype);
      }
      if (HasBaname) {
        output.WriteRawTag(50);
        output.WriteString(Baname);
      }
      if (HasBaaddr) {
        output.WriteRawTag(58);
        output.WriteString(Baaddr);
      }
      if (HasPhoneNo) {
        output.WriteRawTag(66);
        output.WriteString(PhoneNo);
      }
      if (HasPwd) {
        output.WriteRawTag(74);
        output.WriteString(Pwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Money);
      }
      if (HasRealname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Realname);
      }
      if (HasIdcard) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Idcard);
      }
      if (HasBatype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Batype);
      }
      if (HasBaname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Baname);
      }
      if (HasBaaddr) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Baaddr);
      }
      if (HasPhoneNo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNo);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqFtpayLaunchWithdraw other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.HasRealname) {
        Realname = other.Realname;
      }
      if (other.HasIdcard) {
        Idcard = other.Idcard;
      }
      if (other.HasBatype) {
        Batype = other.Batype;
      }
      if (other.HasBaname) {
        Baname = other.Baname;
      }
      if (other.HasBaaddr) {
        Baaddr = other.Baaddr;
      }
      if (other.HasPhoneNo) {
        PhoneNo = other.PhoneNo;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 16: {
            Money = input.ReadUInt32();
            break;
          }
          case 26: {
            Realname = input.ReadString();
            break;
          }
          case 34: {
            Idcard = input.ReadString();
            break;
          }
          case 42: {
            Batype = input.ReadString();
            break;
          }
          case 50: {
            Baname = input.ReadString();
            break;
          }
          case 58: {
            Baaddr = input.ReadString();
            break;
          }
          case 66: {
            PhoneNo = input.ReadString();
            break;
          }
          case 74: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespFtpayLaunchWithdraw : pb::IMessage<PBRespFtpayLaunchWithdraw> {
    private static readonly pb::MessageParser<PBRespFtpayLaunchWithdraw> _parser = new pb::MessageParser<PBRespFtpayLaunchWithdraw>(() => new PBRespFtpayLaunchWithdraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespFtpayLaunchWithdraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayLaunchWithdraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayLaunchWithdraw(PBRespFtpayLaunchWithdraw other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayLaunchWithdraw Clone() {
      return new PBRespFtpayLaunchWithdraw(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespFtpayLaunchWithdraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespFtpayLaunchWithdraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespFtpayLaunchWithdraw other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 验证PIN
  /// </summary>
  public sealed partial class PBReqCheckPIN : pb::IMessage<PBReqCheckPIN> {
    private static readonly pb::MessageParser<PBReqCheckPIN> _parser = new pb::MessageParser<PBReqCheckPIN>(() => new PBReqCheckPIN());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqCheckPIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqCheckPIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqCheckPIN(PBReqCheckPIN other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqCheckPIN Clone() {
      return new PBReqCheckPIN(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// md5('UID' + 用户uid + 用户输入的pin)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqCheckPIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqCheckPIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqCheckPIN other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespCheckPIN : pb::IMessage<PBRespCheckPIN> {
    private static readonly pb::MessageParser<PBRespCheckPIN> _parser = new pb::MessageParser<PBRespCheckPIN>(() => new PBRespCheckPIN());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespCheckPIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespCheckPIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespCheckPIN(PBRespCheckPIN other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespCheckPIN Clone() {
      return new PBRespCheckPIN(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespCheckPIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespCheckPIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespCheckPIN other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取流水列表
  /// </summary>
  public sealed partial class PBReqGetFlowList : pb::IMessage<PBReqGetFlowList> {
    private static readonly pb::MessageParser<PBReqGetFlowList> _parser = new pb::MessageParser<PBReqGetFlowList>(() => new PBReqGetFlowList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqGetFlowList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetFlowList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetFlowList(PBReqGetFlowList other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      page_ = other.page_;
      limit_ = other.limit_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetFlowList Clone() {
      return new PBReqGetFlowList(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private readonly static uint PageDefaultValue = 0;

    private uint page_;
    /// <summary>
    /// 分页信息，第几页，默认1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { if ((_hasBits0 & 1) != 0) { return page_; } else { return PageDefaultValue; } }
      set {
        _hasBits0 |= 1;
        page_ = value;
      }
    }
    /// <summary>Gets whether the "page" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPage {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "page" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPage() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private readonly static uint LimitDefaultValue = 0;

    private uint limit_;
    /// <summary>
    /// 限制条数，默认20
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { if ((_hasBits0 & 2) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 2;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimit {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimit() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static uint TypeDefaultValue = 0;

    private uint type_;
    /// <summary>
    /// 查找类型，1 充值记录，2 提现记录，3 合并查询（合并查询只查询成功记录）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqGetFlowList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqGetFlowList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Page != other.Page) return false;
      if (Limit != other.Limit) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasPage) hash ^= Page.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasPage) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (HasLimit) {
        output.WriteRawTag(24);
        output.WriteUInt32(Limit);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasPage) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqGetFlowList other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasPage) {
        Page = other.Page;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            Limit = input.ReadUInt32();
            break;
          }
          case 32: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespGetFlowList : pb::IMessage<PBRespGetFlowList> {
    private static readonly pb::MessageParser<PBRespGetFlowList> _parser = new pb::MessageParser<PBRespGetFlowList>(() => new PBRespGetFlowList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespGetFlowList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetFlowList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetFlowList(PBRespGetFlowList other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetFlowList Clone() {
      return new PBRespGetFlowList(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private readonly static string ListDefaultValue = "";

    private string list_;
    /// <summary>
    /// 列表 moneytype为1的时候moneyoption就是区域，最大最小值，为2的时候，是选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string List {
      get { return list_ ?? ListDefaultValue; }
      set {
        list_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasList {
      get { return list_ != null; }
    }
    /// <summary>Clears the value of the "list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearList() {
      list_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespGetFlowList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespGetFlowList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (List != other.List) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasList) hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasList) {
        output.WriteRawTag(18);
        output.WriteString(List);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(List);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespGetFlowList other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasList) {
        List = other.List;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            List = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ftpay获取用户上一次提现的银行卡信息
  /// </summary>
  public sealed partial class PBReqFtpayGetHistoryCardInfo : pb::IMessage<PBReqFtpayGetHistoryCardInfo> {
    private static readonly pb::MessageParser<PBReqFtpayGetHistoryCardInfo> _parser = new pb::MessageParser<PBReqFtpayGetHistoryCardInfo>(() => new PBReqFtpayGetHistoryCardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqFtpayGetHistoryCardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetHistoryCardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetHistoryCardInfo(PBReqFtpayGetHistoryCardInfo other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetHistoryCardInfo Clone() {
      return new PBReqFtpayGetHistoryCardInfo(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqFtpayGetHistoryCardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqFtpayGetHistoryCardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqFtpayGetHistoryCardInfo other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespFtpayGetHistoryCardInfo : pb::IMessage<PBRespFtpayGetHistoryCardInfo> {
    private static readonly pb::MessageParser<PBRespFtpayGetHistoryCardInfo> _parser = new pb::MessageParser<PBRespFtpayGetHistoryCardInfo>(() => new PBRespFtpayGetHistoryCardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespFtpayGetHistoryCardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetHistoryCardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetHistoryCardInfo(PBRespFtpayGetHistoryCardInfo other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      realname_ = other.realname_;
      idcard_ = other.idcard_;
      batype_ = other.batype_;
      batypename_ = other.batypename_;
      baname_ = other.baname_;
      baaddr_ = other.baaddr_;
      phoneNo_ = other.phoneNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetHistoryCardInfo Clone() {
      return new PBRespFtpayGetHistoryCardInfo(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "realname" field.</summary>
    public const int RealnameFieldNumber = 2;
    private readonly static string RealnameDefaultValue = "";

    private string realname_;
    /// <summary>
    /// 真实姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Realname {
      get { return realname_ ?? RealnameDefaultValue; }
      set {
        realname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "realname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRealname {
      get { return realname_ != null; }
    }
    /// <summary>Clears the value of the "realname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRealname() {
      realname_ = null;
    }

    /// <summary>Field number for the "idcard" field.</summary>
    public const int IdcardFieldNumber = 3;
    private readonly static string IdcardDefaultValue = "";

    private string idcard_;
    /// <summary>
    /// 身份证号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idcard {
      get { return idcard_ ?? IdcardDefaultValue; }
      set {
        idcard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "idcard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIdcard {
      get { return idcard_ != null; }
    }
    /// <summary>Clears the value of the "idcard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdcard() {
      idcard_ = null;
    }

    /// <summary>Field number for the "batype" field.</summary>
    public const int BatypeFieldNumber = 4;
    private readonly static string BatypeDefaultValue = "";

    private string batype_;
    /// <summary>
    /// 收款银行ID，例：1002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Batype {
      get { return batype_ ?? BatypeDefaultValue; }
      set {
        batype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "batype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBatype {
      get { return batype_ != null; }
    }
    /// <summary>Clears the value of the "batype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBatype() {
      batype_ = null;
    }

    /// <summary>Field number for the "batypename" field.</summary>
    public const int BatypenameFieldNumber = 5;
    private readonly static string BatypenameDefaultValue = "";

    private string batypename_;
    /// <summary>
    /// 银行名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Batypename {
      get { return batypename_ ?? BatypenameDefaultValue; }
      set {
        batypename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "batypename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBatypename {
      get { return batypename_ != null; }
    }
    /// <summary>Clears the value of the "batypename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBatypename() {
      batypename_ = null;
    }

    /// <summary>Field number for the "baname" field.</summary>
    public const int BanameFieldNumber = 6;
    private readonly static string BanameDefaultValue = "";

    private string baname_;
    /// <summary>
    /// 收款账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Baname {
      get { return baname_ ?? BanameDefaultValue; }
      set {
        baname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "baname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaname {
      get { return baname_ != null; }
    }
    /// <summary>Clears the value of the "baname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaname() {
      baname_ = null;
    }

    /// <summary>Field number for the "baaddr" field.</summary>
    public const int BaaddrFieldNumber = 7;
    private readonly static string BaaddrDefaultValue = "";

    private string baaddr_;
    /// <summary>
    /// 开户支行
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Baaddr {
      get { return baaddr_ ?? BaaddrDefaultValue; }
      set {
        baaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "baaddr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaaddr {
      get { return baaddr_ != null; }
    }
    /// <summary>Clears the value of the "baaddr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaaddr() {
      baaddr_ = null;
    }

    /// <summary>Field number for the "phoneNo" field.</summary>
    public const int PhoneNoFieldNumber = 8;
    private readonly static string PhoneNoDefaultValue = "";

    private string phoneNo_;
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNo {
      get { return phoneNo_ ?? PhoneNoDefaultValue; }
      set {
        phoneNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phoneNo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhoneNo {
      get { return phoneNo_ != null; }
    }
    /// <summary>Clears the value of the "phoneNo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhoneNo() {
      phoneNo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespFtpayGetHistoryCardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespFtpayGetHistoryCardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Realname != other.Realname) return false;
      if (Idcard != other.Idcard) return false;
      if (Batype != other.Batype) return false;
      if (Batypename != other.Batypename) return false;
      if (Baname != other.Baname) return false;
      if (Baaddr != other.Baaddr) return false;
      if (PhoneNo != other.PhoneNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasRealname) hash ^= Realname.GetHashCode();
      if (HasIdcard) hash ^= Idcard.GetHashCode();
      if (HasBatype) hash ^= Batype.GetHashCode();
      if (HasBatypename) hash ^= Batypename.GetHashCode();
      if (HasBaname) hash ^= Baname.GetHashCode();
      if (HasBaaddr) hash ^= Baaddr.GetHashCode();
      if (HasPhoneNo) hash ^= PhoneNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasRealname) {
        output.WriteRawTag(18);
        output.WriteString(Realname);
      }
      if (HasIdcard) {
        output.WriteRawTag(26);
        output.WriteString(Idcard);
      }
      if (HasBatype) {
        output.WriteRawTag(34);
        output.WriteString(Batype);
      }
      if (HasBatypename) {
        output.WriteRawTag(42);
        output.WriteString(Batypename);
      }
      if (HasBaname) {
        output.WriteRawTag(50);
        output.WriteString(Baname);
      }
      if (HasBaaddr) {
        output.WriteRawTag(58);
        output.WriteString(Baaddr);
      }
      if (HasPhoneNo) {
        output.WriteRawTag(66);
        output.WriteString(PhoneNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasRealname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Realname);
      }
      if (HasIdcard) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Idcard);
      }
      if (HasBatype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Batype);
      }
      if (HasBatypename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Batypename);
      }
      if (HasBaname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Baname);
      }
      if (HasBaaddr) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Baaddr);
      }
      if (HasPhoneNo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespFtpayGetHistoryCardInfo other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasRealname) {
        Realname = other.Realname;
      }
      if (other.HasIdcard) {
        Idcard = other.Idcard;
      }
      if (other.HasBatype) {
        Batype = other.Batype;
      }
      if (other.HasBatypename) {
        Batypename = other.Batypename;
      }
      if (other.HasBaname) {
        Baname = other.Baname;
      }
      if (other.HasBaaddr) {
        Baaddr = other.Baaddr;
      }
      if (other.HasPhoneNo) {
        PhoneNo = other.PhoneNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Realname = input.ReadString();
            break;
          }
          case 26: {
            Idcard = input.ReadString();
            break;
          }
          case 34: {
            Batype = input.ReadString();
            break;
          }
          case 42: {
            Batypename = input.ReadString();
            break;
          }
          case 50: {
            Baname = input.ReadString();
            break;
          }
          case 58: {
            Baaddr = input.ReadString();
            break;
          }
          case 66: {
            PhoneNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// vgpay注册 or 登陆
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiVhkdLogIn : pb::IMessage<PBReqAccountVhkdapiVhkdLogIn> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiVhkdLogIn> _parser = new pb::MessageParser<PBReqAccountVhkdapiVhkdLogIn>(() => new PBReqAccountVhkdapiVhkdLogIn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiVhkdLogIn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdLogIn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdLogIn(PBReqAccountVhkdapiVhkdLogIn other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      number_ = other.number_;
      pwd_ = other.pwd_;
      type_ = other.type_;
      countryCode_ = other.countryCode_;
      areaCode_ = other.areaCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdLogIn Clone() {
      return new PBReqAccountVhkdapiVhkdLogIn(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    /// <summary>
    /// 手机号码或邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 3;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    /// <summary>
    /// 明文密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// 号码类型，'phone' 手机 'email' 邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "countryCode" field.</summary>
    public const int CountryCodeFieldNumber = 5;
    private readonly static string CountryCodeDefaultValue = "";

    private string countryCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_ ?? CountryCodeDefaultValue; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "countryCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCountryCode {
      get { return countryCode_ != null; }
    }
    /// <summary>Clears the value of the "countryCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCountryCode() {
      countryCode_ = null;
    }

    /// <summary>Field number for the "areaCode" field.</summary>
    public const int AreaCodeFieldNumber = 6;
    private readonly static string AreaCodeDefaultValue = "";

    private string areaCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaCode {
      get { return areaCode_ ?? AreaCodeDefaultValue; }
      set {
        areaCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "areaCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAreaCode {
      get { return areaCode_ != null; }
    }
    /// <summary>Clears the value of the "areaCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAreaCode() {
      areaCode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiVhkdLogIn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiVhkdLogIn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Number != other.Number) return false;
      if (Pwd != other.Pwd) return false;
      if (Type != other.Type) return false;
      if (CountryCode != other.CountryCode) return false;
      if (AreaCode != other.AreaCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasCountryCode) hash ^= CountryCode.GetHashCode();
      if (HasAreaCode) hash ^= AreaCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasNumber) {
        output.WriteRawTag(18);
        output.WriteString(Number);
      }
      if (HasPwd) {
        output.WriteRawTag(26);
        output.WriteString(Pwd);
      }
      if (HasType) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (HasCountryCode) {
        output.WriteRawTag(42);
        output.WriteString(CountryCode);
      }
      if (HasAreaCode) {
        output.WriteRawTag(50);
        output.WriteString(AreaCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasCountryCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (HasAreaCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiVhkdLogIn other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasCountryCode) {
        CountryCode = other.CountryCode;
      }
      if (other.HasAreaCode) {
        AreaCode = other.AreaCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Number = input.ReadString();
            break;
          }
          case 26: {
            Pwd = input.ReadString();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 42: {
            CountryCode = input.ReadString();
            break;
          }
          case 50: {
            AreaCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiVhkdLogIn : pb::IMessage<PBRespAccountVhkdapiVhkdLogIn> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiVhkdLogIn> _parser = new pb::MessageParser<PBRespAccountVhkdapiVhkdLogIn>(() => new PBRespAccountVhkdapiVhkdLogIn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiVhkdLogIn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdLogIn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdLogIn(PBRespAccountVhkdapiVhkdLogIn other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      loginData_ = other.loginData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdLogIn Clone() {
      return new PBRespAccountVhkdapiVhkdLogIn(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "loginData" field.</summary>
    public const int LoginDataFieldNumber = 2;
    private readonly static string LoginDataDefaultValue = "";

    private string loginData_;
    /// <summary>
    /// json字符串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginData {
      get { return loginData_ ?? LoginDataDefaultValue; }
      set {
        loginData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "loginData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLoginData {
      get { return loginData_ != null; }
    }
    /// <summary>Clears the value of the "loginData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoginData() {
      loginData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiVhkdLogIn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiVhkdLogIn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (LoginData != other.LoginData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasLoginData) hash ^= LoginData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasLoginData) {
        output.WriteRawTag(18);
        output.WriteString(LoginData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasLoginData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiVhkdLogIn other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasLoginData) {
        LoginData = other.LoginData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            LoginData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 设置PIN
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiVhkdSetPin : pb::IMessage<PBReqAccountVhkdapiVhkdSetPin> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiVhkdSetPin> _parser = new pb::MessageParser<PBReqAccountVhkdapiVhkdSetPin>(() => new PBReqAccountVhkdapiVhkdSetPin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiVhkdSetPin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdSetPin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdSetPin(PBReqAccountVhkdapiVhkdSetPin other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      pin_ = other.pin_;
      code_ = other.code_;
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdSetPin Clone() {
      return new PBReqAccountVhkdapiVhkdSetPin(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 2;
    private readonly static string PinDefaultValue = "";

    private string pin_;
    /// <summary>
    /// 用户输入的pin码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pin {
      get { return pin_ ?? PinDefaultValue; }
      set {
        pin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPin {
      get { return pin_ != null; }
    }
    /// <summary>Clears the value of the "pin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPin() {
      pin_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// 用户输入的验证码 不需要验证码验证则传'no'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 4;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    /// <summary>
    /// 用户的账号 phone::+86:15818708414 email::pcphper@163.com 不需要验证码验证则传'no'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiVhkdSetPin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiVhkdSetPin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Pin != other.Pin) return false;
      if (Code != other.Code) return false;
      if (Number != other.Number) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasPin) hash ^= Pin.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasPin) {
        output.WriteRawTag(18);
        output.WriteString(Pin);
      }
      if (HasCode) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (HasNumber) {
        output.WriteRawTag(34);
        output.WriteString(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasPin) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pin);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiVhkdSetPin other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasPin) {
        Pin = other.Pin;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Pin = input.ReadString();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
          case 34: {
            Number = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiVhkdSetPin : pb::IMessage<PBRespAccountVhkdapiVhkdSetPin> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiVhkdSetPin> _parser = new pb::MessageParser<PBRespAccountVhkdapiVhkdSetPin>(() => new PBRespAccountVhkdapiVhkdSetPin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiVhkdSetPin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdSetPin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdSetPin(PBRespAccountVhkdapiVhkdSetPin other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdSetPin Clone() {
      return new PBRespAccountVhkdapiVhkdSetPin(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiVhkdSetPin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiVhkdSetPin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiVhkdSetPin other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// vhkd查询用户资产
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiVhkdGetAssets : pb::IMessage<PBReqAccountVhkdapiVhkdGetAssets> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiVhkdGetAssets> _parser = new pb::MessageParser<PBReqAccountVhkdapiVhkdGetAssets>(() => new PBReqAccountVhkdapiVhkdGetAssets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiVhkdGetAssets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdGetAssets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdGetAssets(PBReqAccountVhkdapiVhkdGetAssets other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      userId_ = other.userId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdGetAssets Clone() {
      return new PBReqAccountVhkdapiVhkdGetAssets(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private readonly static string UserIdDefaultValue = "";

    private string userId_;
    /// <summary>
    /// 用户vhkd返回的UserID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_ ?? UserIdDefaultValue; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "UserId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "UserId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserId() {
      userId_ = null;
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// 用户vhkd凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiVhkdGetAssets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiVhkdGetAssets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (UserId != other.UserId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasUserId) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiVhkdGetAssets other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiVhkdGetAssets : pb::IMessage<PBRespAccountVhkdapiVhkdGetAssets> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiVhkdGetAssets> _parser = new pb::MessageParser<PBRespAccountVhkdapiVhkdGetAssets>(() => new PBRespAccountVhkdapiVhkdGetAssets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiVhkdGetAssets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdGetAssets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdGetAssets(PBRespAccountVhkdapiVhkdGetAssets other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      assetsData_ = other.assetsData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdGetAssets Clone() {
      return new PBRespAccountVhkdapiVhkdGetAssets(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "assetsData" field.</summary>
    public const int AssetsDataFieldNumber = 2;
    private readonly static string AssetsDataDefaultValue = "";

    private string assetsData_;
    /// <summary>
    /// json字符串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetsData {
      get { return assetsData_ ?? AssetsDataDefaultValue; }
      set {
        assetsData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "assetsData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsData {
      get { return assetsData_ != null; }
    }
    /// <summary>Clears the value of the "assetsData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsData() {
      assetsData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiVhkdGetAssets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiVhkdGetAssets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (AssetsData != other.AssetsData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasAssetsData) hash ^= AssetsData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasAssetsData) {
        output.WriteRawTag(18);
        output.WriteString(AssetsData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasAssetsData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetsData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiVhkdGetAssets other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasAssetsData) {
        AssetsData = other.AssetsData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            AssetsData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询vgpay与金币兑换记录
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiGetFlowList : pb::IMessage<PBReqAccountVhkdapiGetFlowList> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiGetFlowList> _parser = new pb::MessageParser<PBReqAccountVhkdapiGetFlowList>(() => new PBReqAccountVhkdapiGetFlowList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiGetFlowList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetFlowList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetFlowList(PBReqAccountVhkdapiGetFlowList other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiGetFlowList Clone() {
      return new PBReqAccountVhkdapiGetFlowList(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiGetFlowList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiGetFlowList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiGetFlowList other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiGetFlowList : pb::IMessage<PBRespAccountVhkdapiGetFlowList> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiGetFlowList> _parser = new pb::MessageParser<PBRespAccountVhkdapiGetFlowList>(() => new PBRespAccountVhkdapiGetFlowList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiGetFlowList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetFlowList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetFlowList(PBRespAccountVhkdapiGetFlowList other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      listData_ = other.listData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiGetFlowList Clone() {
      return new PBRespAccountVhkdapiGetFlowList(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "listData" field.</summary>
    public const int ListDataFieldNumber = 2;
    private readonly static string ListDataDefaultValue = "";

    private string listData_;
    /// <summary>
    /// json字符串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListData {
      get { return listData_ ?? ListDataDefaultValue; }
      set {
        listData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "listData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasListData {
      get { return listData_ != null; }
    }
    /// <summary>Clears the value of the "listData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearListData() {
      listData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiGetFlowList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiGetFlowList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (ListData != other.ListData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasListData) hash ^= ListData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasListData) {
        output.WriteRawTag(18);
        output.WriteString(ListData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasListData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiGetFlowList other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasListData) {
        ListData = other.ListData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            ListData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询 pin
  /// </summary>
  public sealed partial class PBReqAccountVhkdapiVhkdIsHasPin : pb::IMessage<PBReqAccountVhkdapiVhkdIsHasPin> {
    private static readonly pb::MessageParser<PBReqAccountVhkdapiVhkdIsHasPin> _parser = new pb::MessageParser<PBReqAccountVhkdapiVhkdIsHasPin>(() => new PBReqAccountVhkdapiVhkdIsHasPin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVhkdapiVhkdIsHasPin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdIsHasPin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdIsHasPin(PBReqAccountVhkdapiVhkdIsHasPin other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVhkdapiVhkdIsHasPin Clone() {
      return new PBReqAccountVhkdapiVhkdIsHasPin(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVhkdapiVhkdIsHasPin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVhkdapiVhkdIsHasPin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVhkdapiVhkdIsHasPin other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVhkdapiVhkdIsHasPin : pb::IMessage<PBRespAccountVhkdapiVhkdIsHasPin> {
    private static readonly pb::MessageParser<PBRespAccountVhkdapiVhkdIsHasPin> _parser = new pb::MessageParser<PBRespAccountVhkdapiVhkdIsHasPin>(() => new PBRespAccountVhkdapiVhkdIsHasPin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVhkdapiVhkdIsHasPin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdIsHasPin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdIsHasPin(PBRespAccountVhkdapiVhkdIsHasPin other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      pin_ = other.pin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVhkdapiVhkdIsHasPin Clone() {
      return new PBRespAccountVhkdapiVhkdIsHasPin(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 2;
    private readonly static string PinDefaultValue = "";

    private string pin_;
    /// <summary>
    /// PIN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pin {
      get { return pin_ ?? PinDefaultValue; }
      set {
        pin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPin {
      get { return pin_ != null; }
    }
    /// <summary>Clears the value of the "pin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPin() {
      pin_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVhkdapiVhkdIsHasPin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVhkdapiVhkdIsHasPin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Pin != other.Pin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasPin) hash ^= Pin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasPin) {
        output.WriteRawTag(18);
        output.WriteString(Pin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasPin) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVhkdapiVhkdIsHasPin other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasPin) {
        Pin = other.Pin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Pin = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 游戏币 &lt;=> 数字货币 兑换
  /// </summary>
  public sealed partial class PBReqAccountVGPayUpdateAssets : pb::IMessage<PBReqAccountVGPayUpdateAssets> {
    private static readonly pb::MessageParser<PBReqAccountVGPayUpdateAssets> _parser = new pb::MessageParser<PBReqAccountVGPayUpdateAssets>(() => new PBReqAccountVGPayUpdateAssets());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVGPayUpdateAssets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayUpdateAssets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayUpdateAssets(PBReqAccountVGPayUpdateAssets other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      token_ = other.token_;
      money_ = other.money_;
      dCNum_ = other.dCNum_;
      type_ = other.type_;
      assetsID_ = other.assetsID_;
      assetsName_ = other.assetsName_;
      accuracy_ = other.accuracy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayUpdateAssets Clone() {
      return new PBReqAccountVGPayUpdateAssets(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// VGPay凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private readonly static uint MoneyDefaultValue = 0;

    private uint money_;
    /// <summary>
    /// 游戏币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Money {
      get { if ((_hasBits0 & 1) != 0) { return money_; } else { return MoneyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        money_ = value;
      }
    }
    /// <summary>Gets whether the "Money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "DCNum" field.</summary>
    public const int DCNumFieldNumber = 4;
    private readonly static string DCNumDefaultValue = "";

    private string dCNum_;
    /// <summary>
    /// 数字货币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DCNum {
      get { return dCNum_ ?? DCNumDefaultValue; }
      set {
        dCNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "DCNum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDCNum {
      get { return dCNum_ != null; }
    }
    /// <summary>Clears the value of the "DCNum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDCNum() {
      dCNum_ = null;
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 5;
    private readonly static uint TypeDefaultValue = 0;

    private uint type_;
    /// <summary>
    /// 兑换类型 1：买游戏币(数字货币 => 游戏币) 2：卖游戏币(游戏币 => 数字货币)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "Type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "Type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "AssetsID" field.</summary>
    public const int AssetsIDFieldNumber = 6;
    private readonly static string AssetsIDDefaultValue = "";

    private string assetsID_;
    /// <summary>
    /// 数字货币资产ID AssetsID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetsID {
      get { return assetsID_ ?? AssetsIDDefaultValue; }
      set {
        assetsID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "AssetsID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsID {
      get { return assetsID_ != null; }
    }
    /// <summary>Clears the value of the "AssetsID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsID() {
      assetsID_ = null;
    }

    /// <summary>Field number for the "AssetsName" field.</summary>
    public const int AssetsNameFieldNumber = 7;
    private readonly static string AssetsNameDefaultValue = "";

    private string assetsName_;
    /// <summary>
    /// 数字货币资产类型名称 AssetsName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetsName {
      get { return assetsName_ ?? AssetsNameDefaultValue; }
      set {
        assetsName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "AssetsName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsName {
      get { return assetsName_ != null; }
    }
    /// <summary>Clears the value of the "AssetsName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsName() {
      assetsName_ = null;
    }

    /// <summary>Field number for the "Accuracy" field.</summary>
    public const int AccuracyFieldNumber = 8;
    private readonly static string AccuracyDefaultValue = "";

    private string accuracy_;
    /// <summary>
    /// 数字货币资产精度 Accuracy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Accuracy {
      get { return accuracy_ ?? AccuracyDefaultValue; }
      set {
        accuracy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Accuracy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccuracy {
      get { return accuracy_ != null; }
    }
    /// <summary>Clears the value of the "Accuracy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccuracy() {
      accuracy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVGPayUpdateAssets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVGPayUpdateAssets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Token != other.Token) return false;
      if (Money != other.Money) return false;
      if (DCNum != other.DCNum) return false;
      if (Type != other.Type) return false;
      if (AssetsID != other.AssetsID) return false;
      if (AssetsName != other.AssetsName) return false;
      if (Accuracy != other.Accuracy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (HasDCNum) hash ^= DCNum.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasAssetsID) hash ^= AssetsID.GetHashCode();
      if (HasAssetsName) hash ^= AssetsName.GetHashCode();
      if (HasAccuracy) hash ^= Accuracy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasMoney) {
        output.WriteRawTag(24);
        output.WriteUInt32(Money);
      }
      if (HasDCNum) {
        output.WriteRawTag(34);
        output.WriteString(DCNum);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteUInt32(Type);
      }
      if (HasAssetsID) {
        output.WriteRawTag(50);
        output.WriteString(AssetsID);
      }
      if (HasAssetsName) {
        output.WriteRawTag(58);
        output.WriteString(AssetsName);
      }
      if (HasAccuracy) {
        output.WriteRawTag(66);
        output.WriteString(Accuracy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Money);
      }
      if (HasDCNum) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DCNum);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (HasAssetsID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetsID);
      }
      if (HasAssetsName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetsName);
      }
      if (HasAccuracy) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Accuracy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVGPayUpdateAssets other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.HasDCNum) {
        DCNum = other.DCNum;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasAssetsID) {
        AssetsID = other.AssetsID;
      }
      if (other.HasAssetsName) {
        AssetsName = other.AssetsName;
      }
      if (other.HasAccuracy) {
        Accuracy = other.Accuracy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Money = input.ReadUInt32();
            break;
          }
          case 34: {
            DCNum = input.ReadString();
            break;
          }
          case 40: {
            Type = input.ReadUInt32();
            break;
          }
          case 50: {
            AssetsID = input.ReadString();
            break;
          }
          case 58: {
            AssetsName = input.ReadString();
            break;
          }
          case 66: {
            Accuracy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVGPayUpdateAssets : pb::IMessage<PBRespAccountVGPayUpdateAssets> {
    private static readonly pb::MessageParser<PBRespAccountVGPayUpdateAssets> _parser = new pb::MessageParser<PBRespAccountVGPayUpdateAssets>(() => new PBRespAccountVGPayUpdateAssets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVGPayUpdateAssets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayUpdateAssets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayUpdateAssets(PBRespAccountVGPayUpdateAssets other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayUpdateAssets Clone() {
      return new PBRespAccountVGPayUpdateAssets(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVGPayUpdateAssets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVGPayUpdateAssets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVGPayUpdateAssets other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取充币地址
  /// </summary>
  public sealed partial class PBReqAccountVGPayGetAddress : pb::IMessage<PBReqAccountVGPayGetAddress> {
    private static readonly pb::MessageParser<PBReqAccountVGPayGetAddress> _parser = new pb::MessageParser<PBReqAccountVGPayGetAddress>(() => new PBReqAccountVGPayGetAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVGPayGetAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetAddress(PBReqAccountVGPayGetAddress other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      assetsID_ = other.assetsID_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetAddress Clone() {
      return new PBReqAccountVGPayGetAddress(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "AssetsID" field.</summary>
    public const int AssetsIDFieldNumber = 2;
    private readonly static string AssetsIDDefaultValue = "";

    private string assetsID_;
    /// <summary>
    /// 资产ID (请求用户资产列表里有资产ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetsID {
      get { return assetsID_ ?? AssetsIDDefaultValue; }
      set {
        assetsID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "AssetsID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsID {
      get { return assetsID_ != null; }
    }
    /// <summary>Clears the value of the "AssetsID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsID() {
      assetsID_ = null;
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// VGPay凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVGPayGetAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVGPayGetAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (AssetsID != other.AssetsID) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasAssetsID) hash ^= AssetsID.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasAssetsID) {
        output.WriteRawTag(18);
        output.WriteString(AssetsID);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasAssetsID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetsID);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVGPayGetAddress other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasAssetsID) {
        AssetsID = other.AssetsID;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            AssetsID = input.ReadString();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVGPayGetAddress : pb::IMessage<PBRespAccountVGPayGetAddress> {
    private static readonly pb::MessageParser<PBRespAccountVGPayGetAddress> _parser = new pb::MessageParser<PBRespAccountVGPayGetAddress>(() => new PBRespAccountVGPayGetAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVGPayGetAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetAddress(PBRespAccountVGPayGetAddress other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetAddress Clone() {
      return new PBRespAccountVGPayGetAddress(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private readonly static string DataDefaultValue = "";

    private string data_;
    /// <summary>
    /// json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVGPayGetAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVGPayGetAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasData) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVGPayGetAddress other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasData) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取提币配置
  /// </summary>
  public sealed partial class PBReqAccountVGPayGetWithdrawConfig : pb::IMessage<PBReqAccountVGPayGetWithdrawConfig> {
    private static readonly pb::MessageParser<PBReqAccountVGPayGetWithdrawConfig> _parser = new pb::MessageParser<PBReqAccountVGPayGetWithdrawConfig>(() => new PBReqAccountVGPayGetWithdrawConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVGPayGetWithdrawConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetWithdrawConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetWithdrawConfig(PBReqAccountVGPayGetWithdrawConfig other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      assetsID_ = other.assetsID_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetWithdrawConfig Clone() {
      return new PBReqAccountVGPayGetWithdrawConfig(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "AssetsID" field.</summary>
    public const int AssetsIDFieldNumber = 2;
    private readonly static string AssetsIDDefaultValue = "";

    private string assetsID_;
    /// <summary>
    /// 资产ID (请求用户资产列表里有资产ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetsID {
      get { return assetsID_ ?? AssetsIDDefaultValue; }
      set {
        assetsID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "AssetsID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsID {
      get { return assetsID_ != null; }
    }
    /// <summary>Clears the value of the "AssetsID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsID() {
      assetsID_ = null;
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// VGPay凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVGPayGetWithdrawConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVGPayGetWithdrawConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (AssetsID != other.AssetsID) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasAssetsID) hash ^= AssetsID.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasAssetsID) {
        output.WriteRawTag(18);
        output.WriteString(AssetsID);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasAssetsID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetsID);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVGPayGetWithdrawConfig other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasAssetsID) {
        AssetsID = other.AssetsID;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            AssetsID = input.ReadString();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVGPayGetWithdrawConfig : pb::IMessage<PBRespAccountVGPayGetWithdrawConfig> {
    private static readonly pb::MessageParser<PBRespAccountVGPayGetWithdrawConfig> _parser = new pb::MessageParser<PBRespAccountVGPayGetWithdrawConfig>(() => new PBRespAccountVGPayGetWithdrawConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVGPayGetWithdrawConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetWithdrawConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetWithdrawConfig(PBRespAccountVGPayGetWithdrawConfig other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetWithdrawConfig Clone() {
      return new PBRespAccountVGPayGetWithdrawConfig(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private readonly static string DataDefaultValue = "";

    private string data_;
    /// <summary>
    /// json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVGPayGetWithdrawConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVGPayGetWithdrawConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasData) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVGPayGetWithdrawConfig other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasData) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 提交提币申请
  /// </summary>
  public sealed partial class PBReqAccountVGPayApplyTransactionOut : pb::IMessage<PBReqAccountVGPayApplyTransactionOut> {
    private static readonly pb::MessageParser<PBReqAccountVGPayApplyTransactionOut> _parser = new pb::MessageParser<PBReqAccountVGPayApplyTransactionOut>(() => new PBReqAccountVGPayApplyTransactionOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVGPayApplyTransactionOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayApplyTransactionOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayApplyTransactionOut(PBReqAccountVGPayApplyTransactionOut other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      token_ = other.token_;
      coinID_ = other.coinID_;
      coinAddress_ = other.coinAddress_;
      applyQuantity_ = other.applyQuantity_;
      pwd_ = other.pwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayApplyTransactionOut Clone() {
      return new PBReqAccountVGPayApplyTransactionOut(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// VGPay凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "CoinID" field.</summary>
    public const int CoinIDFieldNumber = 3;
    private readonly static string CoinIDDefaultValue = "";

    private string coinID_;
    /// <summary>
    /// 资产ID (请求用户资产列表里有资产ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoinID {
      get { return coinID_ ?? CoinIDDefaultValue; }
      set {
        coinID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "CoinID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCoinID {
      get { return coinID_ != null; }
    }
    /// <summary>Clears the value of the "CoinID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCoinID() {
      coinID_ = null;
    }

    /// <summary>Field number for the "CoinAddress" field.</summary>
    public const int CoinAddressFieldNumber = 4;
    private readonly static string CoinAddressDefaultValue = "";

    private string coinAddress_;
    /// <summary>
    /// 提币地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoinAddress {
      get { return coinAddress_ ?? CoinAddressDefaultValue; }
      set {
        coinAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "CoinAddress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCoinAddress {
      get { return coinAddress_ != null; }
    }
    /// <summary>Clears the value of the "CoinAddress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCoinAddress() {
      coinAddress_ = null;
    }

    /// <summary>Field number for the "ApplyQuantity" field.</summary>
    public const int ApplyQuantityFieldNumber = 5;
    private readonly static string ApplyQuantityDefaultValue = "";

    private string applyQuantity_;
    /// <summary>
    /// 提币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplyQuantity {
      get { return applyQuantity_ ?? ApplyQuantityDefaultValue; }
      set {
        applyQuantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ApplyQuantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApplyQuantity {
      get { return applyQuantity_ != null; }
    }
    /// <summary>Clears the value of the "ApplyQuantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApplyQuantity() {
      applyQuantity_ = null;
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 6;
    private readonly static string PwdDefaultValue = "";

    private string pwd_;
    /// <summary>
    /// 二级密码 密文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_ ?? PwdDefaultValue; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPwd {
      get { return pwd_ != null; }
    }
    /// <summary>Clears the value of the "pwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPwd() {
      pwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVGPayApplyTransactionOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVGPayApplyTransactionOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Token != other.Token) return false;
      if (CoinID != other.CoinID) return false;
      if (CoinAddress != other.CoinAddress) return false;
      if (ApplyQuantity != other.ApplyQuantity) return false;
      if (Pwd != other.Pwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasCoinID) hash ^= CoinID.GetHashCode();
      if (HasCoinAddress) hash ^= CoinAddress.GetHashCode();
      if (HasApplyQuantity) hash ^= ApplyQuantity.GetHashCode();
      if (HasPwd) hash ^= Pwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasCoinID) {
        output.WriteRawTag(26);
        output.WriteString(CoinID);
      }
      if (HasCoinAddress) {
        output.WriteRawTag(34);
        output.WriteString(CoinAddress);
      }
      if (HasApplyQuantity) {
        output.WriteRawTag(42);
        output.WriteString(ApplyQuantity);
      }
      if (HasPwd) {
        output.WriteRawTag(50);
        output.WriteString(Pwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasCoinID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoinID);
      }
      if (HasCoinAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoinAddress);
      }
      if (HasApplyQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplyQuantity);
      }
      if (HasPwd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVGPayApplyTransactionOut other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasCoinID) {
        CoinID = other.CoinID;
      }
      if (other.HasCoinAddress) {
        CoinAddress = other.CoinAddress;
      }
      if (other.HasApplyQuantity) {
        ApplyQuantity = other.ApplyQuantity;
      }
      if (other.HasPwd) {
        Pwd = other.Pwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            CoinID = input.ReadString();
            break;
          }
          case 34: {
            CoinAddress = input.ReadString();
            break;
          }
          case 42: {
            ApplyQuantity = input.ReadString();
            break;
          }
          case 50: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVGPayApplyTransactionOut : pb::IMessage<PBRespAccountVGPayApplyTransactionOut> {
    private static readonly pb::MessageParser<PBRespAccountVGPayApplyTransactionOut> _parser = new pb::MessageParser<PBRespAccountVGPayApplyTransactionOut>(() => new PBRespAccountVGPayApplyTransactionOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVGPayApplyTransactionOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayApplyTransactionOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayApplyTransactionOut(PBRespAccountVGPayApplyTransactionOut other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayApplyTransactionOut Clone() {
      return new PBRespAccountVGPayApplyTransactionOut(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVGPayApplyTransactionOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVGPayApplyTransactionOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVGPayApplyTransactionOut other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取冲提币记录
  /// </summary>
  public sealed partial class PBReqAccountVGPayGetAssetsRecordPageList : pb::IMessage<PBReqAccountVGPayGetAssetsRecordPageList> {
    private static readonly pb::MessageParser<PBReqAccountVGPayGetAssetsRecordPageList> _parser = new pb::MessageParser<PBReqAccountVGPayGetAssetsRecordPageList>(() => new PBReqAccountVGPayGetAssetsRecordPageList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVGPayGetAssetsRecordPageList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetAssetsRecordPageList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetAssetsRecordPageList(PBReqAccountVGPayGetAssetsRecordPageList other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      token_ = other.token_;
      assetsID_ = other.assetsID_;
      assetsRecordType_ = other.assetsRecordType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayGetAssetsRecordPageList Clone() {
      return new PBReqAccountVGPayGetAssetsRecordPageList(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// VGPay凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "AssetsID" field.</summary>
    public const int AssetsIDFieldNumber = 3;
    private readonly static string AssetsIDDefaultValue = "";

    private string assetsID_;
    /// <summary>
    /// 资产ID (请求用户资产列表里有资产ID) (非必填)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetsID {
      get { return assetsID_ ?? AssetsIDDefaultValue; }
      set {
        assetsID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "AssetsID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsID {
      get { return assetsID_ != null; }
    }
    /// <summary>Clears the value of the "AssetsID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsID() {
      assetsID_ = null;
    }

    /// <summary>Field number for the "AssetsRecordType" field.</summary>
    public const int AssetsRecordTypeFieldNumber = 4;
    private readonly static uint AssetsRecordTypeDefaultValue = 0;

    private uint assetsRecordType_;
    /// <summary>
    /// 资产数据类型(1充币，2充值，3提币，4提现，5系统赠送，6转入，7转出) (非必填)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AssetsRecordType {
      get { if ((_hasBits0 & 1) != 0) { return assetsRecordType_; } else { return AssetsRecordTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        assetsRecordType_ = value;
      }
    }
    /// <summary>Gets whether the "AssetsRecordType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetsRecordType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "AssetsRecordType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetsRecordType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVGPayGetAssetsRecordPageList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVGPayGetAssetsRecordPageList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Token != other.Token) return false;
      if (AssetsID != other.AssetsID) return false;
      if (AssetsRecordType != other.AssetsRecordType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasAssetsID) hash ^= AssetsID.GetHashCode();
      if (HasAssetsRecordType) hash ^= AssetsRecordType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasAssetsID) {
        output.WriteRawTag(26);
        output.WriteString(AssetsID);
      }
      if (HasAssetsRecordType) {
        output.WriteRawTag(32);
        output.WriteUInt32(AssetsRecordType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasAssetsID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetsID);
      }
      if (HasAssetsRecordType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssetsRecordType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVGPayGetAssetsRecordPageList other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasAssetsID) {
        AssetsID = other.AssetsID;
      }
      if (other.HasAssetsRecordType) {
        AssetsRecordType = other.AssetsRecordType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            AssetsID = input.ReadString();
            break;
          }
          case 32: {
            AssetsRecordType = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVGPayGetAssetsRecordPageList : pb::IMessage<PBRespAccountVGPayGetAssetsRecordPageList> {
    private static readonly pb::MessageParser<PBRespAccountVGPayGetAssetsRecordPageList> _parser = new pb::MessageParser<PBRespAccountVGPayGetAssetsRecordPageList>(() => new PBRespAccountVGPayGetAssetsRecordPageList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVGPayGetAssetsRecordPageList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetAssetsRecordPageList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetAssetsRecordPageList(PBRespAccountVGPayGetAssetsRecordPageList other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayGetAssetsRecordPageList Clone() {
      return new PBRespAccountVGPayGetAssetsRecordPageList(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private readonly static string ListDefaultValue = "";

    private string list_;
    /// <summary>
    /// json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string List {
      get { return list_ ?? ListDefaultValue; }
      set {
        list_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasList {
      get { return list_ != null; }
    }
    /// <summary>Clears the value of the "list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearList() {
      list_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVGPayGetAssetsRecordPageList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVGPayGetAssetsRecordPageList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (List != other.List) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasList) hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasList) {
        output.WriteRawTag(18);
        output.WriteString(List);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(List);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVGPayGetAssetsRecordPageList other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasList) {
        List = other.List;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            List = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// VHKD 自动兑换为 Money
  /// </summary>
  public sealed partial class PBReqAccountVGPayVhkdToMoney : pb::IMessage<PBReqAccountVGPayVhkdToMoney> {
    private static readonly pb::MessageParser<PBReqAccountVGPayVhkdToMoney> _parser = new pb::MessageParser<PBReqAccountVGPayVhkdToMoney>(() => new PBReqAccountVGPayVhkdToMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountVGPayVhkdToMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayVhkdToMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayVhkdToMoney(PBReqAccountVGPayVhkdToMoney other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      token_ = other.token_;
      oid_ = other.oid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountVGPayVhkdToMoney Clone() {
      return new PBReqAccountVGPayVhkdToMoney(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// VGPay凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "Token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "Oid" field.</summary>
    public const int OidFieldNumber = 3;
    private readonly static string OidDefaultValue = "";

    private string oid_;
    /// <summary>
    /// 订单ID,推送里的字符串就是OID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Oid {
      get { return oid_ ?? OidDefaultValue; }
      set {
        oid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Oid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOid {
      get { return oid_ != null; }
    }
    /// <summary>Clears the value of the "Oid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOid() {
      oid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountVGPayVhkdToMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountVGPayVhkdToMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Token != other.Token) return false;
      if (Oid != other.Oid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasOid) hash ^= Oid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasOid) {
        output.WriteRawTag(26);
        output.WriteString(Oid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasOid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Oid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountVGPayVhkdToMoney other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasOid) {
        Oid = other.Oid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Oid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountVGPayVhkdToMoney : pb::IMessage<PBRespAccountVGPayVhkdToMoney> {
    private static readonly pb::MessageParser<PBRespAccountVGPayVhkdToMoney> _parser = new pb::MessageParser<PBRespAccountVGPayVhkdToMoney>(() => new PBRespAccountVGPayVhkdToMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountVGPayVhkdToMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayVhkdToMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayVhkdToMoney(PBRespAccountVGPayVhkdToMoney other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountVGPayVhkdToMoney Clone() {
      return new PBRespAccountVGPayVhkdToMoney(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountVGPayVhkdToMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountVGPayVhkdToMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountVGPayVhkdToMoney other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取支付通道状态
  /// </summary>
  public sealed partial class PBReqGetPayStatus : pb::IMessage<PBReqGetPayStatus> {
    private static readonly pb::MessageParser<PBReqGetPayStatus> _parser = new pb::MessageParser<PBReqGetPayStatus>(() => new PBReqGetPayStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqGetPayStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetPayStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetPayStatus(PBReqGetPayStatus other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetPayStatus Clone() {
      return new PBReqGetPayStatus(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqGetPayStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqGetPayStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqGetPayStatus other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBPayStatusList : pb::IMessage<PBPayStatusList> {
    private static readonly pb::MessageParser<PBPayStatusList> _parser = new pb::MessageParser<PBPayStatusList>(() => new PBPayStatusList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBPayStatusList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBPayStatusList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBPayStatusList(PBPayStatusList other) : this() {
      _hasBits0 = other._hasBits0;
      payId_ = other.payId_;
      name_ = other.name_;
      status_ = other.status_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBPayStatusList Clone() {
      return new PBPayStatusList(this);
    }

    /// <summary>Field number for the "payId" field.</summary>
    public const int PayIdFieldNumber = 1;
    private readonly static uint PayIdDefaultValue = 0;

    private uint payId_;
    /// <summary>
    /// 支付通道ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PayId {
      get { if ((_hasBits0 & 1) != 0) { return payId_; } else { return PayIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payId_ = value;
      }
    }
    /// <summary>Gets whether the "payId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPayId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// 通道名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private readonly static uint StatusDefaultValue = 0;

    private uint status_;
    /// <summary>
    /// 通道状态1通道可用,2通道不在可用时间,3通道维护
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 4;
    private readonly static string MsgDefaultValue = "";

    private string msg_;
    /// <summary>
    /// 描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_ ?? MsgDefaultValue; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "msg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMsg {
      get { return msg_ != null; }
    }
    /// <summary>Clears the value of the "msg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBPayStatusList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBPayStatusList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayId != other.PayId) return false;
      if (Name != other.Name) return false;
      if (Status != other.Status) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayId) hash ^= PayId.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasMsg) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPayId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PayId);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteUInt32(Status);
      }
      if (HasMsg) {
        output.WriteRawTag(34);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPayId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PayId);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Status);
      }
      if (HasMsg) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBPayStatusList other) {
      if (other == null) {
        return;
      }
      if (other.HasPayId) {
        PayId = other.PayId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasMsg) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayId = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Status = input.ReadUInt32();
            break;
          }
          case 34: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespGetPayStatus : pb::IMessage<PBRespGetPayStatus> {
    private static readonly pb::MessageParser<PBRespGetPayStatus> _parser = new pb::MessageParser<PBRespGetPayStatus>(() => new PBRespGetPayStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespGetPayStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetPayStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetPayStatus(PBRespGetPayStatus other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetPayStatus Clone() {
      return new PBRespGetPayStatus(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pbcmd.PBPayStatusList> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::Pbcmd.PBPayStatusList.Parser);
    private readonly pbc::RepeatedField<global::Pbcmd.PBPayStatusList> list_ = new pbc::RepeatedField<global::Pbcmd.PBPayStatusList>();
    /// <summary>
    /// 列表内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbcmd.PBPayStatusList> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespGetPayStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespGetPayStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespGetPayStatus other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 判断本次改名是否需要收费
  /// </summary>
  public sealed partial class PBReqAccountIsChargeChangeName : pb::IMessage<PBReqAccountIsChargeChangeName> {
    private static readonly pb::MessageParser<PBReqAccountIsChargeChangeName> _parser = new pb::MessageParser<PBReqAccountIsChargeChangeName>(() => new PBReqAccountIsChargeChangeName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqAccountIsChargeChangeName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountIsChargeChangeName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountIsChargeChangeName(PBReqAccountIsChargeChangeName other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqAccountIsChargeChangeName Clone() {
      return new PBReqAccountIsChargeChangeName(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqAccountIsChargeChangeName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqAccountIsChargeChangeName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqAccountIsChargeChangeName other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespAccountIsChargeChangeName : pb::IMessage<PBRespAccountIsChargeChangeName> {
    private static readonly pb::MessageParser<PBRespAccountIsChargeChangeName> _parser = new pb::MessageParser<PBRespAccountIsChargeChangeName>(() => new PBRespAccountIsChargeChangeName());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespAccountIsChargeChangeName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountIsChargeChangeName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountIsChargeChangeName(PBRespAccountIsChargeChangeName other) : this() {
      _hasBits0 = other._hasBits0;
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespAccountIsChargeChangeName Clone() {
      return new PBRespAccountIsChargeChangeName(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private readonly static uint MoneyDefaultValue = 0;

    private uint money_;
    /// <summary>
    /// 本次改名需要的费用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Money {
      get { if ((_hasBits0 & 1) != 0) { return money_; } else { return MoneyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        money_ = value;
      }
    }
    /// <summary>Gets whether the "money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespAccountIsChargeChangeName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespAccountIsChargeChangeName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasMoney) {
        output.WriteRawTag(16);
        output.WriteUInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespAccountIsChargeChangeName other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 16: {
            Money = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 用户发起提现金申请
  /// </summary>
  public sealed partial class PBReqFtpayGetLaunchWithdrawFee : pb::IMessage<PBReqFtpayGetLaunchWithdrawFee> {
    private static readonly pb::MessageParser<PBReqFtpayGetLaunchWithdrawFee> _parser = new pb::MessageParser<PBReqFtpayGetLaunchWithdrawFee>(() => new PBReqFtpayGetLaunchWithdrawFee());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqFtpayGetLaunchWithdrawFee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetLaunchWithdrawFee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetLaunchWithdrawFee(PBReqFtpayGetLaunchWithdrawFee other) : this() {
      _hasBits0 = other._hasBits0;
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqFtpayGetLaunchWithdrawFee Clone() {
      return new PBReqFtpayGetLaunchWithdrawFee(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private readonly static uint MoneyDefaultValue = 0;

    private uint money_;
    /// <summary>
    /// 提现金额，单位元，大于100的整数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Money {
      get { if ((_hasBits0 & 1) != 0) { return money_; } else { return MoneyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        money_ = value;
      }
    }
    /// <summary>Gets whether the "money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoney {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoney() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqFtpayGetLaunchWithdrawFee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqFtpayGetLaunchWithdrawFee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (HasMoney) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (HasMoney) {
        output.WriteRawTag(16);
        output.WriteUInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (HasMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqFtpayGetLaunchWithdrawFee other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
          case 16: {
            Money = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespFtpayGetLaunchWithdrawFee : pb::IMessage<PBRespFtpayGetLaunchWithdrawFee> {
    private static readonly pb::MessageParser<PBRespFtpayGetLaunchWithdrawFee> _parser = new pb::MessageParser<PBRespFtpayGetLaunchWithdrawFee>(() => new PBRespFtpayGetLaunchWithdrawFee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespFtpayGetLaunchWithdrawFee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetLaunchWithdrawFee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetLaunchWithdrawFee(PBRespFtpayGetLaunchWithdrawFee other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      limits_ = other.limits_;
      realmoney_ = other.realmoney_;
      fee_ = other.fee_;
      decrlimits_ = other.decrlimits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespFtpayGetLaunchWithdrawFee Clone() {
      return new PBRespFtpayGetLaunchWithdrawFee(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "limits" field.</summary>
    public const int LimitsFieldNumber = 2;
    private readonly static string LimitsDefaultValue = "";

    private string limits_;
    /// <summary>
    /// 拥有的免手续费额度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Limits {
      get { return limits_ ?? LimitsDefaultValue; }
      set {
        limits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "limits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimits {
      get { return limits_ != null; }
    }
    /// <summary>Clears the value of the "limits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimits() {
      limits_ = null;
    }

    /// <summary>Field number for the "realmoney" field.</summary>
    public const int RealmoneyFieldNumber = 3;
    private readonly static string RealmoneyDefaultValue = "";

    private string realmoney_;
    /// <summary>
    /// 真实到账金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Realmoney {
      get { return realmoney_ ?? RealmoneyDefaultValue; }
      set {
        realmoney_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "realmoney" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRealmoney {
      get { return realmoney_ != null; }
    }
    /// <summary>Clears the value of the "realmoney" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRealmoney() {
      realmoney_ = null;
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 4;
    private readonly static string FeeDefaultValue = "";

    private string fee_;
    /// <summary>
    /// 本次手续费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fee {
      get { return fee_ ?? FeeDefaultValue; }
      set {
        fee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fee" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFee {
      get { return fee_ != null; }
    }
    /// <summary>Clears the value of the "fee" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFee() {
      fee_ = null;
    }

    /// <summary>Field number for the "decrlimits" field.</summary>
    public const int DecrlimitsFieldNumber = 5;
    private readonly static string DecrlimitsDefaultValue = "";

    private string decrlimits_;
    /// <summary>
    /// 本次消耗的额度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Decrlimits {
      get { return decrlimits_ ?? DecrlimitsDefaultValue; }
      set {
        decrlimits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "decrlimits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDecrlimits {
      get { return decrlimits_ != null; }
    }
    /// <summary>Clears the value of the "decrlimits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDecrlimits() {
      decrlimits_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespFtpayGetLaunchWithdrawFee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespFtpayGetLaunchWithdrawFee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Limits != other.Limits) return false;
      if (Realmoney != other.Realmoney) return false;
      if (Fee != other.Fee) return false;
      if (Decrlimits != other.Decrlimits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasLimits) hash ^= Limits.GetHashCode();
      if (HasRealmoney) hash ^= Realmoney.GetHashCode();
      if (HasFee) hash ^= Fee.GetHashCode();
      if (HasDecrlimits) hash ^= Decrlimits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasLimits) {
        output.WriteRawTag(18);
        output.WriteString(Limits);
      }
      if (HasRealmoney) {
        output.WriteRawTag(26);
        output.WriteString(Realmoney);
      }
      if (HasFee) {
        output.WriteRawTag(34);
        output.WriteString(Fee);
      }
      if (HasDecrlimits) {
        output.WriteRawTag(42);
        output.WriteString(Decrlimits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasLimits) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Limits);
      }
      if (HasRealmoney) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Realmoney);
      }
      if (HasFee) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fee);
      }
      if (HasDecrlimits) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Decrlimits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespFtpayGetLaunchWithdrawFee other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasLimits) {
        Limits = other.Limits;
      }
      if (other.HasRealmoney) {
        Realmoney = other.Realmoney;
      }
      if (other.HasFee) {
        Fee = other.Fee;
      }
      if (other.HasDecrlimits) {
        Decrlimits = other.Decrlimits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Limits = input.ReadString();
            break;
          }
          case 26: {
            Realmoney = input.ReadString();
            break;
          }
          case 34: {
            Fee = input.ReadString();
            break;
          }
          case 42: {
            Decrlimits = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取随机默认头像
  /// </summary>
  public sealed partial class PBReqGetAutoHeadImg : pb::IMessage<PBReqGetAutoHeadImg> {
    private static readonly pb::MessageParser<PBReqGetAutoHeadImg> _parser = new pb::MessageParser<PBReqGetAutoHeadImg>(() => new PBReqGetAutoHeadImg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqGetAutoHeadImg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetAutoHeadImg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetAutoHeadImg(PBReqGetAutoHeadImg other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqGetAutoHeadImg Clone() {
      return new PBReqGetAutoHeadImg(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqGetAutoHeadImg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqGetAutoHeadImg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqGetAutoHeadImg other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespGetAutoHeadImg : pb::IMessage<PBRespGetAutoHeadImg> {
    private static readonly pb::MessageParser<PBRespGetAutoHeadImg> _parser = new pb::MessageParser<PBRespGetAutoHeadImg>(() => new PBRespGetAutoHeadImg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespGetAutoHeadImg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetAutoHeadImg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetAutoHeadImg(PBRespGetAutoHeadImg other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespGetAutoHeadImg Clone() {
      return new PBRespGetAutoHeadImg(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// 随机默认头像地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespGetAutoHeadImg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespGetAutoHeadImg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespGetAutoHeadImg other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 验证当前渠道版本是否处于支付禁用中
  /// </summary>
  public sealed partial class PBReqCheckPayDisable : pb::IMessage<PBReqCheckPayDisable> {
    private static readonly pb::MessageParser<PBReqCheckPayDisable> _parser = new pb::MessageParser<PBReqCheckPayDisable>(() => new PBReqCheckPayDisable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBReqCheckPayDisable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqCheckPayDisable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqCheckPayDisable(PBReqCheckPayDisable other) : this() {
      comm_ = other.comm_ != null ? other.comm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBReqCheckPayDisable Clone() {
      return new PBReqCheckPayDisable(this);
    }

    /// <summary>Field number for the "comm" field.</summary>
    public const int CommFieldNumber = 1;
    private global::Pbcmd.PBCommParam comm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommParam Comm {
      get { return comm_; }
      set {
        comm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBReqCheckPayDisable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBReqCheckPayDisable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Comm, other.Comm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (comm_ != null) hash ^= Comm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (comm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Comm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (comm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBReqCheckPayDisable other) {
      if (other == null) {
        return;
      }
      if (other.comm_ != null) {
        if (comm_ == null) {
          Comm = new global::Pbcmd.PBCommParam();
        }
        Comm.MergeFrom(other.Comm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (comm_ == null) {
              Comm = new global::Pbcmd.PBCommParam();
            }
            input.ReadMessage(Comm);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRespCheckPayDisable : pb::IMessage<PBRespCheckPayDisable> {
    private static readonly pb::MessageParser<PBRespCheckPayDisable> _parser = new pb::MessageParser<PBRespCheckPayDisable>(() => new PBRespCheckPayDisable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRespCheckPayDisable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbcmd.AccountReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespCheckPayDisable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespCheckPayDisable(PBRespCheckPayDisable other) : this() {
      ret_ = other.ret_ != null ? other.ret_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRespCheckPayDisable Clone() {
      return new PBRespCheckPayDisable(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private global::Pbcmd.PBCommResult ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbcmd.PBCommResult Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRespCheckPayDisable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRespCheckPayDisable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ret, other.Ret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ret_ != null) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ret_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRespCheckPayDisable other) {
      if (other == null) {
        return;
      }
      if (other.ret_ != null) {
        if (ret_ == null) {
          Ret = new global::Pbcmd.PBCommResult();
        }
        Ret.MergeFrom(other.Ret);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ret_ == null) {
              Ret = new global::Pbcmd.PBCommResult();
            }
            input.ReadMessage(Ret);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
